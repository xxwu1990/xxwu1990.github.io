<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Relocation truncated to fit解决办法</title>
    <url>/2021/11/09/Relocation-truncated-to-fit%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>这种情况一般出现在汇编代码中。有些跳转指令的跳转范围很小。而当要跳转到的地址超出了范围，那么就会报错！</p>
<p>该错误多由程序中使用过大的数组导致，可采用<code>-mcmodel</code>选项分配内存空间。<strong>注意：</strong>该方法在linux 64位系统上测试有效，windows系统minGW64编译器只支持<a href="https://sourceforge.net/p/mingw-w64/bugs/278/#f75e" target="_blank" rel="noopener"><code>mcmodel=small</code></a></p>
<p>对于x86：</p>
<p>最终的原因是使用参数-mcmodel=small，只能使用最高2G最低2G的内存空间，如果想使用更多的大内存空间，应该使用-mcmodel=large。</p>
<p><strong>mcmodel</strong></p>
<p>Tells the compiler to use a specific memory model to generate code and store data.</p>
<p>IDE Equivalent</p>
<p>None</p>
<p>Architectures</p>
<p>Intel 64 architecture</p>
<p><strong>Syntax</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Linux:</th>
<th>-mcmodel=<strong>mem_model</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Mac OS:</td>
<td>None</td>
</tr>
<tr>
<td>Windows:</td>
<td>None</td>
</tr>
</tbody>
</table>
</div>
<p>Arguments</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>mem_model</strong></th>
<th></th>
<th>Is the memory model to use. Possible values are:</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>small</td>
<td>Tells the compiler to restrict code and data to the first 2GB of address space. All accesses of code and data can be done with Instruction Pointer (IP)-relative addressing.</td>
</tr>
<tr>
<td></td>
<td>medium</td>
<td>Tells the compiler to restrict code to the first 2GB; it places no memory restriction on data. Accesses of code can be done with IP-relative addressing, but accesses of data must be done with absolute addressing.</td>
</tr>
<tr>
<td></td>
<td>large</td>
<td>Places no memory restriction on code or data. All accesses of code and data must be done with absolute addressing.</td>
</tr>
</tbody>
</table>
</div>
<p><strong>Default</strong></p>
<p>-mcmodel=small or /Qmcmodel=small</p>
<p>On systems using Intel 64 architecture, the compiler restricts code and data to the first 2GB of address space. Instruction Pointer (IP)-relative addressing can be used to access code and data. </p>
<p><strong>Description</strong></p>
<p>This option tells the compiler to use a specific memory model to generate code and store data. It can affect code size and performance. If your program has COMMON blocks and local data with a total size smaller than 2GB, -mcmodel=small is sufficient. COMMONs larger than 2GB require -mcmodel=medium or -mcmodel=large. Allocation of memory larger than 2GB can be done with any setting of -mcmodel.</p>
<p>IP-relative addressing requires only 32 bits, whereas absolute addressing requires 64-bits. IP-relative addressing is somewhat faster. So, the small memory model has the least impact on performance.</p>
<p><strong>NOTE</strong></p>
<p>When you specify -mcmodel=medium or -mcmodel=large, you must also specify compiler option -shared-intel to ensure that the correct dynamic versions of the Intel run-time libraries are used.</p>
<p>When shared objects (.so files) are built, position-independent code (PIC) is specified so that a single .so file can support all three memory models. The compiler driver adds compiler option -fpic to implement PIC.</p>
<p>However, you must specify a memory model for code that is to be placed in a static library or code that will be linked statically.</p>
<p><strong>Alternate Options</strong></p>
<p>None</p>
<p><strong>See Also</strong></p>
<p><a href="https://www.cita.utoronto.ca/~merz/intel_f10b/main_for/mergedProjects/copts_for/common_options/option_i_dynamic.htm" target="_blank" rel="noopener">shared-intel</a> compiler option</p>
<p><a href="https://www.cita.utoronto.ca/~merz/intel_f10b/main_for/mergedProjects/copts_for/common_options/option_fpic.htm" target="_blank" rel="noopener">fpic</a> compiler option</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>fortran</tag>
      </tags>
  </entry>
  <entry>
    <title>Xray+VLESS+XTLS+NginxSNI分流/443端口复用</title>
    <url>/2021/08/22/Xray+VLESS+XTLS+NginxSNI%E5%88%86%E6%B5%81443%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8/</url>
    <content><![CDATA[<p>本文转自<a href="https://lala.im/7666.html" target="_blank" rel="noopener">荒岛</a><a id="more"></a></p>
<p>我这两年一直都用的Vmess，也挺好的没出什么问题，就是偶尔碰到“过节”的时候，比如国庆啊啥的，会经常阻断我。平时都挺正常的。。</p>
<p>但是不知道从什么时候开始，大概也就最近半年吧，我这里的网络也不知道是什么情况，一天要被阻断无数次。。偶尔来一次，一次来个几分钟也还可以接受，现在天天都来，就有点难受了。。</p>
<p>最近这半个月更是出了个莫名其妙的问题，我手机上面的配置从来没改动过，但是就经常连不上，而且一连不上可能是几天都连不上。。</p>
<p>所以我想试着换个方法，看看能不能缓解我这个问题。</p>
<p>认真考虑了一番，我决定试试目前比较新的Vless+XTLS，正好也尝尝鲜，折腾一下嘛。</p>
<p>由于我之前也配置过Vless，我知道这个协议本身没有加密最好配TLS用，所以一般这个协议是直接用443端口，但是我几台VPS上面肯定还要放点其他的东西，直接把443端口给占了，我就不能拿来建站了。</p>
<p>当然直接让Vless走别的端口是最简单的，比如8443之类的，但是这样的话我总觉得有点不够优雅。。所以我在想一个可以顾全大局的配置方案，那么最终我目前用的就是这篇文章内的方案了：用Nginx做SNI分流，让443端口可以复用，这样一来就完美解决了443端口的问题。</p>
<p>废话就不多说了，下面就把我部署过程写上来，如果对你有帮助，那真是极好的。</p>
<p>首先需要安装nginx和nginx的stream模块，这个模块在Debian上有软件包可以直接安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt -y update</span><br><span class="line">apt -y install curl git nginx libnginx-mod-stream python-certbot-nginx</span><br></pre></td></tr></table></figure>
<p>接下来安装xray，由于我的机器内之前装过旧版的v2ray，所以我先把旧版的这些文件删了：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -rf &#x2F;usr&#x2F;bin&#x2F;v2ray &#x2F;var&#x2F;log&#x2F;v2ray &#x2F;etc&#x2F;v2ray &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;v2ray.service</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>
<p>如果你是全新的机器那就直接执行下面这个脚本即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;XTLS&#x2F;Xray-install&#x2F;main&#x2F;install-release.sh)</span><br></pre></td></tr></table></figure>
<p>接下来我们首先编辑nginx的主配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</span><br></pre></td></tr></table></figure>
<p>在http块的外部加入如下配置（也就是下面的这个配置独立出来：）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stream &#123;</span><br><span class="line">        map $ssl_preread_server_name $imlala_xray &#123;</span><br><span class="line">                xtls.imlala.best xtls;</span><br><span class="line">                wordpress.imlala.best wordpress;</span><br><span class="line">                typecho.imlala.best typecho;</span><br><span class="line">        &#125;</span><br><span class="line">        upstream xtls &#123;</span><br><span class="line">                server 127.0.0.1:50001; # xray服务端口</span><br><span class="line">        &#125;</span><br><span class="line">        upstream wordpress &#123;</span><br><span class="line">                server 127.0.0.1:50010; # 你的第一个网站的ssl端口</span><br><span class="line">        &#125;</span><br><span class="line">        upstream typecho &#123;</span><br><span class="line">                server 127.0.0.1:50011; # 你的第二个网站的ssl端口</span><br><span class="line">        &#125;</span><br><span class="line">        server &#123;</span><br><span class="line">                listen 443      reuseport;</span><br><span class="line">                listen [::]:443 reuseport;</span><br><span class="line">                proxy_pass      $imlala_xray;</span><br><span class="line">                ssl_preread     on;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面这个配置有3个域名：</p>
<p>1.xtls.imlala.best</p>
<p>2.wordpress.imlala.best</p>
<p>3.typecho.imlala.best</p>
<p>第一个upstream的域名是必须的，也就是你需要更换这个域名为你自己的。</p>
<p>而第二第三到第N个upstream后面的是其他网站的域名，如果你在这台服务器上有运行其他网站并且绑定了不同域名那这里就改成你自己的域名，没有的话可以忽略。这里只是做一个SNI分流的示范。</p>
<p>特别需要注意的是，由于在stream块内监听了443端口，其他nginx的配置文件内不能再有监听443端口的listen，否则nginx启动会报错。</p>
<p>除此之外SNI分流如果要正常工作的话，前提是你的其他nginx配置文件内原本监听443端口的listen需要改为你在upstream内指定的端口。</p>
<p>接下来搭建一个用于vless的回落站点，也可以说是伪装站点，这里随便搞个静态页面就行，我这里就弄了个小游戏：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;tusenpo&#x2F;FlappyFrog.git flappyfrog</span><br></pre></td></tr></table></figure>
<p>注：这个游戏过于暴力，建议你们不要使用，可能会导致域名加速被墙。。。</p>
<p>现在新建一个nginx配置文件，用于回落站点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;fallback.conf</span><br></pre></td></tr></table></figure>
<p>写入如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name xtls.imlala.best;</span><br><span class="line">        if ($host &#x3D; xtls.imlala.best) &#123;</span><br><span class="line">                return 301 https:&#x2F;&#x2F;$host$request_uri;</span><br><span class="line">        &#125;</span><br><span class="line">        return 404;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen 127.0.0.1:23333;</span><br><span class="line">        server_name xtls.imlala.best;</span><br><span class="line">        index index.html;</span><br><span class="line">        root &#x2F;var&#x2F;www&#x2F;html&#x2F;flappyfrog;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里需要注意是，回落站点不需要配置ssl，如果vless将请求回落到这个站点的话，这个站点是自动支持ssl的。</p>
<p>你只需要保证回落站点的server_name和stream块内配置的xray服务端域名是同一个即可。例如本文内的：xtls.imlala.best</p>
<p>此外，在之前就说过listen不能监听443端口，这里你可以改任意一个其他没有占用的端口，例如上面这个配置中的23333端口，那么23333端口就是回落端口。</p>
<p>现在我们需要使用certbot签发一个ssl证书，之前说过回落站点不需要ssl，所以这里的certbot使用下面的命令，仅生成证书不修改nginx的配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">certbot certonly --nginx</span><br></pre></td></tr></table></figure>
<p>将生成好的证书复制到xray的配置目录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;xtls.imlala.best&#x2F;fullchain.pem &#x2F;usr&#x2F;local&#x2F;etc&#x2F;xray&#x2F;fullchain.pem</span><br><span class="line">cp &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;xtls.imlala.best&#x2F;privkey.pem &#x2F;usr&#x2F;local&#x2F;etc&#x2F;xray&#x2F;privkey.pem</span><br></pre></td></tr></table></figure>
<p>由于xray通过systemd管理，而systemd内的用户是nobody，所以证书的所有者也要改为nobody，否则xray没有权限读取证书文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chown nobody:nogroup &#x2F;usr&#x2F;local&#x2F;etc&#x2F;xray&#x2F;fullchain.pem</span><br><span class="line">chown nobody:nogroup &#x2F;usr&#x2F;local&#x2F;etc&#x2F;xray&#x2F;privkey.pem</span><br></pre></td></tr></table></figure>
<p>生成一个uuid，复制下来：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;uuid</span><br></pre></td></tr></table></figure>
<p>编辑xray的配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;usr&#x2F;local&#x2F;etc&#x2F;xray&#x2F;config.json</span><br></pre></td></tr></table></figure>
<p>清空里面的配置，改为如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;log&quot;: &#123;</span><br><span class="line">        &quot;loglevel&quot;: &quot;warning&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;inbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;listen&quot;: &quot;127.0.0.1&quot;, # 仅监听在本地防止探测到下面的50001端口</span><br><span class="line">            &quot;port&quot;: 50001, # 这里的端口对应nginx内的upstream端口</span><br><span class="line">            &quot;protocol&quot;: &quot;vless&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;clients&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;id&quot;: &quot;7f46753a-6a4b-4284-94c0-760340f96f1e&quot;, # 填写你的UUID</span><br><span class="line">                        &quot;flow&quot;: &quot;xtls-rprx-direct&quot;,</span><br><span class="line">                        &quot;level&quot;: 0</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;decryption&quot;: &quot;none&quot;,</span><br><span class="line">                &quot;fallbacks&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;dest&quot;: &quot;23333&quot; # 回落站点的端口号</span><br><span class="line">                    &#125;</span><br><span class="line">                 ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;streamSettings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;tcp&quot;,</span><br><span class="line">                &quot;security&quot;: &quot;xtls&quot;,</span><br><span class="line">                &quot;xtlsSettings&quot;: &#123;</span><br><span class="line">                    &quot;alpn&quot;: [</span><br><span class="line">                        &quot;http&#x2F;1.1&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    &quot;certificates&quot;: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;certificateFile&quot;: &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;xray&#x2F;fullchain.pem&quot;, # 你的域名证书</span><br><span class="line">                            &quot;keyFile&quot;: &quot;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;xray&#x2F;privkey.pem&quot; # 你的证书私钥</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;outbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;protocol&quot;: &quot;freedom&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>确认上面这些配置无误后，设置nginx/xray开机自启：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable nginx xray</span><br></pre></td></tr></table></figure>
<p>重启nginx和xray使新的配置生效：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx xray</span><br></pre></td></tr></table></figure>
<p>服务端到这里就全部完成了，接下来是客户端。windows客户端推荐使用v2rayn。</p>
<p>v2rayn目前有一个问题是，v2ray-core在4.33已经移除了这个协议，你需要手动把xray的core下载解压到v2rayn的根目录：</p>
<p><a href="https://github.com/XTLS/Xray-core/releases/download/v1.1.4/Xray-windows-64.zip" target="_blank" rel="noopener">https://github.com/XTLS/Xray-core/releases/download/v1.1.4/Xray-windows-64.zip</a></p>
<p>不需要删除原来的v2ray.exe也不需要重命名xray.exe，解压就OK了，参考这里：</p>
<p><a href="https://github.com/2dust/v2rayN/issues/1181" target="_blank" rel="noopener">https://github.com/2dust/v2rayN/issues/1181</a></p>
<p>然后打开v2rayn添加vless服务器：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-5/20210822142825.png" alt=""></p>
<p>如果按照这篇文章部署，并且确认你的配置无误的话还是连接不上，首先检查你的服务器防火墙是否放行了80/443端口。</p>
<p>你还可以简单验证一下回落配置，用浏览器直接访问你的域名，如果正常的话应该能访问到这个小游戏：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2021/20210822142935.png" alt=""></p>
<p> 这套配置比较繁琐，如果你在部署的过程遇到了什么问题，评论的时候请不要把一大坨xray或者nginx配置粘贴上来回复，这样不方便阅读，更不方便别人解决你的问题，你应该找一个在线的剪切板服务，把配置代码写到剪切板里面，评论的时候给出剪切板的地址。 </p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>docker+nginx搭建wordpress并启用https</title>
    <url>/2021/07/23/docker+nginx%E6%90%AD%E5%BB%BAwordpress%E5%B9%B6%E5%90%AF%E7%94%A8https/</url>
    <content><![CDATA[<p>相比在实体机上创建wordpress博客的繁琐，采用docker的方式更简单且方便管理，这里简单介绍其步骤及注意事项，需要环境有linux os， docker和nginx。<a id="more"></a></p>
<h2 id="Docker建立wordpress和mysql-db"><a href="#Docker建立wordpress和mysql-db" class="headerlink" title="Docker建立wordpress和mysql_db"></a>Docker建立wordpress和mysql_db</h2><p>新建<code>stack.yml</code>文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8000</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> <span class="string">exampleuser</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> <span class="string">examplepass</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_NAME:</span> <span class="string">wordpress</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">wordpress:/var/www/html</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">exampleuser</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">examplepass</span></span><br><span class="line">      <span class="attr">MYSQL_RANDOM_ROOT_PASSWORD:</span> <span class="string">'1'</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">  <span class="attr">db:</span></span><br></pre></td></tr></table></figure>
<p>其中8000为docker映射80端口，根据实际情况更改。</p>
<p>在同一目录新建文件<code>uploads.ini</code>作为php配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file_uploads &#x3D; On</span><br><span class="line">memory_limit &#x3D; 500M</span><br><span class="line">upload_max_filesize &#x3D; 30M</span><br><span class="line">post_max_size &#x3D; 30M</span><br><span class="line">max_execution_time &#x3D; 600</span><br></pre></td></tr></table></figure>
<p>执行创建命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker-compose -f stack.yml up -d</span><br></pre></td></tr></table></figure>
<p>若要进入docker容器内操作，运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it [container] bash</span><br></pre></td></tr></table></figure>
<h2 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h2><p>若只需要80端口访问：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  pandahero.ml;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">         proxy_pass         http:&#x2F;&#x2F;127.0.0.1:8111;</span><br><span class="line">         proxy_redirect     off;</span><br><span class="line">         proxy_set_header   Host $host;</span><br><span class="line">         proxy_set_header   X-Real-IP $remote_addr;</span><br><span class="line">         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">         proxy_set_header   X-Forwarded-Host $server_name;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>若需要443端口访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  pandahero.ml;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">         proxy_pass         http:&#x2F;&#x2F;127.0.0.1:8111;</span><br><span class="line">         proxy_redirect     off;</span><br><span class="line">         proxy_set_header   Host $host;</span><br><span class="line">         proxy_set_header   X-Real-IP $remote_addr;</span><br><span class="line">         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">         proxy_set_header   X-Forwarded-Host $server_name;</span><br><span class="line">         proxy_set_header   X-Forwarded-Proto https;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>并用certbot申请ssl证书</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">certbot --nginx</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>azure开通带有ipv6的虚拟机(面板操作 非负载均衡方法)</title>
    <url>/2021/05/14/azure%E5%BC%80%E9%80%9A%E5%B8%A6%E6%9C%89ipv6%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA(%E9%9D%A2%E6%9D%BF%E6%93%8D%E4%BD%9C-%E9%9D%9E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%96%B9%E6%B3%95)/</url>
    <content><![CDATA[<p>最近想刷刷pt, 刚好手里有几个闲置的azure100账号, 美滋滋的开通服务器, 配置环境开始刷, 可是发现pt站点把azure标记成盒子了. 突然想到了azure好像已经可以用ipv6了, ipv6应该就没有被标记了盒子了. 不过, azure的的操作太反人性化了~~, 加上现在azure的ipv6还在内测阶段, 各种提示还不完善, 折腾了两天, 终于成功的使用面板开通了ipv6. pt开刷!</p>
<a id="more"></a>
<h2 id="创建资源组"><a href="#创建资源组" class="headerlink" title="创建资源组"></a>创建资源组</h2><p>我们先创建一个资源组, 方便我们区分与操作</p>
<ol>
<li>首先进入azure面板主页,地址 <a href="https://portal.azure.com/#home" target="_blank" rel="noopener">portal.azure.com/#home</a></li>
<li>找到 <strong>资源组</strong>, 直达地址: <a href="https://portal.azure.com/#blade/HubsExtension/BrowseResourceGroups" target="_blank" rel="noopener">portal.azure.com/#blade/HubsExtension/BrowseResourceGroups</a></li>
<li>然后点击添加, 进入添加页面, 添加一个资源组 添加页面地址: <a href="https://portal.azure.com/#create/Microsoft.ResourceGroup" target="_blank" rel="noopener">portal.azure.com/#create/Microsoft.ResourceGroup</a></li>
<li>然后填写相关的信息即可创建资源组</li>
</ol>
<h2 id="创建vnet-虚拟网络-重要"><a href="#创建vnet-虚拟网络-重要" class="headerlink" title="创建vnet(虚拟网络) !重要"></a>创建vnet(虚拟网络) !重要</h2><p>这一步是使用ipv6的一个关键步骤</p>
<ol>
<li>在资源组内进入你的资源组,点击<strong>创建资源</strong></li>
<li>然后搜索<strong>虚拟网络</strong>(不同语言叫法不一样, 英语搜索vnet).</li>
<li>找到下面这个<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210514143432.png" alt=""><br>我的理解是这个的作用是创建一个nat.</li>
<li>填写相关信息, 到填写 <strong>ip地址时</strong>, 勾选上添加ipv6地址空间, 然后在默认子网里添加ipv6子网地址, 可以参考我的:<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210514143554.png" alt=""></li>
</ol>
<h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><ol>
<li><p>进入首页—资源组—你刚刚创建的资源组, 点击 <strong>新建</strong>, 然后搜索<strong>虚拟机</strong>, 进入新建虚拟机的页面, 直达地址: <a href="https://portal.azure.com/#create/Microsoft.VirtualMachine-ARM" target="_blank" rel="noopener">portal.azure.com/#create/Microsoft.VirtualMachine-ARM</a>.</p>
</li>
<li><p>在基本里输入相关信息, 在选择OS下面点击“浏览所有专用和公用映像”, 你可以在市场里搜索你想要的镜像, 不同的镜像价格不同, 我是直接在搜索栏搜索centos, 然后选择的是”CentOS-based 7.5”, 然后大小选择Standard_B1s(就是每月免费750小时的那个配置), 然后设置好管理员账户后点击下一步进入设置磁盘.</p>
</li>
<li><p>在磁盘选项里的”OS磁盘大小”, 选择 <strong>重设大小为64GB(P6)免费账户可用</strong>, 以薅干azure(坏笑)</p>
<blockquote>
<p>因为azure给我们的是两块64G大小的免费OS盘, 如果不把OS盘设置为64G的话, 这个盘是会额外收费的. 如果在创建的时候忘了改, 可以在创建完成后, 先停止机器, 然后去磁盘里手动改为64G.</p>
</blockquote>
<p>如果需要创建一个额外的磁盘的话, 可以在下面数据磁盘处建立一个新磁盘.<br>在创建完成后点击下一步设置网络.</p>
</li>
<li><p>在设置网络这里有挺多需要注意的地方. 首先, 在虚拟网络处选择你刚刚建立的vnet(有时azure后台反应慢这里可能选不了刚刚建立的vnet, 这时再稍等等然后刷新一下网页就出来了), 然后公用ip选无,不要新建. 然后有一个比较重要的地方, <strong>nic网络安全组千万不要图省事选无</strong>, 因为ipv6属于标准sku, 而标准sku的默认策略为阻止所有出站及入站, 选无的话你的虚拟机就连不上网了. 如果想放开所有端口的话, 你得选择高级, 然后点击建立, 在这个安全组内添加入站规则和出站规则, 端口范围写*, 协议选any.<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210514143651.png" alt=""></p>
</li>
<li><p>弄完后点击查看+创建然后点击创建即可.</p>
</li>
</ol>
<h2 id="创建网络接口-重要"><a href="#创建网络接口-重要" class="headerlink" title="创建网络接口 !重要"></a>创建网络接口 !重要</h2><p>由于创建虚拟机的时候是不能选择网络接口的, 并且默认的网络接口是不支持ipv6的, 所以我们得自己去创建一个支持ipv6的网络接口, 然后自己附加到虚拟机上去. 我们乘着虚拟机还在部署, 先建立一个网络接口,后面就直接关机附加了.</p>
<ol>
<li><p>同样, 进入刚刚创建的资源组, 点击添加, 在搜索框搜索, 网络接口.</p>
<blockquote>
<p>ps: 在我写时候, 网络接口这里的中文翻译有问题, 会显示疑似法语之类的奇怪文字.</p>
</blockquote>
<p>在填写信息时, 虚拟网络选择刚刚选择的网络, 然后安全组同样选择刚刚创建的那个安全组, <strong>勾选上专用地址(ipv6)</strong>, 大概像这样:<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210514143727.png" alt=""></p>
</li>
</ol>
<ol>
<li><p>创建完成后点击创建即可.</p>
</li>
<li><p>创建完成后我们要给网络接口公网ip, 进入资源组, 找到刚刚创建的那个网络接口, 进去, 找到ip协议配置.</p>
<blockquote>
<p>图里的中文翻译有问题, azure出bug了, 大家主要看一下位置即可</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210514143819.png" alt=""></p>
<p>先点击ipv6那个, 创建公网ipv6, 然后点击第一个图标保存</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210514143854.png" alt="">创建公网ipv6</p>
<p>然后点击公网ipv4那个, 创建公网ipv4, 然后点击第一个图标保存</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210514143940.png" alt="">创建公网ipv4</p>
</li>
</ol>
<blockquote>
<p>注意, 这里v4的SKU必须要选择标准SKU.</p>
</blockquote>
<h2 id="更改网络接口"><a href="#更改网络接口" class="headerlink" title="更改网络接口"></a>更改网络接口</h2><ol>
<li><p>进入资源组, 找到上面创建的虚拟机, 进入.</p>
</li>
<li><p>然后在左边找到点击网络, 然后点击附加网络接口,</p>
<blockquote>
<p>如果这里一直不让选刚刚创建的接口的话, 应该是azure又出bug了(捂脸), 你可以去资源组里把之前创建的那个删了, 然后重新创建一下网络接口, 部署的时候不要乱跳页面, 等提示部署完成后再进行后面的部署. (注意网络安全组, 不然创建好后没有网)</p>
</blockquote>
<p>选择刚刚创建的网络接口, 点击确定.</p>
<blockquote>
<p>如果这时提示错误, 80%都是原来的那个接口有公网ip, 默认接口的ip是基本SKU的, 而有ipv6的是标准SKU的, 两个不同标准的ip不能附加到同一个实例上. 解决方法就是去原来的那个网络接口取消绑定公网ip即可.</p>
</blockquote>
</li>
<li><p>最后点击分离网络接口, 把原来的接口分离. (最后记得在资源组里把这个接口删掉).</p>
</li>
</ol>
<h2 id="在系统里添加ipv6支持"><a href="#在系统里添加ipv6支持" class="headerlink" title="在系统里添加ipv6支持"></a>在系统里添加ipv6支持</h2><blockquote>
<p>我使用的是centos 7.5, 其他的系统请自行查看怎么配置ipv6, 这种方法的ipv6是有一层nat的, 地址分配方式为DHCPV6.</p>
</blockquote>
<ol>
<li><p>编辑<code>/etc/sysconfig/network</code>, 在其中添加以下参数, 以支持ipv6</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NETWORKING_IPV6&#x3D;yes</span><br><span class="line">IPV6_AUTOCONF&#x3D;yes</span><br></pre></td></tr></table></figure>
<p>已经有的注意值是否正确</p>
</li>
<li><p>编辑<code>/etc/sysconfig/network-scripts/ifcfg-eth0</code> 配置ipv6</p>
<blockquote>
<p>有可能你的网卡不叫eth0, 你可以在这个目录下查看你的网卡名字, 或者<code>ifconfig</code>查看</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IPV6INIT&#x3D;yes</span><br><span class="line">IPV6_AUTOCONFI&#x3D;no</span><br><span class="line">DHCPV6C&#x3D;yes</span><br></pre></td></tr></table></figure>
<p>我只贴出了ipv6相关的设置, 其他的请自行设置了.</p>
</li>
</ol>
<p>配置完成后, 输入<code>systemctl restart network</code>重启网络, 然后输入<code>ifconfig</code>查看网络信息即可. 如果看到里面有net6里有你前面设置的内网地址, 即配置成功了 注意有一个net6是本地地址, 那个不算, 应该有两个net6.</p>
<blockquote>
<p>注意, 在azure里ping6其他v6地址是ping不通的, tcping正常, 怀疑现在azure防火墙(安全组)还不能放行通过v6的icmp协议的数据包, tcp, udp是没问题的.</p>
</blockquote>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>Azure</tag>
      </tags>
  </entry>
  <entry>
    <title>如何拥有多个GitHub Pages</title>
    <url>/2021/01/28/%E5%A6%82%E4%BD%95%E6%8B%A5%E6%9C%89%E5%A4%9A%E4%B8%AAGitHub-Pages/</url>
    <content><![CDATA[<p><strong>GitHub Pages 项目站点及绑定子域名的方法记录</strong>(<a href="https://blog.mikelyou.com/2020/07/22/github-pages-project-sites/" target="_blank" rel="noopener">转载</a>)</p>
<p> 今天突发奇想，想要尝试在自己仅有的一个 GitHub 账号下创建多个 GitHub Pages，并将其部署在子域名上。没想到在网上搜索了一下后，发现真的可以做到。本文记录了配置的过程，希望能帮助到有同样需求的人。阅读本文前，请确保你已经创建过自己的 GitHub Pages，如果没有可以参考作者的<a href="https://blog.mikelyou.com/2019/12/27/hello-world/" target="_blank" rel="noopener">这篇博文</a>。 </p>
<a id="more"></a>
<h2 id="场景再现"><a href="#场景再现" class="headerlink" title="场景再现"></a>场景再现</h2><p>搭建了自己的第一个GitHub Pages页面后，可能很多人会有和我一样的想法——<strong>搭建多个GitHub Pages页面</strong>。这些新的页面可以作为博客页面的demo，也可以用来放一些不想放在主要博客的内容（比如ACG相关、日常生活，当然也有人不介意放在一起）。</p>
<p>但是我以前一直以为，<del><strong>每个GitHub账户只能拥有一个GitHub Pages页面</strong></del>，所以这个想法一直没有实施。后来发现其实不是这样的。正确的说法是这样的——<strong>我们只能为每个 GitHub 帐户创建一个用户或组织站点；而项目站点没有限制</strong>。</p>
<p>我所认为的只能拥有一个的，是个人站点，也就是名为 <code>.github.io</code> 的仓库。<strong>想要创建更多的GitHub Pages页面，可以通过创建项目站点实现。</strong>项目站点的数量没有限制。</p>
<p><a href="https://docs.github.com/cn/github/working-with-github-pages/about-github-pages#" target="_blank" rel="noopener">GitHub Pages 站点的类型</a>对此有清晰的说明，这里我把关键段落抄了过来：</p>
<hr>
<p>有三种类型的 GitHub Pages 站点：项目、用户和组织。 项目站点连接到 GitHub 上托管的特定项目。 用户和组织站点连接到特定的 GitHub 帐户。</p>
<p>要发布用户站点，必须创建名为 <code>.github.io</code> 的用户帐户所拥有的仓库。 要发布组织站点，必须创建名为 <code>.github.io</code> 的组织所拥有的仓库。 除非您使用自定义域，否则用户和组织站点位于 <code>http(s)://.github.io</code> 或 <code>http(s)://.github.io</code>。</p>
<p>项目站点的源文件与其项目存储在同一个仓库中。 除非您使用自定义域，否则项目站点位于 <code>http(s)://.github.io/</code> 或 <code>http(s)://.github.io/</code>。</p>
<p>您只能为每个 GitHub 帐户创建一个用户或组织站点。 项目站点（无论是组织还是用户帐户拥有）没有限制。</p>
<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><ol>
<li>新建一个仓库，名称随意。</li>
<li>进入仓库主页，点击右面的<code>Settings</code>，找到<strong>GitHub Pages</strong>部分，选择<code>Launch automatic page generator</code>&gt;<code>Continue to layouts</code>&gt;<code>Publish page</code>即可。（注意这里需要选择一个主题，之后可以再改，不选择的话页面可能会无法加载，显示<code>“There isn&#39;t a GitHub Pages site here.”</code>）</li>
<li>建议勾选 <code>Enforce HTTPS</code>，否则访问时会出现安全警告。</li>
<li>没有出错的话，一个项目主页就建立完成了，可以通过<code>.github.io/</code>访问到了</li>
</ol>
<p>这里我新建的项目为<code>mikelyou.github.io/acg</code>。可以看到这个地址有点丑，而且地址对大小写敏感。我希望通过<code>acg.mikelyou.com</code> 这样更加美观的地址访问，那么就需要设置和绑定子域名。</p>
<h2 id="绑定子域名"><a href="#绑定子域名" class="headerlink" title="绑定子域名"></a>绑定子域名</h2><p>通常，当我们购买一个域名后，就可以使用它的子域名。子域名的数量、子域名长度的限制各个域名商会有所不同，我所使用的 Godaddy 每个域名可以添加最多 100 个子域名，每个子域名最长可达 25 个字符。还可以添加多层子域名， 例如，可以添加 <strong>info.blog.coolexample.com</strong> 以深入网站中更加具体的兴趣区域。总之就是根本用不完。</p>
<p>以我为例，我的域名为<code>mikelyou.com</code>，我希望使用<code>acg.mikelyou.com</code> 这个子域名。</p>
<ol>
<li>在项目仓库里新建一个<code>CNAME</code>文件，并将不带协议名的裸域名写进去（<code>acg.mikelyou.com</code>而不是<code>https://acg.mikelyou.com/</code>）</li>
<li>去DNS服务商的网站，给对应的二级域名添加<code>CNAME</code>解析到<code>.github.io</code>（和个人主页的相同） 我的DNS服务商不是 Godaddy 而是是没见有人提的 <strong>Hurricane Electric</strong>，下面放了一张截图供各位参考。有文章使用的方法是添加<code>A</code>记录，不过我只看到一篇文章这么做，最好还是不要用，不成功的话检查一下其他步骤有没有错</li>
<li>等待DNS生效，具体时间和服务商有关（十几分钟到几小时都有可能，清除浏览器缓存有时会有奇效）。</li>
<li>成功后，可以通过更好看的 <code>acg.mikelyou.com</code> 地址访问到了项目站点了。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210128001534.png" alt=""></p>
<h2 id="从模板快速开始"><a href="#从模板快速开始" class="headerlink" title="从模板快速开始"></a>从模板快速开始</h2><p>成功建立项目站点后，我便去寻找新的主题了，心想着找个萌萌的二次元主题，谁知道……</p>
<p>在网上用<code>anime</code> <code>acg</code> <code>二次元</code> <code>moe</code> <code>cartoon</code> 等多种关键词检索后，我只找到一两个相关的 <code>jekyll</code> 主题，你看看我都用到什么关键词了，网络上的二次元主题几乎等于没有啊。虽然我最后也没有使用它们，我决定在这里列举一下，有兴趣的读者可以去康康：</p>
<ul>
<li><a href="http://www.whiteg.cn/" target="_blank" rel="noopener">梦白的二次元主题</a> <a href="https://github.com/moewhite19/about" target="_blank" rel="noopener">GitHub页面</a></li>
<li><a href="https://wu-kan.cn/" target="_blank" rel="noopener">WuK的主题</a> <a href="https://github.com/wu-kan/jekyll-theme-WuK" target="_blank" rel="noopener">GitHub页面</a></li>
</ul>
<p>没有用的主要原因是，发现需要安装新的依赖，和我之前用的模板差别很大。所以我在想不如直接用现在的博客作为模板，从<strong>模板创建一个新的仓库</strong>好了，这样就省去了很多安装和使用上的麻烦，所有在现有博客上的习惯都可以套用到新的项目上。</p>
<ol>
<li>打开有的博客仓库，<code>Settings</code> →勾选 <code>Template repository</code></li>
<li>回到仓库主界面，点击 <code>Use this template</code> 创建新的仓库，取名为<code>acg</code> ，建立站点时的仓库已经完成使命了可以删掉</li>
<li>将仓库里的内容更换为新的博客的内容，使用和之前一样的方法更新博客。</li>
</ol>
<blockquote>
<p><a href="https://docs.github.com/cn/github/creating-cloning-and-archiving-repositories/creating-a-repository-from-a-template" target="_blank" rel="noopener">从模板创建仓库</a>类似于创建仓库的复刻，但存在一些重要差异：</p>
<ul>
<li>新的复刻包含父仓库的整个提交历史记录，而从模板创建的仓库从一个提交开始记录。</li>
<li>对复刻的提交不会显示在您的贡献图中，而对从模板创建的仓库的提交会显示在您的贡献图中。</li>
<li>复刻可能是向现有项目贡献代码的临时方式，而从模板创建的仓库可以快速启动新项目。</li>
</ul>
</blockquote>
<h2 id="如何开启-https"><a href="#如何开启-https" class="headerlink" title="如何开启 https"></a>如何开启 https</h2><blockquote>
<p>本段内容参考了 <a href="https://tzhou2018.github.io/2018/04/为GitHub-Pages自定义域名并添加SSL-开启HTTPS强制/" target="_blank" rel="noopener">这篇文章</a>。</p>
</blockquote>
<p>建立<code>acg.mikelyou.com</code> 站点后，我把之前的博客地址修改为 <code>blog.mikelyou.com</code> ，使得他们放在一起比较和谐。不过随后我注意到一个问题——我的两个博客 <code>blog.mikelyou.com</code> 和 <code>acg.mikelyou.com</code> 无法同时开启 <code>https</code>，其中有一个站点会被 Chrome 提示 <code>“链接是不安全的”</code> 。我很快找到了原因，是GitHub Pages本身的限制。上面提到的这篇文章，我只把相关的内容在这里简述一下，如果有不清楚的地方请去看原文。</p>
<p>首先，为什么要使用 https 协议？因为 https 协议提高网站访问安全性、目前越来越多的浏览器会判断当前站点支不支持https协议。</p>
<p>默认情况下使用GitHub Pages的给定域名则支持http和https两种协议，但是如果使用自定义域名的话，则只能通过<code>http://</code>访问，也就是说我们在<code>Github上搭建 Hexo 或Jekyll 主题博客</code>后，通过<code>CNAME</code>绑定个人域名后，我们只能通过<code>http://</code>域名来访问。如果访问<code>https://XXX.github.io/</code>(即原来的GitHub Pages域名)将会被重定向到<code>我们的自定义域名</code>。但若直接访问<code>https://我们的自定义域名</code>，浏览器会报<code>SSL_DOMAIN_NOT_MATCHED</code>警告。</p>
<p>那么怎么给自己的域名加上<code>https</code>呢？这篇文章的作者使用了 <a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a> 的<code>免费的https服务</code>。</p>
<p><a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a> 是一家CDN提供商，它提供了<code>免费的https服务</code>(但不是应用SSL证书)。实现模式就是，用户到CDN服务器的连接为<code>https</code>，而CDN服务器到GithubPage服务器的连接为<code>http</code>，就是在CDN服务器那里加上反向代理。</p>
<ol>
<li>注册并登录CloudFlare，并将自己域名下的<code>name server</code>修改为CloudFlare的<code>name server</code>。</li>
<li>在CloudFlare的DNS设置域名匹配到自己的GithubPage(启用动态DNS加速)。</li>
<li>在CloudFlare的<code>Crypto</code>设置SSL为<code>Flexible</code>(等待一定时间实现建立连接后，就可以通过<code>https</code>来访问自己的 GithubPage )。</li>
<li>在CloudFlare的<code>Page Rules</code>中设置路由规则。一般情况下，利用<code>Always use https</code>设置规则，规则链接为<code>http://域名/*</code> , 这样就可以把 <code>http</code> 链接强制转换为 <code>https</code>。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210128001535.png" alt=""></p>
<blockquote>
<p>上面第一条规则是因为我的 <code>blog</code> 站点原本使用的地址是 <code>mikelyou.com</code> 根域名，添加这条规则可以让原来的地址依然可以访问，直接跳转到新的博客地址。（一共三个免费规则正好被我用完）</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-12/20210128001536.png" alt=""></p>
<p>上图为新的 DNS 配置，前文的 He 的 DNS 服务不再使用。</p>
<p>于是在这个过程中，我把 DNS 服务商也换了，然后发现 CloudFlare 比之前用的 <a href="https://dns.he.net/" target="_blank" rel="noopener">Hurricane Electric</a> 好用多了，而且还提供很多其他免费功能，我觉得 Google Analytics 也可以被这个替代了。</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><a href="https://segmentfault.com/a/1190000003946969" target="_blank" rel="noopener">单个GitHub帐号下添加多个GitHub Pages的相关问题</a></li>
<li><a href="https://segmentfault.com/a/1190000018038675" target="_blank" rel="noopener">GitHub Pages 自定义域名实践整理</a></li>
<li><a href="https://help.github.com/articles/about-custom-domains-for-github-pages-sites/" target="_blank" rel="noopener">About custom domains for GitHub Pages sites</a></li>
<li><a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="noopener">User, Organization, and Project Pages</a></li>
<li><a href="https://blog.csdn.net/LD0807/article/details/54356876" target="_blank" rel="noopener">二级域名解析使用</a>(使用<code>A</code>记录的就是这篇)</li>
<li><a href="https://tzhou2018.github.io/2018/04/为GitHub-Pages自定义域名并添加SSL-开启HTTPS强制/" target="_blank" rel="noopener">为GitHub-Pages自定义域名并添加SSL-开启HTTPS强制</a></li>
</ol>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>在线预览PPT、Excel、Word文件</title>
    <url>/2021/01/21/%E5%9C%A8%E7%BA%BF%E9%A2%84%E8%A7%88PPT%E3%80%81Excel%E3%80%81Word%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p> 使用微软提供的Office Online平台只需要一个网址即可在线查看Xls,doc,PPT等文档。 </p>
<a id="more"></a>
<h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>不需要使用任何第三家扩展，使用 Office 官方提供的 Office Web Viewer 即可.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;view.officeapps.live.com&#x2F;op&#x2F;view.aspx?src&#x3D;&#123;yourFileOnlinePath&#125;</span><br><span class="line">http:&#x2F;&#x2F;view.officeapps.live.com&#x2F;op&#x2F;view.aspx?src&#x3D;要查看的文档地址</span><br></pre></td></tr></table></figure>
<p>在src后面填写文档的网络地址即可。</p>
<p><strong>例子</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;view.officeapps.live.com&#x2F;op&#x2F;view.aspx?src&#x3D;https:&#x2F;&#x2F;cdn.getimg.net&#x2F;npc&#x2F;2020&#x2F;file&#x2F;page&#x2F;1215&#x2F;Npcink.pptx</span><br></pre></td></tr></table></figure>
<p>这个链接分为了两部分，一部分是<code>http://view.officeapps.live.com/op/view.aspx?src=</code>，后面那个是具体的文档地址，用URLEncode进行处理的链接地址。</p>
<p>非常酷的效果，使用这个服务唯一的要求就是你的网站是部署在互联网上的，这样服务才可以调用你的文档地址然后进行展示。</p>
<h4 id="嵌入演示"><a href="#嵌入演示" class="headerlink" title="嵌入演示"></a>嵌入演示</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://view.officeapps.live.com/op/view.aspx?src=https://cdn.getimg.net/npc/2020/file/page/1215/npcink.xlsx"</span> <span class="attr">width</span>=<span class="string">"800px"</span> <span class="attr">height</span>=<span class="string">"500px"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span>&gt;</span>这是嵌入 <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"https://office.com"</span> <span class="attr">rel</span>=<span class="string">"noopener noreferrer"</span>&gt;</span>Microsoft Office<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 演示表格，由 <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"https://office.com/webapps"</span> <span class="attr">rel</span>=<span class="string">"noopener noreferrer"</span>&gt;</span>Office Online<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 支持。<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>width=&quot;800px&quot;</code>，宽度为800像素</li>
<li><code>height=&quot;500px&quot;</code>，高度为500像素</li>
</ul>
<p><a href="https://view.officeapps.live.com/op/view.aspx?src=https://one.turbomachinery.tk/wxx_xxwu/Documents/Word.doc" target="_blank" rel="noopener">Word在线预览</a></p>
<h2 id="这是嵌入-Microsoft-Office-演示表格，由-Office-Online-支持。"><a href="#这是嵌入-Microsoft-Office-演示表格，由-Office-Online-支持。" class="headerlink" title="这是嵌入 Microsoft Office 演示表格，由 Office Online 支持。"></a><iframe src="https://view.officeapps.live.com/op/view.aspx?src=https://one.turbomachinery.tk/wxx_xxwu/Documents/Word.doc" width="800px" height="500px" frameborder="0">这是嵌入 <a target="_blank" href="https://office.com" rel="noopener noreferrer">Microsoft Office</a> 演示表格，由 <a target="_blank" href="https://office.com/webapps" rel="noopener noreferrer">Office Online</a> 支持。</iframe></h2><p><a href="https://view.officeapps.live.com/op/view.aspx?src=https://one.turbomachinery.tk/wxx_xxwu/Documents/PPT.ppt" target="_blank" rel="noopener">PPT在线预览</a></p>
<h2 id="这是嵌入-Microsoft-Office-演示表格，由-Office-Online-支持。-1"><a href="#这是嵌入-Microsoft-Office-演示表格，由-Office-Online-支持。-1" class="headerlink" title="这是嵌入 Microsoft Office 演示表格，由 Office Online 支持。"></a><iframe src="https://view.officeapps.live.com/op/view.aspx?src=https://one.turbomachinery.tk/wxx_xxwu/Documents/PPT.ppt" width="800px"  height="500px" frameborder="0">这是嵌入 <a target="_blank" href="https://office.com" rel="noopener noreferrer">Microsoft Office</a> 演示表格，由 <a target="_blank" href="https://office.com/webapps" rel="noopener noreferrer">Office Online</a> 支持。</iframe></h2><p><a href="https://view.officeapps.live.com/op/view.aspx?src=https://one.turbomachinery.tk/wxx_xxwu/Documents/excel.xls" target="_blank" rel="noopener">Excel在线预览</a></p>
<iframe src="https://view.officeapps.live.com/op/view.aspx?src=https://one.turbomachinery.tk/wxx_xxwu/Documents/excel.xls" width="800px"  height="500px" frameborder="0">这是嵌入 <a target="_blank" href="https://office.com" rel="noopener noreferrer">Microsoft Office</a> 演示表格，由 <a target="_blank" href="https://office.com/webapps" rel="noopener noreferrer">Office Online</a> 支持。</iframe>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>在线预览</tag>
      </tags>
  </entry>
  <entry>
    <title>教研室共享打印机设置</title>
    <url>/2020/10/29/%E6%95%99%E7%A0%94%E5%AE%A4%E5%85%B1%E4%BA%AB%E6%89%93%E5%8D%B0%E6%9C%BA%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>远程访问教研室共享打印机设置方法说明，不再需要U盘拷贝，有网即可打印。</p>
<a id="more"></a>
<h4 id="步骤1：网络环境设置"><a href="#步骤1：网络环境设置" class="headerlink" title="步骤1：网络环境设置"></a>步骤1：网络环境设置</h4><p>这里采用Zerotier内网穿透方式访问服务端，无需进行复杂的网络配置，需要保持打印机电脑在线。</p>
<p>下载Zerotier安装包（<a href="https://wws.lanzous.com/id6isht7zmf" target="_blank" rel="noopener">下载地址</a>）并安装。启动Zerotier，右键任务栏图标选择<code>Join Network</code>，输入以下ID并Join。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d5e5fb6537367533</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/ZeroTier_One_2020-10-28_15-08-14.png" alt=""></p>
<h4 id="步骤2：配置打印机"><a href="#步骤2：配置打印机" class="headerlink" title="步骤2：配置打印机"></a>步骤2：配置打印机</h4><p>完成上一步后，搜索框搜索<code>打印机和扫描仪</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/notepad_2020-10-28_15-10-50.png" alt=""></p>
<p>点击添加打印机和扫描仪，等待几秒后选择我需要的打印机不在列表中</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/ApplicationFrameHost_2020-10-28_15-13-34.png" alt=""></p>
<p>勾选<code>按名称选择共享打印机</code>输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\\704-PC\FX DocuPrint M115 b</span><br></pre></td></tr></table></figure>
<p>点击下一步即可完成。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/printui_2020-10-28_15-15-19.png" alt=""></p>
<p>遇到安装驱动选择是。</p>
<h4 id="步骤3（可选）-远程文件访问"><a href="#步骤3（可选）-远程文件访问" class="headerlink" title="步骤3（可选）:远程文件访问"></a>步骤3（可选）:远程文件访问</h4><p>资源管理器地址栏输入<code>\\704-pc</code>即可访问上网机文件夹</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/20201028151813.png" alt=""></p>
]]></content>
      <categories>
        <category>WINDOWS</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>远程打印</tag>
      </tags>
  </entry>
  <entry>
    <title>CFD大牛们的故事</title>
    <url>/2020/10/21/CFD%E5%A4%A7%E7%89%9B%E4%BB%AC%E7%9A%84%E6%95%85%E4%BA%8B/</url>
    <content><![CDATA[<p><strong>每一种具体的理论或数值方法都是暂时的，而对流动本质的理解却是永恒的。</strong></p>
<p><strong>——Kuchemann</strong></p>
<a id="more"></a>
<h4 id="Jameson的故事"><a href="#Jameson的故事" class="headerlink" title="Jameson的故事"></a>Jameson的故事</h4><p>Jameson是当今CFD届的超级大牛。偶的超级偶像哦。Jameson是个英国人，出生在军人世家。从小随老爹驻守印度。于是长大了也抗起枪到海外保卫日不落帝国，军衔是Second Lieutenant。无奈“日不落”已落，皇家陆军已经不需要他了。大概有什么立功表现吧，退役后就直接进了剑桥大学，在那里拿到博士学位。</p>
<p>辗转间，Jameson从英国来到了美国，从工厂又到了学校，而后成了Princeton的教授。在那里提出了著名的中心差分格式和有限体积法。就是在这里，发表了他那篇著名的中心差分离散的有限体积法。</p>
<p>中心差分格式，大家都知道，是二阶，但是稳定范围特别小，Pe不能超过2，于是就得加人工粘性（一听这名字，数学家就倔嘴巴，不科学嘛），这是大学生都知道的事，怎么加就是学问了。Jameson用二阶项做背景粘性，用四阶项抑制激波振荡（也亏他想得出来），配合他提出的有限体积法，获得了极大的成功，很快风靡世界，工程界几乎无一例外在使用他的方法，原因很简单，他的方法乐百氏，而且又有相当精度。从此大行于市，座上了P大的航空系系主任，也确立了CFD界第一大牛人的地位。</p>
<p>Jameson发文章有个特点，喜欢发在小会议上或者烂杂志上，反正是SCI检索不到地方。包括后来关于非结构网格，多重网格等等经典的开创性文章，都是这样。（如果按照清华的唯SCI论的评判标准，我估计在清华最多只能给他评一个副教授当当。）</p>
<p>牛牛的人总是遭人忌妒，哪里都这样。看着Jameson的有限体积方法这么受欢迎，有些人就红眼了。于是说，有限体积方法不错，可惜只适合于定常问题计算，非定常计算就不怎么样嘛。Jameson那里能容忍别人对他的得意之做胡说。于是，灵机一动，想出了一个双时间尺度的方法，引进一个非物理时间，把非定常问题变成了一个定常问题计算，还真好使，又风靡世界，从此天下太平。</p>
<p>97年，Jameson年龄到了，就从P大退休了，结果又被聘请到Stanford大学当Thomas V. Jones Professor搞起了湍流来。前不久偶导师见他回来，对欧们边摇头边说，“几年不见，老得快不行了”，言下之意，我们如果想多活几年，不要去搞什么湍流。</p>
<h4 id="Steven-A-Orszag的故事"><a href="#Steven-A-Orszag的故事" class="headerlink" title="Steven A. Orszag的故事"></a>Steven A. Orszag的故事</h4><p>Steven A. Orszag是一个天才级别的人物啦。在直接数值模拟，谱方法，湍流模型等等许多方面都有开创性的贡献。天才嘛，总是有缺陷的，不是生活不能自理，就是不懂得处理人际关系。前者还好办，只是lp不舒服，后者嘛，让同事和同行不舒服，可麻烦就大了。不幸的是，Orszag属于后者。对于他的恃才傲物，有人早就恨得牙根痒痒，报复的机会终于来了。</p>
<p>三十年前，湍流模型的先驱们，是通过数值试验，再连懵带猜的确定下了双方程湍流模型的参数。20年前，Orszag突发奇想，能否用RNG（重整化群理论）从理论上推导这些参数呢？RNG理论在相变上取得了很大的成功，发明者也在81年获得了Nobel奖。牛人就是牛人很快居然真从理论上推出了这些参数。</p>
<p>这下湍流模型界可炸开了锅，这岂不是要砸掉很多人的饭碗？这不等于说那些老家伙几十年前的工作一钱不值么？这帮大学霸可不是省油的灯。环顾地球之大，Orszag居然找不到一本杂志愿意接受他这篇文章。Orszag这个郁闷呀，这个生气呀，好歹庵也是绝代高手嘛，昨这么不给面子呢？他一气之下干脆自己扛杆旗，办份杂志，自己当主编，自己出版，看谁说闲话。</p>
<p>1986年，《Journal of Scientific Computing》终于开张了。第一篇文章就是“Renormalization Group nalysis of Turbulence: I Basic Theory”。这篇文章很快获得了大家的广泛认同。</p>
<p>但是对RNG的攻击并没有到此为止。偶看到最搞笑的是一个牛牛（不想提他的名字了）在AIAA J. 上的一篇文章。当然是吹自己的模型计算比标准双方程模型多么多么的好。都已经比较结束了，他还觉得不过瘾，话锋一转，把RNG模型胡算一把，然后一桶狂批，还煞有介事的分析为啥算不好。其实我倒觉得，既然RNG能够从理论上推导出他们当年胡乱搞出来的参数，不正是对他们工作的证明么？能够从完全黑暗的世界寻找到这些参数，这除了天才，还能说什么呢？</p>
<h4 id="Godunov的故事"><a href="#Godunov的故事" class="headerlink" title="Godunov的故事"></a>Godunov的故事</h4><p>Godunov大家都晓得吧，迎风类型格式的开山鼻祖。二十世纪CFD的数值方法基本上是沿着他老人家开创的Godunov类型格式的方向发展。连如今大姥级的Roe，van Leer都要发文章pmp，毕竟他们都是靠着老大发家的嘛。他座上老大宝座的屠龙刀 - Godunov格式，实际上是1954年他25岁 时候的博士论文。老板上课时候曾经讲，当时不知道为啥他得罪了苏维埃政府要砍他的头，于是他一着急，弄出了这把屠龙宝刀，拣回了小命（不过这个传闻，我没有找到相关的文献得以证实，好在我相信偶老板读的书比我多，二来嘛本来就是八卦系列也无所谓了）。</p>
<p>我现在就来讲讲有根有据的东西，老大是怎么弄出这把屠龙刀的。1954年春天，苏联的第一台电子计算机“Strela”就将送到老大当时所在的单位Keldish Institute of athematics，上级要求他们弄几个格式来算一算。当时一个叫Zhukov的人就弄出了一个东西。这家伙也算是个牛人了，弄出来的这个东西，同1年后 P.D Lax的CFD奠基性名著中提出的东西是完全一样的。可惜呢，这家伙数学不好，他是连蒙带猜弄出来的，尤其是为了自圆其说的那几个假设，现在回过头来看根本就是错误的，是推不出这个结果的。</p>
<p>当时为了弥合这个问题，就请来了Godunov看能不能解决这个问题。结果一发不可收拾，居然就借此搞出了Godunov格式。后来老大回忆刀，幸好当时他没有看到Lax的文章，要是看了，压根就不会有Godunov格式了。（If I would have read Lax’s paper a year earlier, “Godunov’s Scheme” would never have been created.）</p>
<p>这么重大的贡献得发文章让大家都晓得才行呀。老大于是一毕业就四处投杂志，他先投了一家叫Applied Mathematics and Mechanics的杂志，杂志居然把他据了，理由是，老大的工作是一个纯粹的数学工作，没有做任何关于力学的研究。老大一想也对，他本来就是数学家嘛，于是他改投一个纯数学的杂志，谁知道，没过多久，又被退稿了，这次的理由是，老大的工作是一个纯力学的研究，没有任何关于数学的内容。老大当场晕倒。</p>
<p>后来老大又投了几家还是不中，这下没有办法了，老大只好找后门，托他的老板Petrovskii了，正好老板是Mathematicheskii Sbornik杂志的编辑，终于在1959年，毕业四年后这篇文章发表在了这个杂志。</p>
<h4 id="Van-Leer的故事"><a href="#Van-Leer的故事" class="headerlink" title="Van Leer的故事"></a>Van Leer的故事</h4><p>Van Leer 原先同Roe关系非常的好。后来Roe发表了著名的后来用他名字命名的Roe格式，Van Leer就有点座不住了。因为他一直相信他比Roe高明那么一点点。于是他决心超过Roe。</p>
<p>当时迎风格式在应用上有两个发展方向，一个是Roe格式为代表的通量差分分裂类型，令一个就是矢通量差分类型，典型代表就是Steger－Warming格式。很快van Leer找到了突破口，他注意到Steger－Warming格式有个不大不小的缺陷，通量分裂是不可微的，这在计算激波时候，有可能发生过冲现象。于是 van Leer对此做了一番改造，提出了一个满足可微条件的分裂。</p>
<p>van Leer兴高采烈地投到杂志社，然而令他失望的是，杂志社把他给拒绝了。他可受不了了，于是自己掏钱，飞到西伯利亚，向Godunov求教。Godunov看过后大加赞赏。这下可乐坏van Leer。既然老大首肯了，谁还敢说不字，这篇文章顺利出版。后来这个格式就用van Leer本人的名字命名并流行起来，终于，他还是跟Roe平起平坐了。</p>
<h4 id="Batchelor的故事"><a href="#Batchelor的故事" class="headerlink" title="Batchelor的故事"></a>Batchelor的故事</h4><p>Batchelor 是GI Taylor之后，剑桥学派的领袖。不过他其实并不是英国人，而是澳大利亚人。他从小在墨尔本长大。第二次世界大战其间，在从事了一个航空相关的课题研究中，他对湍流研究产生了浓厚的兴趣，尤其是GI Taylor三十年代关于湍流研究的工作。于是他就给Taylor写信，想做他的research student。Taylor很快同意了。</p>
<p>Batchelor是一个很跋扈的人，说话颇有些像黑社会的老大的风范。他有一个死党和跟屁虫。他非常想让这个跟屁虫跟他一块到英国去研究湍流，省得他一个人寂寞。这个死党呢，大学学的是跟湍流八竿子打不着的核物理。这并不要紧，Batchelor充分发挥了他黑社会老大般的威严对他说，“跟我到英国找Taylor研究湍流去吧！”这个铁杆兄弟也不含糊，立刻说，好，跟老大走。</p>
<p>不过走前，你回答我两个问题：谁是 G.I. Taylor? 湍流是什么玩艺？前一个问题好回答，后一个问题，Batchelor究竟是怎么回答的，是威逼利诱，还是晓之以理动之以情说服的，大家一直为这个问题争论了几十年。</p>
<p>总之，最后两人都去了英国。见了Taylor呢，两人都失望了，原来Taylor已经不搞湍流了，全力搞什么水下爆炸之类的跟军事有关的课题（估计这个来钱）。好在大师就是大师，让这两个年轻人自编自导自己去折腾，在旁边指导指导。最后两人都成为大师。Batchelor的这个小兄弟究竟是谁呢？呵呵，就是大名鼎鼎的AA Townsend。这个故事再次说明跟好一个老大是多么重要亚。</p>
<p>Batchelor曾经一度以为可以在他手上终结湍流问题。所以那段时间，在湍流研究上特别努力，结果当然是大失所望。Batchelor被湍流折磨得心力憔悴，50年代后期以后逐渐把精力从科研转移到了写书，创办应用数学力学系和JFM杂志上来。</p>
<p>前面文章说了，为了多活几年不要搞湍流，这个故事则告诉我们，为了不郁闷，生活充满阳光，也不要搞湍流。另一个被湍流折磨死掉的大牛就是量子力学里面的Heisenberg。年轻的时候，靠着他的天才禀赋，胡乱猜了一个湍流解获得了博士学位，后半生被湍流研究折磨而死，临终时候都念念不忘。用《大话西游》里面的话来说应该是怎么来着？我猜中了这个开头，可是却猜不到这个结局。</p>
<p>Von Neumann的故事</p>
<p>Von Neumann是天才里面的天才。据说他6岁能心算8位数除法，8岁时已掌握了微积分，12岁时能读波莱尔的著作《函数论》……。有一次，冯·诺伊曼对他的朋友说：”我能背诵《双城记》”。人家就挑了几章作试验，果然他-一背诵如流。他对于圆周率π的小数位数，自然对数的底e的数值以及多位数的平方数和立方数……</p>
<p>四十年代的时候，Von Neumann在曼哈顿计划里面主要负责数值计算工作，他的另外两个同事就是费米和费曼。牛人在一起当然就喜欢比一比。需要做一个复杂的数值计算时，他们三人立即一跃而起。费米呢，上了点年纪，就拉计算尺计算，费曼呢，年轻人喜欢接受新事物，就用台式计算机，而冯·诺伊曼啥都不用，总是用心算。可是冯·诺伊曼往往第一个先算出来，当然这三位杰出学者所得出的最后答数总是非常接近的。（好啦，好啦，俺实在不愿继续写他的非凡事迹了，越写越自卑，越写越郁闷。）</p>
<p>也就是在这段时间，Von Neumann提出了CFD上面非常有名的Neumann稳定性分析。这个现在本科生都晓得的东西，在当时被美国军方列为高度军事机密，这一保密就是十年。俺每次读到这段的时候，常常想起哈里森.福特的《夺宝奇兵》的最后一个镜头。</p>
<p>【说到这里，顺便扯远一点，很多人，包括数学系人都认为Neumann稳定性分析为无条件稳定的格式，就意味着计算时间步长选取是不受限制的，这个认识是不正确的。Neumann稳定只保证格式的对幅度是保真的，但是并不保证是保相位的，相位的误差的累积也足以把一个结果改得面目全非】</p>
<p>前面讲过了一个让同事不爽的天才，而Von Neumann则属于让lp不爽的天才。某天lp让他上班途中顺便仍包垃圾，结果中午回来的时候，他又把垃圾带回来了，而他的公文包被他当垃圾扔了。另外一次，lp回来后，Von Neumann问她，我的水杯在那里呢，我找了一下午都没有找到。Lp大叫，天啦，我们在这个房子里面生活了十五年！天才的才气往往同寿命成反比，Von Neumann也不例外，刚过50多点点就去世了。应了俺本科上铺曾经爱说得一句话，天才是两头燃烧的蜡烛，明亮，但不会长久。</p>
<h4 id="Kuchemann的故事"><a href="#Kuchemann的故事" class="headerlink" title="Kuchemann的故事"></a>Kuchemann的故事</h4><p>今天要讲的是关于Kuchemann的故事。一看这名字就知道是德国人，1930年19岁的他进入了当时世界上最NB的大学Goettingen大学。起初他不是学流体的，而是理论物理的，他的导师就大牛M. Born。如果希特勒不上台，也许他会沿着理论物理学的道路走下去。然而1933年希特勒上台，推行歧视犹太人政策改变了这一切，Goettingen大学里面同犹太人沾亲带故的人纷纷远走他乡，这也包括了Born。</p>
<p>为此Kuchemann郁闷坏了，因为他找不到一个他看得上眼的大师级的导师。于是他翻开 G大的研究生招生手册，翻来翻去，终于找到了一个没有走的大牛——近代流体力学大师Prandtl。于是他就拜Prandtl为师，改学空气动力学起来。在Prandtl和Tollmien（发现T－S波的那个大牛）的指导下，25岁就获得了博士学位。</p>
<p>欧一直怀疑Kuchemann是个种族主义者，即使不是，也肯定是欧洲至上主义者。这家伙特别瞧不起美国这个暴发户。二战后随着美国的崛起和欧洲的衰落，欧洲科学家纷纷踏上移民美国的之路，美国屡次三番的邀请他去，他就是不去，他说他是欧洲人，他要呆在欧洲，于是他宁可去了英国，也不去美国。他在英国一直呆到1976年去世。</p>
<p>他老人家最大的贡献是两个，一个是实用的脱体涡流型，在他之前人们都认为机翼只能采用附着流型，涡分离是必须避免的。有了他的理论，现在高速飞行很常用的前缘三维分离涡产生涡升力的细长机翼才得以实现（可笑的是，中国的气动教科书直到现在还在以附着流型为例，用白努力方程给学生解释升力产生的原因）。</p>
<p>他的第二个重大贡献就是压缩波产生升力的高超声速流型，也就是现在称为乘波体的飞行器。可惜在他有生之年没有能够看到这个流型的应用。直到今年3月27日，美国采用他的乘波体方案以超燃冲压发动机为动力的的X－43A飞行成功，实现了7马赫数的w稳定飞行，一举打破了SR71在40年前创下的3.3马赫的飞行记录。</p>
<p>他老人家还说过一句，让所有从事CFD工作的人们需要永远永远铭记的话：每一种具体的理论或数值方法都是暂时的，而对流动本质的理解却是永恒的。</p>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>story</tag>
      </tags>
  </entry>
  <entry>
    <title>Installing HDF5 and CGNS in Ubuntu 18.04 LTS</title>
    <url>/2020/10/14/Installing-HDF5-and-CGNS-in-Ubuntu-18.04-LTS/</url>
    <content><![CDATA[<p>If you are a computational fluid dynamics (CFD) practitioner, at some point, you would have to use Hierarchical Data Format 5 (<a href="https://www.hdfgroup.org/" target="_blank" rel="noopener">HDF5</a>) and CFD General Notation System (<a href="http://cgns.github.io/" target="_blank" rel="noopener">CGNS</a>) libraries in your programs. HDF5 format provides an advanced way of organizing any data and allows efficient access to the data. CGNS prescribes specific methods and practices to use when writing CFD simulation data into HDF5 format. You can find more info on everything about these libraries in their website. But here, I describe the way to install HDF5 &amp; CGNS in a Ubuntu 18.04 system.<a id="more"></a></p>
<h4 id="Installation-HDF5-and-CGNS"><a href="#Installation-HDF5-and-CGNS" class="headerlink" title="Installation HDF5 and CGNS"></a>Installation HDF5 and CGNS</h4><p>The installation procedure follows what is given in CGNS website, but with some important tweaks to get it to succeed installing in Ubuntu 18.04.</p>
<p>Download the CGNS source code into some directory.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone -b master https:&#x2F;&#x2F;github.com&#x2F;CGNS&#x2F;CGNS.git</span><br></pre></td></tr></table></figure>
<p>Currently, this downloads CGNS 3.4.0 source code into a directory named <code>CGNS</code> in the present location. Although you can install HDF5 separately, and possibly a newer version from HDF5 website, I strongly advise against it. We want the CGNS library to work with our HDF5 installation. So, it is best to install the HDF5 version suggested by CGNS.</p>
<p>Change into the CGNS directory.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd CGNS</span><br></pre></td></tr></table></figure>
<p>There are install scripts provided in the <code>bin</code> folder. Three of them in fact, one to install HDF5 (<code>./bin/install-hdf.sh</code>), another to configure CGNS for our system (<code>./bin/config-cgns.sh</code>) and the last one to install the configured CGNS (<code>./bin/build-cgns.sh</code>). Of course, we need to do the installation in the order I have listed.</p>
<p>You can choose to use the <code>install-hdf.sh</code> script. Some options inside that script failed for me. So, instead, use the following commands:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;bitbucket.hdfgroup.org&#x2F;scm&#x2F;hdffv&#x2F;hdf5.git --branch hdf5_1_8 --single-branch hdf5_1_8</span><br></pre></td></tr></table></figure>
<p>This will download the HDF5 v1.8 into the newly created directory <code>hdf5_1_8</code>. Change into this directory and use the following command:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd hdf5_1_8</span><br><span class="line">.&#x2F;configure --enable-fortran --disable-hl --prefix&#x3D;$HOME&#x2F;hdf5 &amp;&amp; make &gt; result.txt 2&gt;&amp;1 &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<p>Note that I am choosing to install HDF5 in the location <code>$HOME/hdf5</code>, you can choose any other convenient location as well. But remember, this is the location you need to link any program trying to compile with HDF5 libraries.<br>The installation of HDF5 will take some time, and finally it will output the HDF5 configuration installed in the system. I have configured HDF5 to include Fortran bindings as well by the flag <code>--enable-fortran</code>. If you only want C binidings, you can replace that by <code>--disable-fortran</code>.</p>
<p>After this, we need to configure CGNS using the <code>./bin/config-cgns.sh</code> script. The default script looks like this:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Configure CGNS <span class="keyword">for</span> travis CI. </span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line">set -e</span><br><span class="line">cd src</span><br><span class="line">if [ $TRAVIS_OS_NAME = "linux" ]; then</span><br><span class="line">  export FLIBS="-Wl,--no-as-needed -ldl -lz"</span><br><span class="line">  export LIBS="-Wl,--no-as-needed -ldl -lz"</span><br><span class="line">fi</span><br><span class="line"> </span><br><span class="line">./configure \</span><br><span class="line">--prefix=$PWD/cgns_build \</span><br><span class="line">--with-hdf5=$HOME/hdf5 \</span><br><span class="line">--with-fortran \</span><br><span class="line">--enable-lfs \</span><br><span class="line">--enable-64bit \</span><br><span class="line">--disable-shared \</span><br><span class="line">--enable-debug \</span><br><span class="line">--with-zlib \</span><br><span class="line">--disable-cgnstools \</span><br><span class="line">--enable-64bit</span><br></pre></td></tr></table></figure>
<p>Edit it to look like this:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Configure CGNS <span class="keyword">for</span> travis CI. </span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line">set -e</span><br><span class="line">cd src</span><br><span class="line">export FLIBS="-Wl,--no-as-needed -ldl -lz"</span><br><span class="line">export LIBS="-Wl,--no-as-needed -ldl -lz"</span><br><span class="line">./configure \</span><br><span class="line">--prefix=$HOME/cgns \</span><br><span class="line">--with-hdf5=$HOME/hdf5 \</span><br><span class="line">--with-fortran \</span><br><span class="line">--enable-lfs \</span><br><span class="line">--enable-64bit \</span><br><span class="line">--disable-shared \</span><br><span class="line">--enable-debug \</span><br><span class="line">--with-zlib \</span><br><span class="line">--disable-cgnstools \</span><br><span class="line">--enable-64bit</span><br></pre></td></tr></table></figure>
<p>Apart from some specific modifications to make it work for Ubuntu, I have also specified the CGNS installation directory as <code>$HOME/cgns</code>. You can change this to any other convenient location. But again, this is where the built CGNS libraries and headers will be kept. You will be required to link to this location when compiling and linking programs with CGNS.<br>(If you have installed the HDF5 to some location other than <code>$HOME/hdf5</code>, you should specify that here in the flag <code>--with-hdf5=</code>)</p>
<p>Run this configure script using:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh .&#x2F;bin&#x2F;config-cgns.sh</span><br></pre></td></tr></table></figure>
<p>This will configure the CGNS for your system.</p>
<p>Finally, install CGNS using:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh .&#x2F;bin&#x2F;build-cgns.sh</span><br></pre></td></tr></table></figure>
<p>That’s it. You have installed HDF5 &amp; CGNS in your Ubuntu system at <code>$HOME/hdf5</code> and <code>$HOME/cgns</code> respectively.</p>
<p>There are test codes available inside the downloaded CGNS repo at: <code>./CGNS/src/Test_UserGuideCode</code>. They would have been tested during the build process as well.</p>
<h4 id="For-C-C"><a href="#For-C-C" class="headerlink" title="For C/C++"></a>For C/C++</h4><p>If you have a program <code>write_grid_str.c</code> which uses CGNS functions:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*   Program write_grid_str.c    */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Creates simple 3-D structured grid and writes it to a</span></span><br><span class="line"><span class="comment">CGNS file.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Example compilation for this program is (change paths!):</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">cc -I ../CGNS_CVS/cgnslib -c write_grid_str.c</span></span><br><span class="line"><span class="comment">cc -o write_grid_str_c write_grid_str.o -L ../CGNS_CVS/cgnslib/LINUX -lcgns</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">(../CGNS_CVS/cgnslib/LINUX/ is the location where the compiled</span></span><br><span class="line"><span class="comment">library libcgns.a is located)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">/* cgnslib.h file must be located in directory specified by -I during compile: */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cgnslib.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> CGNS_VERSION &lt; 3100</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> cgsize_t int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">if</span> CG_BUILD_SCOPE</span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">error</span> enumeration scoping needs to be off</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   dimension statements (note that tri-dimensional arrays</span></span><br><span class="line"><span class="comment">   x,y,z must be dimensioned exactly as [N][17][21] (N&gt;=9)</span></span><br><span class="line"><span class="comment">   for this particular case or else they will be written to</span></span><br><span class="line"><span class="comment">   the CGNS file incorrectly!  Other options are to use 1-D</span></span><br><span class="line"><span class="comment">   arrays, use dynamic memory, or pass index values to a</span></span><br><span class="line"><span class="comment">   subroutine and dimension exactly there):</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">   <span class="keyword">double</span> x[<span class="number">9</span>][<span class="number">17</span>][<span class="number">21</span>],y[<span class="number">9</span>][<span class="number">17</span>][<span class="number">21</span>],z[<span class="number">9</span>][<span class="number">17</span>][<span class="number">21</span>];</span><br><span class="line">   <span class="keyword">cgsize_t</span> isize[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">   <span class="keyword">int</span> ni,nj,nk,i,j,k;</span><br><span class="line">   <span class="keyword">int</span> index_file,icelldim,iphysdim,index_base;</span><br><span class="line">   <span class="keyword">int</span> index_zone,index_coord;</span><br><span class="line">   <span class="keyword">char</span> basename[<span class="number">33</span>],zonename[<span class="number">33</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/* create gridpoints for simple example: */</span></span><br><span class="line">   ni=<span class="number">21</span>;</span><br><span class="line">   nj=<span class="number">17</span>;</span><br><span class="line">   nk=<span class="number">9</span>;</span><br><span class="line">   <span class="keyword">for</span> (k=<span class="number">0</span>; k &lt; nk; ++k)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">for</span> (j=<span class="number">0</span>; j &lt; nj; ++j)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; ni; ++i)</span><br><span class="line">       &#123;</span><br><span class="line">         x[k][j][i]=i;</span><br><span class="line">         y[k][j][i]=j;</span><br><span class="line">         z[k][j][i]=k;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"\ncreated simple 3-D grid points"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* WRITE X, Y, Z GRID POINTS TO CGNS FILE */</span></span><br><span class="line"><span class="comment">/* open CGNS file for write */</span></span><br><span class="line">   <span class="keyword">if</span> (cg_open(<span class="string">"grid_c.cgns"</span>,CG_MODE_WRITE,&amp;index_file)) cg_error_exit();</span><br><span class="line"><span class="comment">/* create base (user can give any name) */</span></span><br><span class="line">   <span class="built_in">strcpy</span>(basename,<span class="string">"Base"</span>);</span><br><span class="line">   icelldim=<span class="number">3</span>;</span><br><span class="line">   iphysdim=<span class="number">3</span>;</span><br><span class="line">   cg_base_write(index_file,basename,icelldim,iphysdim,&amp;index_base);</span><br><span class="line"><span class="comment">/* define zone name (user can give any name) */</span></span><br><span class="line">   <span class="built_in">strcpy</span>(zonename,<span class="string">"Zone  1"</span>);</span><br><span class="line"><span class="comment">/* vertex size */</span></span><br><span class="line">   isize[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">21</span>;</span><br><span class="line">   isize[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">17</span>;</span><br><span class="line">   isize[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">9</span>;</span><br><span class="line"><span class="comment">/* cell size */</span></span><br><span class="line">   isize[<span class="number">1</span>][<span class="number">0</span>]=isize[<span class="number">0</span>][<span class="number">0</span>]<span class="number">-1</span>;</span><br><span class="line">   isize[<span class="number">1</span>][<span class="number">1</span>]=isize[<span class="number">0</span>][<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">   isize[<span class="number">1</span>][<span class="number">2</span>]=isize[<span class="number">0</span>][<span class="number">2</span>]<span class="number">-1</span>;</span><br><span class="line"><span class="comment">/* boundary vertex size (always zero for structured grids) */</span></span><br><span class="line">   isize[<span class="number">2</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">   isize[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">   isize[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="comment">/* create zone */</span></span><br><span class="line">   cg_zone_write(index_file,index_base,zonename,*isize,Structured,&amp;index_zone);</span><br><span class="line"><span class="comment">/* write grid coordinates (user must use SIDS-standard names here) */</span></span><br><span class="line">   cg_coord_write(index_file,index_base,index_zone,RealDouble,<span class="string">"CoordinateX"</span>,</span><br><span class="line">       x,&amp;index_coord);</span><br><span class="line">   cg_coord_write(index_file,index_base,index_zone,RealDouble,<span class="string">"CoordinateY"</span>,</span><br><span class="line">       y,&amp;index_coord);</span><br><span class="line">   cg_coord_write(index_file,index_base,index_zone,RealDouble,<span class="string">"CoordinateZ"</span>,</span><br><span class="line">       z,&amp;index_coord);</span><br><span class="line"><span class="comment">/* close CGNS file */</span></span><br><span class="line">   cg_close(index_file);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"\nSuccessfully wrote grid to file grid_c.cgns\n"</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> then you would want to compile and link the program as follows:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gcc -I$HOME/cgns/include -g -g -O2 -c test.c</span><br><span class="line">gcc -o test.out test.o $HOME/cgns/lib/libcgns.a $HOME/hdf5/lib/libhdf5.a -lz -lm -lm -lz -Wl,--no-as-needed -ldl -lz</span><br></pre></td></tr></table></figure>
<p>or (if <code>cgns</code> and <code>hdf5</code> were installed by <code>apt-get install</code>)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gcc -g -o test.out test.c -lcgns -lhdf5</span><br></pre></td></tr></table></figure>
<p><code>test.out</code> is the final executable created for the program.</p>
<h4 id="For-FORTRAN"><a href="#For-FORTRAN" class="headerlink" title="For FORTRAN"></a>For FORTRAN</h4><p>The FORTRAN version code is</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">program</span></span> write_grid_str</span><br><span class="line">    <span class="keyword">use</span> cgns</span><br><span class="line">    <span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   Creates simple 3-D structured grid and writes it to a</span></span><br><span class="line"><span class="comment">!   CGNS file.</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   Example compilation for this program is (change paths if needed!):</span></span><br><span class="line"><span class="comment">!   <span class="doctag">Note:</span> when using the cgns module file, you must use the SAME fortran compiler</span></span><br><span class="line"><span class="comment">!   used to compile CGNS (see make.defs file)</span></span><br><span class="line"><span class="comment">!   ...or change, for example, via environment "setenv FC ifort"</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   ifort -I ../.. -c write_grid_str.F90</span></span><br><span class="line"><span class="comment">!   ifort -o write_grid_str write_grid_str.o -L ../../lib -lcgns</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   (../../lib is the location where the compiled</span></span><br><span class="line"><span class="comment">!   library libcgns.a is located)</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   The following is no longer supported; now superseded by "use cgns":</span></span><br><span class="line"><span class="comment">!     include 'cgnslib_f.h'</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   dimension statements (note that tri-dimensional arrays</span></span><br><span class="line"><span class="comment">!   x,y,z must be dimensioned exactly as (21,17,N) (N&gt;=9)</span></span><br><span class="line"><span class="comment">!   for this particular case or else they will be written to</span></span><br><span class="line"><span class="comment">!   the CGNS file incorrectly!  Other options are to use 1-D</span></span><br><span class="line"><span class="comment">!   arrays, use dynamic memory, or pass index values to a</span></span><br><span class="line"><span class="comment">!   subroutine and dimension exactly there):</span></span><br><span class="line">    <span class="keyword">real</span>*<span class="number">8</span> x(<span class="number">21</span>,<span class="number">17</span>,<span class="number">9</span>),y(<span class="number">21</span>,<span class="number">17</span>,<span class="number">9</span>),z(<span class="number">21</span>,<span class="number">17</span>,<span class="number">9</span>)</span><br><span class="line">    <span class="keyword">integer</span> ni,nj,nk,i,j,k</span><br><span class="line">    <span class="keyword">integer</span> icelldim,iphysdim</span><br><span class="line">    <span class="keyword">integer</span> index_coord,index_file,ier</span><br><span class="line">    <span class="keyword">integer</span> index_base,index_zone</span><br><span class="line">    <span class="keyword">integer</span>(cgsize_t) isize(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">character</span> basename*<span class="number">32</span>,zonename*<span class="number">32</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line">    <span class="built_in">write</span>(<span class="number">6</span>,<span class="string">'('</span><span class="string">' Program write_grid_str'</span><span class="string">')'</span>)</span><br><span class="line">    <span class="keyword">if</span> (CG_BUILD_64BIT) <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">write</span>(<span class="number">6</span>,<span class="string">'('</span><span class="string">' ...using 64-bit mode for particular integers'</span><span class="string">')'</span>)</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   create gridpoints for simple example:</span></span><br><span class="line">    ni=<span class="number">21</span></span><br><span class="line">    nj=<span class="number">17</span></span><br><span class="line">    nk=<span class="number">9</span></span><br><span class="line">    <span class="keyword">do</span> k=<span class="number">1</span>,nk</span><br><span class="line">      <span class="keyword">do</span> j=<span class="number">1</span>,nj</span><br><span class="line">        <span class="keyword">do</span> i=<span class="number">1</span>,ni</span><br><span class="line">          x(i,j,k)=<span class="built_in">float</span>(i-<span class="number">1</span>)</span><br><span class="line">          y(i,j,k)=<span class="built_in">float</span>(j-<span class="number">1</span>)</span><br><span class="line">          z(i,j,k)=<span class="built_in">float</span>(k-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">enddo</span></span><br><span class="line">      <span class="keyword">enddo</span></span><br><span class="line">    <span class="keyword">enddo</span></span><br><span class="line">    <span class="built_in">write</span>(<span class="number">6</span>,<span class="string">'('</span><span class="string">' created simple 3-D grid points'</span><span class="string">')'</span>)</span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   WRITE X, Y, Z GRID POINTS TO CGNS FILE</span></span><br><span class="line"><span class="comment">!   open CGNS file for write</span></span><br><span class="line">    <span class="keyword">call</span> cg_open_f(<span class="string">'grid.cgns'</span>,CG_MODE_WRITE,index_file,ier)</span><br><span class="line">    <span class="keyword">if</span> (ier .ne. CG_OK) <span class="keyword">call</span> cg_error_exit_f</span><br><span class="line"><span class="comment">!   create base (user can give any name)</span></span><br><span class="line">    basename=<span class="string">'Base'</span></span><br><span class="line">    icelldim=<span class="number">3</span></span><br><span class="line">    iphysdim=<span class="number">3</span></span><br><span class="line">    <span class="keyword">call</span> cg_base_write_f(index_file,basename,icelldim,iphysdim,              &amp;</span><br><span class="line">         index_base,ier)</span><br><span class="line"><span class="comment">!   define zone name (user can give any name)</span></span><br><span class="line">    zonename = <span class="string">'Zone  1'</span></span><br><span class="line"><span class="comment">!   vertex size</span></span><br><span class="line">    isize(<span class="number">1</span>,<span class="number">1</span>)=<span class="number">21</span></span><br><span class="line">    isize(<span class="number">2</span>,<span class="number">1</span>)=<span class="number">17</span></span><br><span class="line">    isize(<span class="number">3</span>,<span class="number">1</span>)=<span class="number">9</span></span><br><span class="line"><span class="comment">!   cell size</span></span><br><span class="line">    isize(<span class="number">1</span>,<span class="number">2</span>)=isize(<span class="number">1</span>,<span class="number">1</span>)-<span class="number">1</span></span><br><span class="line">    isize(<span class="number">2</span>,<span class="number">2</span>)=isize(<span class="number">2</span>,<span class="number">1</span>)-<span class="number">1</span></span><br><span class="line">    isize(<span class="number">3</span>,<span class="number">2</span>)=isize(<span class="number">3</span>,<span class="number">1</span>)-<span class="number">1</span></span><br><span class="line"><span class="comment">!   boundary vertex size (always zero for structured grids)</span></span><br><span class="line">    isize(<span class="number">1</span>,<span class="number">3</span>)=<span class="number">0</span></span><br><span class="line">    isize(<span class="number">2</span>,<span class="number">3</span>)=<span class="number">0</span></span><br><span class="line">    isize(<span class="number">3</span>,<span class="number">3</span>)=<span class="number">0</span></span><br><span class="line"><span class="comment">!   create zone</span></span><br><span class="line">    <span class="keyword">call</span> cg_zone_write_f(index_file,index_base,zonename,isize,               &amp;</span><br><span class="line">         Structured,index_zone,ier)</span><br><span class="line"><span class="comment">!   write grid coordinates (user must use SIDS-standard names here)</span></span><br><span class="line">    <span class="keyword">call</span> cg_coord_write_f(index_file,index_base,index_zone,RealDouble,       &amp;</span><br><span class="line">         <span class="string">'CoordinateX'</span>,x,index_coord,ier)</span><br><span class="line">    <span class="keyword">call</span> cg_coord_write_f(index_file,index_base,index_zone,RealDouble,       &amp;</span><br><span class="line">         <span class="string">'CoordinateY'</span>,y,index_coord,ier)</span><br><span class="line">    <span class="keyword">call</span> cg_coord_write_f(index_file,index_base,index_zone,RealDouble,       &amp;</span><br><span class="line">         <span class="string">'CoordinateZ'</span>,z,index_coord,ier)</span><br><span class="line"><span class="comment">!   close CGNS file</span></span><br><span class="line">    <span class="keyword">call</span> cg_close_f(index_file,ier)</span><br><span class="line">    <span class="built_in">write</span>(<span class="number">6</span>,<span class="string">'('</span><span class="string">' Successfully wrote grid to file grid.cgns'</span><span class="string">')'</span>)</span><br><span class="line">    <span class="keyword">stop</span></span><br><span class="line">    <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>use the following commands to build (if there is no <code>cgnslib_f.h</code> in <code>/usr/include</code>)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gfortran -I$HOME/cgns/include -g -o write_grid_str write_grid_str.f90 $HOME/cgns/lib/libcgns.a $HOME/hdf5/lib/libhdf5.a -lz -lm -lm -lz -Wl,--no-as-needed -ldl -lz</span><br></pre></td></tr></table></figure>
<p>Notice that we have chose not to install the utility tools for CGNS by choosing the flag <code>--disable-cgnstools</code> in out configure script. Enabling this fails for me. I tried to install cgnstools using various other methods as well, but it fails for me in Ubuntu 18.04.</p>
<h4 id="HDFVIEW"><a href="#HDFVIEW" class="headerlink" title="HDFVIEW"></a>HDFVIEW</h4><p>If you want a GUI for viewing your CGNS/HDF5 files, you may want to use HDFVIEW software. Note that the <code>hdfview</code> available in ubuntu repositories does not work. Even the source code compilation process always fails in ubuntu. Just download the prebuilt binary for CentOS7 from the HDF <a href="https://www.hdfgroup.org/downloads/hdfview/" target="_blank" rel="noopener">website</a>. And run the <code>HDFView-3.1.0-Linux.sh</code> script inside the downloaded archive to create the binary. It works properly in Ubuntu 18.04. I found this useful tip from Michael Hirsch’s <a href="https://www.scivision.dev/view-hdf5-data-gui/" target="_blank" rel="noopener">blog</a>.</p>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>CGNS</tag>
        <tag>HDF5</tag>
      </tags>
  </entry>
  <entry>
    <title>慕尼黑工大流线曲率法通流程序skv编译说明</title>
    <url>/2020/10/09/%E6%85%95%E5%B0%BC%E9%BB%91%E5%B7%A5%E5%A4%A7%E6%B5%81%E7%BA%BF%E6%9B%B2%E7%8E%87%E6%B3%95%E9%80%9A%E6%B5%81%E7%A8%8B%E5%BA%8Fskv%E7%BC%96%E8%AF%91%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-10/20201009203718.png" alt=""></p>
<a id="more"></a>
<h4 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h4><p>本流线曲率法程序（<a href="https://sourceforge.net/projects/throughflow/" target="_blank" rel="noopener">项目地址</a>）由C++编写，功能为叶轮机械二维设计，编译平台为Linux。这里以Centos 7为例，需要预先安装以下依赖库：</p>
<p><strong>必备</strong></p>
<ul>
<li>automake: <a href="http://www.gnu.org/software/automake/automake.html" target="_blank" rel="noopener">http://www.gnu.org/software/automake/automake.html</a></li>
<li>libtool: <a href="http://www.gnu.org/software/libtool/libtool.html" target="_blank" rel="noopener">http://www.gnu.org/software/libtool/libtool.html</a></li>
<li>g++: <a href="http://gcc.gnu.org/" target="_blank" rel="noopener">http://gcc.gnu.org/</a></li>
<li>cgnslib: <a href="http://cgns.sourceforge.net/download.html" target="_blank" rel="noopener">http://cgns.sourceforge.net/download.html</a></li>
<li>nurbslib: <a href="http://libnurbs.sourceforge.net/index.shtml" target="_blank" rel="noopener">http://libnurbs.sourceforge.net/index.shtml</a></li>
</ul>
<p><strong>可选</strong></p>
<ul>
<li>doxgen: <a href="http://www.doxygen.org" target="_blank" rel="noopener">http://www.doxygen.org</a> (optional)</li>
<li>cgnstools: <a href="http://cgns.sourceforge.net/download.html" target="_blank" rel="noopener">http://cgns.sourceforge.net/download.html</a> (optional)</li>
<li>hdflib: <a href="http://hdf.ncsa.uiuc.edu/HDF5/release/index.html" target="_blank" rel="noopener">http://hdf.ncsa.uiuc.edu/HDF5/release/index.html</a> (optional)</li>
<li>paraview: <a href="http://www.paraview.org" target="_blank" rel="noopener">http://www.paraview.org</a> (optional)</li>
<li>vtk (mit python binding): <a href="http://www.vtk.org" target="_blank" rel="noopener">http://www.vtk.org</a> (optional)</li>
</ul>
<h4 id="安装NURBS"><a href="#安装NURBS" class="headerlink" title="安装NURBS++"></a>安装NURBS++</h4><p><a href="http://libnurbs.sourceforge.net/old/index.shtml" target="_blank" rel="noopener">nurbus++</a>为C++编写的非均匀有理B样条函数库，由于年代久远且长期不再维护更新，可用编译器停留在GCC-3.1.0版本，在使用高版本GCC编译时需要打补丁，这里使用的GCC版本为4.8.5。默认<code>automake, libtool, g++</code>已安装。</p>
<h5 id="方法1：从源代码编译"><a href="#方法1：从源代码编译" class="headerlink" title="方法1：从源代码编译"></a>方法1：从源代码编译</h5><p>首先下载<a href="https://sourceforge.net/projects/libnurbs/files/latest/download" target="_blank" rel="noopener">源代码</a>，选择最新的3.0.11版本</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-10/20201009210536.png" alt=""></p>
<p>解压到合适位置，再下载<a href="https://drive.google.com/file/d/0B5c6wR9mB0_pR1RrNlB2Ry1yYm8/view?usp=sharing" target="_blank" rel="noopener">补丁文件</a>（备份<a href="https://github.com/wuxiaoxiong1990/pic/raw/master/2020-10/nurbsAllInOne.patch.gz" target="_blank" rel="noopener">地址</a>），将.patch解压后放到nurbs++源码目录，执行补丁修改源代码。（<a href="https://www.daniweb.com/hardware-and-software/linux-and-unix/threads/480732/nurbs-library-installation-problem#post2105713" target="_blank" rel="noopener">参考链接</a>）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">patch -p1 &lt; nurbsAllInOne.patch</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-10/20201009212842.png" alt=""></p>
<p>执行编译安装即可，默认安装位置为<code>/usr/local/lib</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">configure ...options...</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p><strong>Configure options</strong></p>
<p>The most usefull opions are:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Option</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>--prefix=/dir</code></td>
<td>Indicates where the library will be installed</td>
<td>/usr/local</td>
</tr>
<tr>
<td><code>--enable-column-order</code></td>
<td>Indicates if a matrix is stored row wise or column wise.</td>
<td>disabled</td>
</tr>
<tr>
<td><code>--with-magick=/dir</code></td>
<td>Indicates if the library is compiled with Image Magick support. The dir indicates where is the ImageMagick library’s main directory</td>
<td>without</td>
</tr>
<tr>
<td><code>--with-opengl=/dir</code></td>
<td>Indicates if the library is compiled with OpenGL support. The dir indicates where is the OpenGL library’s main directory. For OpenGL to work properly, <code>--enable-column-order</code> will be automatically set. This is because OpenGL has column wise ordering for its matrices.</td>
<td>without</td>
</tr>
<tr>
<td><code>--enable-exception</code></td>
<td>Disable this if you don’t want to use exception handling.</td>
<td>enabled</td>
</tr>
</tbody>
</table>
</div>
<h5 id="方法2：从软件源安装"><a href="#方法2：从软件源安装" class="headerlink" title="方法2：从软件源安装"></a>方法2：从软件源安装</h5><p>对于<strong>Centos</strong>系统，可在<a href="http://www.rpm-find.net/linux/RPM/archive.fedoraproject.org/fedora/linux/releases/14/Everything/x86_64/os/Packages/nurbs++-3.0.11-7.fc12.x86_64.html" target="_blank" rel="noopener">Fedora安装包页面</a>下载编译好的rpm<a href="http://ftp.pbone.net/mirror/archive.fedoraproject.org/fedora/linux/releases/14/Everything/x86_64/os/Packages/nurbs++-3.0.11-7.fc12.x86_64.rpm" target="_blank" rel="noopener">安装包</a>进行安装，使用以下命令自动安装缺少的依赖：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install nurbs++-3.0.11-7.fc12.x86_64.rpm</span><br></pre></td></tr></table></figure>
<p>这将生成以下文件（相比源代码编译缺少.h头文件，未测试是否有影响）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libmatrix.so.1</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libmatrix.so.1.0.0</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libmatrixI.so.1</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libmatrixI.so.1.0.0</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libmatrixN.so.1</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libmatrixN.so.1.0.0</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libnurbsd.so.0</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libnurbsd.so.0.1.0</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libnurbsf.so.0</span><br><span class="line">&#x2F;usr&#x2F;lib64&#x2F;libnurbsf.so.0.1.0</span><br><span class="line">&#x2F;usr&#x2F;share&#x2F;doc&#x2F;nurbs++-3.0.11</span><br><span class="line">&#x2F;usr&#x2F;share&#x2F;doc&#x2F;nurbs++-3.0.11&#x2F;AUTHORS</span><br><span class="line">&#x2F;usr&#x2F;share&#x2F;doc&#x2F;nurbs++-3.0.11&#x2F;README</span><br></pre></td></tr></table></figure>
<p>对于<strong>Ubuntu</strong>系统，通过添加<a href="https://launchpad.net/~cae-team/+archive/ubuntu/ppa" target="_blank" rel="noopener">PPA源</a>安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:cae-team&#x2F;ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nurbs++</span><br></pre></td></tr></table></figure>
<h4 id="安装cgnslib"><a href="#安装cgnslib" class="headerlink" title="安装cgnslib"></a>安装cgnslib</h4><p>CGNS为CFD计算通用符号系统，项目<a href="http://cgns.sourceforge.net/download.html" target="_blank" rel="noopener">主页链接</a>，可以通过源代码编译方式安装。由于该项目一直有人维护且使用广泛，这里采用更简便的源安装方式。对于Centos系统，通过以下命令安装：（<a href="https://centos.pkgs.org/7/epel-x86_64/cgnslib-3.2.1-2.el7.x86_64.rpm.html" target="_blank" rel="noopener">官方安装包页面</a>）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install cgnslib cgnslib-devel</span><br></pre></td></tr></table></figure>
<p>对于Ubuntu系统，命令为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install libcgns libcgns-dev</span><br></pre></td></tr></table></figure>
<h4 id="编译源代码"><a href="#编译源代码" class="headerlink" title="编译源代码"></a>编译源代码</h4><p>官方文档INSTALL中给出的安装步骤为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Installation:</span><br><span class="line">.&#x2F;autogen.sh</span><br><span class="line">.&#x2F;configure &lt;Optionen&gt;</span><br><span class="line">make</span><br><span class="line">sudo make install (optional)</span><br></pre></td></tr></table></figure>
<p>在实际操作中可能会遇到以下问题：</p>
<h5 id="1-libtool版本不一致问题"><a href="#1-libtool版本不一致问题" class="headerlink" title="1. libtool版本不一致问题"></a>1. libtool版本不一致问题</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">libtool: Version mismatch error.  This is libtool 2.4.6, but the</span><br><span class="line">libtool: definition of this LT_INIT comes from libtool 2.4.2.</span><br><span class="line">libtool: You should recreate aclocal.m4 with macros from libtool 2.4.6</span><br><span class="line">libtool: and run autoconf again.</span><br></pre></td></tr></table></figure>
<p>编译过程中可能会遇到<code>libtool version mismatch error</code>的错误提示，参考网上的<a href="https://stackoverflow.com/questions/3096989/libtool-version-mismatch-error" target="_blank" rel="noopener">解决方案</a>，确定是anaconda与系统自带的libtool和autoconf的版本不同造成的冲突，解决方法为：</p>
<p>If you are using Anaconda, then this could be due to libtool and autoconf from different sources. You can check this by executing</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">which libtool</span><br><span class="line">which autoconf</span><br></pre></td></tr></table></figure>
<p>My libtool was from conda and autoconf was a system package. Uninstalled autoconf and installed it again using conda</p>
<p><code>apt remove -y autoconf</code> (Ubuntu/Debian)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install -c anaconda autoconf</span><br></pre></td></tr></table></figure>
<p>Note: You may need to install automake too.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install -c anaconda automake</span><br></pre></td></tr></table></figure>
<h5 id="2-函数库链接问题"><a href="#2-函数库链接问题" class="headerlink" title="2.函数库链接问题"></a>2.函数库链接问题</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;PLib::MatrixImage&lt;unsigned char&gt;::drawLine(int, int, int, int, unsigned char)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;PLib::Basic2DArray&lt;PLib::Color&gt;::elem(int, int)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;PLib::SVDMatrix&lt;double&gt;::decompose(PLib::Matrix&lt;double&gt; const&amp;)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;void PLib::intccini&lt;double&gt;(PLib::BasicArray&lt;double&gt;&amp;)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;PLib::SVDMatrix&lt;double&gt;::SVDMatrix(PLib::Matrix&lt;double&gt; const&amp;)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;PLib::SVDMatrix&lt;double&gt;::solve(PLib::Matrix&lt;double&gt; const&amp;, PLib::Matrix&lt;double&gt;&amp;, double)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;PLib::Matrix&lt;double&gt; PLib::inverse&lt;double&gt;(PLib::Matrix&lt;double&gt; const&amp;)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;int PLib::solve&lt;double&gt;(PLib::Matrix&lt;double&gt; const&amp;, PLib::Matrix&lt;double&gt; const&amp;, PLib::Matrix&lt;double&gt;&amp;)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;double PLib::intcc2&lt;double, PLib::ClassPOvoid&lt;double&gt;*&gt;(PLib::ClassPOvoid&lt;double&gt;*, void*, double, double, double, PLib::BasicArray&lt;double&gt;, double&amp;)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;double PLib::intcc&lt;double, PLib::ClassPOvoid&lt;double&gt;*&gt;(PLib::ClassPOvoid&lt;double&gt;*, void*, double, double, double, PLib::BasicArray&lt;double&gt;&amp;, double&amp;)&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;typeinfo for PLib::ClassPOvoid&lt;double&gt;&#39;</span><br><span class="line">&#x2F;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;libnurbsd.so: undefined reference to &#96;PLib::MatrixImage&lt;PLib::Color&gt;::drawLine(int, int, int, int, PLib::Color)&#39;</span><br><span class="line">collect2: error: ld returned 1 exit status</span><br></pre></td></tr></table></figure>
<p>这是一个Bug，根据原作者的<a href="https://sourceforge.net/p/throughflow/mailman/message/30246659/" target="_blank" rel="noopener">回答</a>，解决方法为在<code>src/Makefile.am</code>文件里面添加两个libraries <code>-lmatrixN.so or -lmatrixI.so</code>，添加后的Makefile.am：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## Source directory</span><br><span class="line">AUTOMAKE_OPTIONS &#x3D; subdir-objects</span><br><span class="line">bin_PROGRAMS &#x3D; skv</span><br><span class="line">skv_SOURCES &#x3D; ableitung.cpp daten.cpp einlesen.cpp geschwindigkeit.cpp  \</span><br><span class="line">	massenstrom.cpp rothalpie.cpp stromlinie.cpp wirkungsgrad.cpp \</span><br><span class="line">	ausgabe.cpp dichte.cpp epsilon.cpp Knoten.cpp newton.cpp \</span><br><span class="line">	skelettflaeche3d.cpp Stromliniendaten.cpp CGNSformat.cpp druck.cpp \</span><br><span class="line">	geometrie.cpp loeser_expeu.cpp Quasiorthogonalendaten.cpp skv.cpp \</span><br><span class="line">	temperatur.cpp loeser_denton.cpp geschwindigkeit_denton.cpp \</span><br><span class="line">	kennfeld_manager.cpp ableitungshelfer.cpp enthalpie.cpp \</span><br><span class="line">	temperatur_denton.cpp DeviationsModelle&#x2F;deviationsmodell.cpp \</span><br><span class="line">	DeviationsModelle&#x2F;carterdesigndeviation.cpp DeviationsModelle&#x2F;crevelingoffdesigndeviation.cpp \</span><br><span class="line">	VerlustModelle&#x2F;verlustmodell.cpp VerlustModelle&#x2F;liebleinprofilverlust.cpp \</span><br><span class="line">	VerlustModelle&#x2F;griebrandverlust.cpp VerlustModelle&#x2F;crevelingoffdesignverlust.cpp \</span><br><span class="line">	VerlustModelle&#x2F;cetinoffdesignverlust.cpp optimalInzidenzModelle&#x2F;liebleinoptimalinzidenz.cpp</span><br><span class="line">skv_LDADD &#x3D; -lm -lnurbsd -lmatrix -lcgns -lhdf5 -lmatrixN  -lmatrixI</span><br></pre></td></tr></table></figure>
<h5 id="3-子目录警告"><a href="#3-子目录警告" class="headerlink" title="3.子目录警告"></a>3.子目录警告</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">automake-1.16: of the corresponding sources.</span><br><span class="line">automake-1.16: You are advised to start using &#39;subdir-objects&#39; option throughout your</span><br><span class="line">automake-1.16: project, to avoid future incompatibilities.</span><br><span class="line">src&#x2F;Makefile.am:4: warning: source file &#39;DeviationsModelle&#x2F;carterdesigndeviation.cpp&#39; is in a subdirectory,</span><br><span class="line">src&#x2F;Makefile.am:4: but option &#39;subdir-objects&#39; is disabled</span><br></pre></td></tr></table></figure>
<p>由于源代码中存在子目录路径，在最后<code>make install</code>过程中会出现如上警告，可以通过如下方法消除（<a href="https://github.com/BitzenyCoreDevelopers/cpuminer/issues/5" target="_blank" rel="noopener">参考链接</a>）:</p>
<p>there are 2 options to fix</p>
<ul>
<li>a) adding <code>subdir-objects</code> to <code>configure.ac</code> like this</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AM_INIT_AUTOMAKE([gnu subdir-objects])</span><br></pre></td></tr></table></figure>
<ul>
<li>b) adding <code>AUTOMAKE_OPTIONS = subdir-objects</code> to <code>src/Makefile.am</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AUTOMAKE_OPTIONS &#x3D; subdir-objects</span><br></pre></td></tr></table></figure>
<p><strong>以下问题Ubuntu可能会遇到</strong></p>
<h5 id="4-变量HUGE报错"><a href="#4-变量HUGE报错" class="headerlink" title="4.变量HUGE报错"></a>4.变量<code>HUGE</code>报错</h5><p>make过程中可能会出现错误信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">daten.h:62:19: error: ‘HUGE’ was not declared in this scope</span><br></pre></td></tr></table></figure>
<p>找不到变量HUGE的定义，HUGE应该是某个老版本的C++函数库中的极大值常数，新版本的lib中可能改名了导致找不到。解决方法为在daten.h文件中人为添加一个极大值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define HUGE 1e6</span><br></pre></td></tr></table></figure>
<h5 id="5-找不到hdf5库"><a href="#5-找不到hdf5库" class="headerlink" title="5. 找不到hdf5库"></a>5. 找不到hdf5库</h5><p>错误信息为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;ld: cannot find -lhdf5</span><br></pre></td></tr></table></figure>
<p>解决方法<a href="https://github.com/BVLC/caffe/issues/4333#issuecomment-228874430" target="_blank" rel="noopener">参考</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu</span><br><span class="line">sudo ln -s libhdf5_serial.so.8.0.2 libhdf5.so</span><br><span class="line">sudo ln -s libhdf5_serial_hl.so.8.0.2 libhdf5_hl.so</span><br><span class="line">In Ubuntu 16.04, the file versions are different. Visit &#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F; and list the contents. The versions are 10.1.0 and 10.0.2 respectively.</span><br></pre></td></tr></table></figure>
<h4 id="编译完成"><a href="#编译完成" class="headerlink" title="编译完成"></a>编译完成</h4><p>自动生成<code>skv</code>可执行程序并复制到<code>/usr/local/bin</code></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>通流</tag>
      </tags>
  </entry>
  <entry>
    <title>利用V2ray+ssh隧道访问VUB机房资源</title>
    <url>/2020/08/24/%E5%88%A9%E7%94%A8V2ray+ssh%E9%9A%A7%E9%81%93%E8%AE%BF%E9%97%AEVUB%E6%9C%BA%E6%88%BF%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/SSH-Local-Portforwarding.jpg" alt=""></p>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于VUB的计算站都使用公网IP，且拥有VUB购买的期刊数据库的访问权限，通过VUB的计算站设置代理科学上网非常合适。常用的方式有ssh建立隧道转发动态端口，但是介于国内通过ssh访问国外服务器时流量一大很容易被墙识别，且网络状况不佳高峰期频繁掉线，因此这里采用一台香港的VPS做跳板机，结构如下。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/SSH_to_VUB.png" alt=""></p>
<h2 id="搭建服务端"><a href="#搭建服务端" class="headerlink" title="搭建服务端"></a>搭建服务端</h2><p>由于我只是VUB server的普通用户，因次无法用root权限部署v2ray服务，下面来手动安装服务端。</p>
<p>首先ssh登陆server，去v2ray主页找到对应Server系统的<a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener">服务端</a>下载</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir v2ray</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;v2ray&#x2F;v2ray-core&#x2F;releases&#x2F;download&#x2F;v4.27.0&#x2F;v2ray-linux-64.zip</span><br><span class="line">unzip v2ray*.zip</span><br></pre></td></tr></table></figure>
<p>解压完成后，配置config.json文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;inbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">    &quot;port&quot;:10000,</span><br><span class="line">      &quot;listen&quot;: &quot;127.0.0.1&quot;, </span><br><span class="line">      &quot;tag&quot;: &quot;vmess-in&quot;, </span><br><span class="line">      &quot;protocol&quot;: &quot;vmess&quot;, </span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;clients&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">	  &quot;id&quot;:&quot;5cad74ba-35ef-43c2-bc11-a81774bad79c&quot;,</span><br><span class="line">	  &quot;alterId&quot;:100</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;, </span><br><span class="line">      &quot;streamSettings&quot;: &#123;</span><br><span class="line">        &quot;network&quot;: &quot;ws&quot;, </span><br><span class="line">        &quot;wsSettings&quot;: &#123;</span><br><span class="line">	  &quot;path&quot;:&quot;&#x2F;v2ray&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ], </span><br><span class="line">  &quot;outbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;protocol&quot;: &quot;freedom&quot;, </span><br><span class="line">      &quot;settings&quot;: &#123; &#125;, </span><br><span class="line">      &quot;tag&quot;: &quot;direct&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &#123;</span><br><span class="line">      &quot;protocol&quot;: &quot;blackhole&quot;, </span><br><span class="line">      &quot;settings&quot;: &#123; &#125;, </span><br><span class="line">      &quot;tag&quot;: &quot;blocked&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ], </span><br><span class="line">  &quot;routing&quot;: &#123;</span><br><span class="line">    &quot;domainStrategy&quot;: &quot;AsIs&quot;, </span><br><span class="line">    &quot;rules&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;type&quot;: &quot;field&quot;, </span><br><span class="line">        &quot;inboundTag&quot;: [</span><br><span class="line">          &quot;vmess-in&quot;</span><br><span class="line">        ], </span><br><span class="line">        &quot;outboundTag&quot;: &quot;direct&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>后台运行v2ray即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nohup &#x2F;path&#x2F;to&#x2F;v2ray -config &#x2F;path&#x2F;to&#x2F;config.json &amp;</span><br></pre></td></tr></table></figure>
<h2 id="配置跳板机"><a href="#配置跳板机" class="headerlink" title="配置跳板机"></a>配置跳板机</h2><p>由于Server的防火墙只允许了少量端口，非管理员无法配置端口，因此采用ssh转发v2ray端口到跳板机的方式进行连接。这里需要通过跳板机ssh连接到server，免密方法见<a href="https://xiao5.tk/2019/06/03/Linux-Tips/">这篇文章</a>。设置好免密登陆后，添加一个ssh进程守护，保持VPS到server的ssh连接：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;tunnel.service</span><br><span class="line">[Unit]</span><br><span class="line">Description&#x3D;SSH forward to Server</span><br><span class="line">After&#x3D;sshd.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User&#x3D;root</span><br><span class="line">Group&#x3D;root</span><br><span class="line">Restart&#x3D;on-failure</span><br><span class="line">RestartSec&#x3D;5s</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;ssh -NL 10000:localhost:10000 my_id@server_ip</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>
<p>启动端口转发并设置开机自启</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start tunnel</span><br><span class="line">systemctl enable tunnel</span><br></pre></td></tr></table></figure>
<p>接下来配置nginx，采用tls加反向代理的方式，具体步骤见<a href="https://xiao5.tk/2020/04/10/%E5%A6%82%E4%BD%95%E5%9C%A8-Debian-9-%E4%B8%8A%E6%90%AD%E5%BB%BA-LNMP-%E7%8E%AF%E5%A2%83/">这篇</a>，这里我们选一个设置好域名并申请了https证书的网站，在他的的nginx配置文件中插入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location &#x2F;v2ray &#123;</span><br><span class="line">    proxy_pass       http:&#x2F;&#x2F;server_ip:10000;</span><br><span class="line">    proxy_redirect             off;</span><br><span class="line">    proxy_http_version         1.1;</span><br><span class="line">    proxy_set_header Upgrade   $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    proxy_set_header Host      $http_host;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>到此流量转发设置完成，客户端同ws+tls方式配置，域名采用上一步的站点域名。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode中GDB调试条件断点设置</title>
    <url>/2020/06/10/vscode%E4%B8%ADGDB%E8%B0%83%E8%AF%95%E6%9D%A1%E4%BB%B6%E6%96%AD%E7%82%B9%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/1200px-Visual_Studio_Code_1.35_icon.svg.png" alt=""></p>
<a id="more"></a>
<p>在vscode环境下调试Fortran代码有时会用到条件断点，其语法和Fortran语法一致，大致归纳如下。</p>
<p><strong>a等于b</strong></p>
<blockquote>
<p>a.eq.b</p>
</blockquote>
<p><strong>a大于b</strong></p>
<blockquote>
<p>a.gt.b</p>
</blockquote>
<p><strong>a不等于b</strong></p>
<blockquote>
<p>a.ne.b</p>
</blockquote>
<p><strong>a等于1且b等于2</strong></p>
<blockquote>
<p>(a.eq.1).and.(b.eq.2)</p>
</blockquote>
<p><strong>a等于1或b等于2</strong></p>
<blockquote>
<p>(a.eq.1).or.(b.eq.2)</p>
</blockquote>
<p><strong>需要注意符号==, &lt;, &gt;等不识别</strong></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>fortran</tag>
      </tags>
  </entry>
  <entry>
    <title>windows onedrive使用mklink自动同步其他文件夹</title>
    <url>/2020/06/04/windows-onedrive%E4%BD%BF%E7%94%A8mklink%E8%87%AA%E5%8A%A8%E5%90%8C%E6%AD%A5%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/1972.jpg" alt=""></p>
<a id="more"></a>
<h4 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h4><p>使用Onedrive自动同步电脑上的文件，只有放在Onedrive对应目录下才能自动同步，而文件都放在这一路径下，势必会导致文件夹占用过大空间，此时可以使用mklink创建junction来同步其他文件夹的文件。</p>
<h4 id="2-使用方法"><a href="#2-使用方法" class="headerlink" title="2.使用方法"></a>2.使用方法</h4><p>经过测试：使用mklink /j才能进行同步，使用mklink /d无法同步。</p>
<p>命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mklink &#x2F;j juctionpath target</span><br></pre></td></tr></table></figure>
<p>其中，target即是你要同步的不在Onedrive路径下的文件夹，而juctionpath为在Onedrive路径下“将要”新建的文件夹（juction）名字。</p>
<p>均使用绝对路径，如果路径中有空格，请在路径前后加上英文状态下的引号(“)。</p>
<p>如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mklink &#x2F;j &quot;D:\Onedrive\new juc&quot; E:\mydoc</span><br></pre></td></tr></table></figure>
<p>会在D:\Onedrive路径下生成指向<code>E:\mydoc</code>的文件夹“new juc”，可以实现对<code>E:\mydoc</code>文件夹的自动同步。</p>
]]></content>
      <categories>
        <category>网盘</category>
      </categories>
      <tags>
        <tag>ondrive</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Windows平台媒体服务器Jellyfin的配置指南</title>
    <url>/2020/05/28/%E5%9F%BA%E4%BA%8EWindows%E5%B9%B3%E5%8F%B0%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8Jellyfin%E7%9A%84%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/jellyfin.png" alt=""></p>
<a id="more"></a>
<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p><a href="https://jellyfin.org/" target="_blank" rel="noopener">Jellyfin</a>是一个免费软件媒体系统，可让您控制媒体的管理和流式传输。 它是专有Emby和Plex的替代产品，可以通过多个应用程序将媒体从专用服务器提供给最终用户设备。Jellyfin拥有对应多系统和架构的版本，根据说明下载<a href="https://jellyfin.org/downloads/" target="_blank" rel="noopener">对应版本</a>。</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>我的安装平台配置为G4560，Windows10系统，由于是intel处理器可以使用CPU的intel quick sync(qsv)进行转码。</p>
<h5 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h5><ul>
<li><p>将集显驱动更新到最新；</p>
</li>
<li><p>安装intel提供的<a href="https://software.intel.com/content/www/us/en/develop/tools/media-sdk/choose-download.html" target="_blank" rel="noopener">MediaSDK</a>套件（以保证qsv能够成功启用），登陆后选择Windows版本下载。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528211255.png" alt=""></p>
</li>
</ul>
<h5 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h5><p>访问Jellyfin官网下载Portable安装包，直接解压到安装目录，<strong>可将安装目录添加到环境变量Path</strong>。可以看到目录中包含jellyfin.exe和ffmpeg.exe两个可执行文件，前者为主程序，后者为转码程序。我们这里手动配置服务，采用<strong>nssm</strong>作为jellyfin的进程守护，其作用类似linux系统下的systemctl，在程序意外终止时重启程序，保持媒体服务器始终在线。方法为在安装目录下打开命令行安装一个名为jellyfin的服务，输入以下命令，弹出一个设置窗口。(<strong>注意：nssm服务启动的jellyfin无法使用硬件转码，若要硬转只能使用批处理脚本或直接运行方式启动</strong>)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nssm install jellyfin</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/nssm_2020-05-28_21-28-21.png" alt=""></p>
<p>选择jellyfin程序路径，第一次安装Arguments留空即可，若更新安装有旧的媒体数据库可填入以下内容，启动后则会自动导入现存媒体数据。点击install service完成守护配置。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">-d &lt;--Your data <span class="built_in">path</span>--&gt;\jellyfin -noautorunwebapp</span><br></pre></td></tr></table></figure>
<p>设置开机启动，在目录下分别新建两个文件jellyfin.bat和autostart.vbs，将autostart.vbs创建的快捷方式放入启动文件夹中，启动文件夹可通过运行<code>shell:startup</code>前往。双击jellyfin.bat即可启动服务。</p>
<p><strong>jellyfin.bat</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nssm <span class="built_in">start</span> jellyfin</span><br></pre></td></tr></table></figure>
<p><strong>autostart.vbs</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">CreateObject("WScript.Shell").Run "jellyfin.bat",<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/explorer_2020-05-28_21-35-51.png" alt=""></p>
<p>若要停止或移除守护进程，在命令行输入</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nssm stop jellyfin</span><br><span class="line">nssm remove jellyfin</span><br></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>按照提示一步一步配置即可，需要注意部分地区<code>http://api.themoviedb.org/</code>域名似乎无法访问使得TMDB搜刮器无法获得影片信息，需要设置代理黑名单。这里主要说明以下方面。</p>
<h5 id="转码配置"><a href="#转码配置" class="headerlink" title="转码配置"></a>转码配置</h5><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528214104.png" alt=""></p>
<p>如图所示在<strong>控制台-播放</strong>选项中开启硬件加速，硬件转码相比软解码可以有效降低CPU负荷，该功能在Plex和Emby中需要开通高级会员才可获得，在jellyfin中直接可用，感谢良心开发者。不过需要注意的是由于某些特殊的字幕在播放时需要重新编码视频，并不是所有客户端都能支持各种格式，例如PGS格式字幕会强制转码，可能导致jellyfin报错。查看解码<a href="https://jellyfin.org/docs/general/clients/codec-support.html" target="_blank" rel="noopener">兼容性列表</a>可以发现有部分编码格式（如H265）在常规客户端上没法硬解，这也是开启了硬解播放有的影片卡住的原因，解决方案在后文讨论。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Sorted by efficency (excluding bit depth)</td>
<td style="text-align:center">Chrome</td>
<td style="text-align:center">Firefox</td>
<td style="text-align:center">Safari</td>
<td style="text-align:center">Android</td>
<td style="text-align:center">iOS</td>
<td style="text-align:center">AndroidTV</td>
<td style="text-align:center"><a href="https://developer.roku.com/docs/specs/streaming.md" target="_blank" rel="noopener">Roku</a></td>
<td style="text-align:center">Kodi</td>
<td style="text-align:center"><a href="https://docs.jellyfin.org/general/clients/index.html#jellyfin-mpv-shim" target="_blank" rel="noopener">MPV Shim</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="https://en.wikipedia.org/wiki/DivX" target="_blank" rel="noopener">MPEG-4 Part 2/SP</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center"></td>
<td style="text-align:center">❌</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://en.wikipedia.org/wiki/MPEG-4_Part_2#Advanced_Simple_Profile_(ASP" target="_blank" rel="noopener">MPEG-4 Part 2/ASP</a>)</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center"></td>
<td style="text-align:center">❌</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://caniuse.com/#feat=mpeg4" target="_blank" rel="noopener">H.264 8Bit</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://caniuse.com/#feat=mpeg4" target="_blank" rel="noopener">H.264 10Bit</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">✅</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://caniuse.com/#feat=hevc" target="_blank" rel="noopener">H.265 8Bit</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌1</td>
<td style="text-align:center">🔶2</td>
<td style="text-align:center"></td>
<td style="text-align:center">❌</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://caniuse.com/#feat=hevc" target="_blank" rel="noopener">H.265 10Bit</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌1</td>
<td style="text-align:center">🔶2</td>
<td style="text-align:center"></td>
<td style="text-align:center">❌</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#VP9" target="_blank" rel="noopener">VP9</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">✅3</td>
<td style="text-align:center"></td>
<td style="text-align:center">🔶3</td>
<td style="text-align:center"></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs#AV1" target="_blank" rel="noopener">AV1</a>4</td>
<td style="text-align:center">🔶</td>
<td style="text-align:center">🔶</td>
<td style="text-align:center">❌</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
</div>
<h5 id="IPTV配置"><a href="#IPTV配置" class="headerlink" title="IPTV配置"></a>IPTV配置</h5><p>首先IPTV需要一个M3U格式的直播源，可以保持在本地也可以线上，这里我制作好后保存到github仓库并记下<a href="https://raw.githubusercontent.com/wuxiaoxiong1990/IPTVsource/master/tv.m3u" target="_blank" rel="noopener">地址</a>后面会用到。</p>
<p>然后配置Xteve，Xteve类似于调制解调器，将直播源与节目信息整合后供IPTV客户端访问。访问<a href="https://xteve.de/" target="_blank" rel="noopener">官方网站</a>下载对应版本，Xteve为可执行文件，windows环境直接运行即可，也可以在群晖Docker中采用Xteve镜像安装，访问端口为34400。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/5d2ad7778805a8150.png_e680.png" alt=""></p>
<p> 打开网页后，TUNERS表示同时允许几台客户端访问，默认即可，NEXT。 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/5d2ad7a21e50d5882.png_e680.png" alt=""></p>
<p> 选择M3U并填入刚刚记下的地址。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528221319.png" alt=""></p>
<p>选择EPG提供方并填入xml地址，这里选外部的EPG，网上有<a href="http://epg.51zmt.top:8000/" target="_blank" rel="noopener">大神的EPG</a>提供很全的节目信息。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/5d2ad7f70990d5672.png_e680.png" alt=""></p>
<p><strong>Settings-Stream Buffer</strong>选择Xteve，配置完成后可以在Mapping选项中看到对应的频道信息，绿色表示已批配，红色的表示未找到节目信息，可按需自行设置。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528221626.png" alt=""></p>
<p>完成后进入Jellyfin电视直播选项，添加调谐器设备和电视指南，分别对应Xteve的 <strong>DVR IP</strong> 和 <strong>XEPG URL</strong> 。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528221813.png" alt=""></p>
<p>完成后在主页进入电视直播即可以愉快的看电视了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528222207.png" alt=""></p>
<h4 id="外部访问"><a href="#外部访问" class="headerlink" title="外部访问"></a>外部访问</h4><h5 id="服务端设置"><a href="#服务端设置" class="headerlink" title="服务端设置"></a>服务端设置</h5><p>这里采用使用广泛配置简单灵活的frp实现内网穿透服务。下载对应系统的<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">安装文件</a>解压，将frps文件放到VPS的<code>/usr/bin</code>目录，frps.ini放到<code>/etc/frp</code>目录，将frps.service放到<code>/etc/systemd/system</code>目录下，frps.ini写入必要配置。如果服务器开启了BBR可去掉kcp_bind_port，kcp基于udp协议与bbr基于tcp协议没有叠加加速效果，设置一个即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 绑定端口</span><br><span class="line">bind_udp_port &#x3D; udp绑定端口</span><br><span class="line">kcp_bind_port &#x3D; kcp绑定端口（和bind_port相同）</span><br><span class="line">vhost_http_port &#x3D; 自定义http端口</span><br><span class="line">vhost_https_port &#x3D; 自定义https端口</span><br><span class="line">dashboard_port &#x3D; 管理面板端口</span><br><span class="line">dashboard_user &#x3D; 管理面板用户名</span><br><span class="line">dashboard_pwd &#x3D; 管理面板密码</span><br><span class="line">enable_prometheus &#x3D; true</span><br><span class="line">log_file &#x3D; .&#x2F;frps.log</span><br><span class="line">log_level &#x3D; info</span><br><span class="line">log_max_days &#x3D; 3</span><br><span class="line">disable_log_color &#x3D; false</span><br><span class="line">detailed_errors_to_client &#x3D; true</span><br><span class="line">token &#x3D; 连接的密码</span><br><span class="line">subdomain_host &#x3D; 配置好DNS的二级域名,如a.com</span><br><span class="line">tcp_mux &#x3D; true</span><br></pre></td></tr></table></figure>
<p>完成后启动frps并开机自启</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start frps</span><br><span class="line">systemctl enable frps</span><br></pre></td></tr></table></figure>
<h5 id="客户端设置"><a href="#客户端设置" class="headerlink" title="客户端设置"></a>客户端设置</h5><p>在docker文件夹新建一个frp文件夹，将frpc.ini放在该文件夹中。为避免莫名其妙的权限问题，最好将该文件夹权限修改为everyone可读写。frpc配置文件内容为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; VPS的IP</span><br><span class="line">server_port &#x3D; 绑定端口</span><br><span class="line">token &#x3D; 连接的密码</span><br><span class="line">pool_count &#x3D; 50</span><br><span class="line">tcp_mux &#x3D; true</span><br><span class="line"></span><br><span class="line">[http]</span><br><span class="line">type &#x3D; http</span><br><span class="line">local_ip &#x3D; 192.168.1.1</span><br><span class="line">local_port &#x3D; 80</span><br><span class="line">subdomain &#x3D; 域名前缀，如rt</span><br><span class="line"></span><br><span class="line">[jellyfin]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 192.168.1.2</span><br><span class="line">local_port &#x3D; 8096</span><br><span class="line">remote_port &#x3D; 8096</span><br></pre></td></tr></table></figure>
<p>这里采用群晖的docker镜像配置，搜索frp，选择一个镜像，拉取latest版本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528223417.png" alt=""></p>
<p>下载完成后到映像中双击frpc进行配置，勾选<strong>使用高权限执行容器</strong>，点击<strong>高级设置</strong>，勾选<strong>启动自动重新启动</strong>，切换到<strong>卷</strong>选项卡，添加刚才建立的配置文件，装载路径填写<strong>/frp/frpc.ini</strong>，<strong>网络</strong>选项勾选<strong>使用与Docker Hosts相同的网络</strong>，其余选项默认，点应用即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528224045.png" alt=""></p>
<p>可以看到frp客户端已正常运行</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528224347.png" alt=""></p>
<p>访问<code>a.com:8096</code>即可远程使用jellyfin服务了，连接的速度取决于VPS的网络环境。</p>
<h4 id="客户端设置-1"><a href="#客户端设置-1" class="headerlink" title="客户端设置"></a>客户端设置</h4><p>由于在一般浏览器和客户端上部分视频无法硬转码，而软解又极度消耗CPU，只有上面兼容表里<code>Kodi</code>和 <code>Jellyfin MPV Shim</code>两种客户端可以实现完美硬解，下面分别介绍两种方法。</p>
<h5 id="Kodi"><a href="#Kodi" class="headerlink" title="Kodi"></a>Kodi</h5><p>安装方法参考<a href="https://jellyfin.org/docs/general/clients/kodi.html" target="_blank" rel="noopener">参考文档</a></p>
<p>The recommended install method is to use the official Jellyfin add-on repository. This allows for easy install of the Jellyfin for Kodi add-on, as well as automatically keeping the add-on up to date with the latest version. Any other Jellyfin related add-ons that may be built in the future will also be available in this repository.</p>
<p>The installation method for the repository varies depending on what kind of device you’re using, outlined below.</p>
<h6 id="General-Use-Devices-PCs-and-Tablets"><a href="#General-Use-Devices-PCs-and-Tablets" class="headerlink" title="General Use Devices (PCs and Tablets)"></a>General Use Devices (PCs and Tablets)</h6><ol>
<li>Download the repository installer found <a href="https://kodi.jellyfin.org/repository.jellyfin.kodi.zip" target="_blank" rel="noopener">here</a>.<ul>
<li>It will be saved as <code>repository.jellyfin.kodi.zip</code></li>
</ul>
</li>
<li>Install the Jellyfin repository.<ul>
<li>Open Kodi, go to the settings menu, and navigate to “Add-On Browser”</li>
<li>Select “Install from Zip File”<ul>
<li>If prompted, enter settings and enable “Unknown Sources”, then go back to the Add-On Browser</li>
</ul>
</li>
<li>Select the newly downloaded file and it will be installed</li>
</ul>
</li>
<li>Proceed to <a href="https://jellyfin.org/docs/general/clients/kodi.html#install-jellyfin-for-kodi-add-on" target="_blank" rel="noopener">Install Jellyfin for Kodi Add-On</a></li>
</ol>
<h6 id="“Embedded”-Devices-Android-TV-Firestick-and-other-TV-Boxes"><a href="#“Embedded”-Devices-Android-TV-Firestick-and-other-TV-Boxes" class="headerlink" title="“Embedded” Devices (Android TV, Firestick, and other TV Boxes)"></a>“Embedded” Devices (Android TV, Firestick, and other TV Boxes)</h6><ol>
<li>Open Kodi, go to the settings menu, and navigate to “File manager”<ul>
<li>Select “Add source”</li>
<li>In the text box, enter <code>https://kodi.jellyfin.org</code></li>
<li>Enter a name for the data source, such as “Jellyfin Repo” and select Ok</li>
</ul>
</li>
<li>From the settings menu, navigate to “Add-On Browser”<ul>
<li>Select “Install from Zip File”<ul>
<li>If prompted, enter settings and enable “Unknown Sources”, then go back to the Add-On Browser</li>
</ul>
</li>
<li>Select the data source you just added</li>
<li>Install <code>repository.jellyfin.kodi.zip</code></li>
</ul>
</li>
<li>Proceed to <a href="https://jellyfin.org/docs/general/clients/kodi.html#install-jellyfin-for-kodi-add-on" target="_blank" rel="noopener">Install Jellyfin for Kodi Add-On</a></li>
</ol>
<h6 id="Install-Jellyfin-for-Kodi-Add-On"><a href="#Install-Jellyfin-for-Kodi-Add-On" class="headerlink" title="Install Jellyfin for Kodi Add-On"></a>Install Jellyfin for Kodi Add-On</h6><ol>
<li><p>Install Jellyfin for Kodi.</p>
<ul>
<li>From within Kodi, navigate back to “Add-On Browser”</li>
<li>Select “Install from Repository”</li>
<li>Choose “Kodi Jellyfin Addons”, followed by “Video Add-ons”</li>
<li>Select the Jellyfin add-on and choose install</li>
</ul>
</li>
<li><p>Within a few seconds you should be prompted for your server details.</p>
<ul>
<li>If a Jellyfin server is detected on your local network, it will displayed in a dialog</li>
<li>If a Jellyfin server is not detected on your local network, select “Manually Add Server”. Enter your server info into the text field.<ul>
<li>Enter the server name or IP address and the port number (default value is 8096)<ul>
<li>Host: <code>192.168.1.10:8096</code></li>
</ul>
</li>
<li>If using SSL and a reverse proxy, enter the full URL in the “Host” field<ul>
<li>Host: <code>https://jellyfin.example.com</code></li>
</ul>
</li>
<li>Note that if you have a baseurl set, you should append that value to the end of the host field.<ul>
<li>Host: <code>192.168.0.10:8096/jellyfin</code></li>
</ul>
</li>
</ul>
</li>
<li>Select user account and input password, or select “Manual Login” and fill in your user infomation</li>
</ul>
</li>
<li><p>Once you’re succesfully authenticated with the server, you’ll be asked about which mode you’d like to use, Add-on vs Native, which are outlined below.</p>
</li>
</ol>
<h6 id="Add-on-Mode"><a href="#Add-on-Mode" class="headerlink" title="Add-on Mode"></a>Add-on Mode</h6><p>   Add-on mode uses the Jellyfin server to translate media files from the filesystem to Kodi. This is the default setting for the add-on, and is sufficient for most use cases. It will work both on the local network and over the Internet through a reverse proxy or VPN connection. Providing network speed is sufficient, Kodi will direct play nearly all files and put little overhead on the Jellyfin server. Exceptions to this rule are files with 7.1 audio tracks and some 4k content, which will be transcoded by the server.</p>
<p>   To use Add-on mode, simply choose “Add-on” at the dialog and proceed to <a href="https://jellyfin.org/docs/general/clients/kodi.html#library-syncing" target="_blank" rel="noopener">Library Syncing</a></p>
<h6 id="Native-Mode"><a href="#Native-Mode" class="headerlink" title="Native Mode"></a>Native Mode</h6><p>   Native mode accesses your media files directly from the filesystem, bypassing the Jellyfin server during playback. Native mode needs more setup and configuration, but it can lead to better performance as everything will direct play no matter what format or encoding is used. It requires your media to be available to the device Kodi is running on over either NFS or Samba, and therefore should only be used on a LAN or over a VPN connection.</p>
<p>   To use Native mode, first set up your libraries in Jellyfin with a remote path.</p>
<ol>
<li><p>In the Jellyfin server, navigate to the Libraries section of the admin dashboard.</p>
<ul>
<li><p>Select an existing library (or create a new one)</p>
</li>
<li><p>Select the media folder</p>
</li>
<li><p>Enter the path to your network share in the “Shared network folder” textbox</p>
</li>
<li><p>Possible formats:</p>
<ul>
<li><p>NFS</p>
<ul>
<li><code>nfs://192.168.0.10:/path/to/media</code></li>
</ul>
</li>
<li><p>Samba</p>
<ul>
<li><p>Guest User - <code>\\192.168.0.10\share_name</code></p>
</li>
<li><p>Custom User (Not Recommended) - <code>\\user:password@192.168.0.10\share_name</code></p>
</li>
<li><p>It’s more secure to use the generic Guest mapping here and specify credentials from within Kodi</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Configure libraries in Kodi</p>
<ul>
<li>Skip the initial library selection. We need to add file shares to Kodi first</li>
<li>Within Kodi, navigate to the settings menu and select “File manager”</li>
<li>Select “Add source”</li>
<li>Select “Browse” and “Add network location”</li>
<li>Create either a NFS or SMB location from the selection box and fill in the necessary information about your network share</li>
<li>Select your newly created location and choose “Ok”</li>
<li>Give your media source a name and choose “Ok”</li>
<li>Go to Add-Ons -&gt; Jellyfin -&gt; Manage Libraries -&gt; Add Libraries</li>
</ul>
</li>
<li><p>Proceed to <a href="https://jellyfin.org/docs/general/clients/kodi.html#library-syncing" target="_blank" rel="noopener">Library Syncing</a></p>
</li>
</ol>
<h5 id="Jellyfin-MPV-Shim"><a href="#Jellyfin-MPV-Shim" class="headerlink" title="Jellyfin MPV Shim"></a>Jellyfin MPV Shim</h5><p><a href="https://jellyfin.org/docs/general/clients/index.html#jellyfin-mpv-shim" target="_blank" rel="noopener">Jellyfin MPV Shim</a>是一个简单轻巧的Jellyfin客户端，支持Windows和Linux。 将其视为Jellyfin的开源Chromecast。 您可以从Jellyfin投放几乎所有内容，并且可以直接播放。 完全支持字幕，并且有其他字幕工具可以像其他Jellyfin客户端一样来管理字幕。</p>
<p>下载<a href="https://github.com/iwalton3/jellyfin-mpv-shim/releases" target="_blank" rel="noopener">可执行程序</a>，有两个版本，您不需要管理员权限即可安装桌面版本，该桌面版本包括了shim版本。 （它在开始菜单中有一个单独的快捷方式。）为避免每次启动便携式shim版本时收到安全警告，请右键单击并选择“属性”。 单击页面底部的“取消阻止”，然后单击“确定”。这里我们选择体积更小的shim版本。</p>
<p>MPV使用非常简单，双击启动，填入服务器信息添加成功即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528232236.png" alt=""></p>
<p>从浏览器打开jellyfin页面，点击右上角<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528232654.png" alt="">符号，选择带<code>Jellyfin MPV Shim</code>字样的客户端，此时弹出一个新的播放器窗口播放视频，可以完美兼容几乎所有格式。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/20200528233813.png" alt=""></p>
<h5 id="关于转码的说明"><a href="#关于转码的说明" class="headerlink" title="关于转码的说明"></a>关于转码的说明</h5><p>根据该<a href="https://github.com/jellyfin/jellyfin/issues/2626#issuecomment-600981367" target="_blank" rel="noopener">issue</a>，jellyfin在采用nssm开启的服务模式(service)下硬件转码无法工作，因此若要GPU转码需关闭关闭nssm守护服务(<code>nssm remove jellyfin</code>)后直接运行jellyfin(<code>jellyfin -d &lt;path&gt;\jellyfin\data noautorunwebapp</code>)。</p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>Jellyfin</tag>
      </tags>
  </entry>
  <entry>
    <title>康威生命游戏Python小练习</title>
    <url>/2020/05/04/%E5%BA%B7%E5%A8%81%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8FPython%E5%B0%8F%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/Gospers_glider_gun.gif" alt=""></p>
<a id="more"></a>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><strong>康威生命游戏</strong>（英语：Conway’s Game of Life），又称<strong>康威生命棋</strong>，是英国数学家<a href="https://zh.wikipedia.org/wiki/詹·何頓·康威" target="_blank" rel="noopener">约翰·何顿·康威</a>在1970年发明的<a href="https://zh.wikipedia.org/wiki/細胞自動機" target="_blank" rel="noopener">细胞自动机</a>。它最初于1970年10月在《<a href="https://zh.wikipedia.org/wiki/科學美國人" target="_blank" rel="noopener">科学美国人</a>》杂志上<a href="https://zh.wikipedia.org/wiki/馬丁·葛登能" target="_blank" rel="noopener">马丁·葛登能</a>的“数学游戏”专栏出现。</p>
<h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><p>生命游戏中，对于任意细胞，规则如下：</p>
<ul>
<li>每个细胞有两种状态 - 存活或死亡，每个细胞与以自身为中心的周围<strong>八格</strong>细胞产生互动（如图，黑色为存活，白色为死亡）</li>
<li>当前细胞为存活状态时，当周围的存活细胞低于2个时（不包含2个），该细胞变成死亡状态。（模拟生命数量稀少）</li>
<li>当前细胞为存活状态时，当周围有2个或3个存活细胞时，该细胞保持原样。</li>
<li>当前细胞为存活状态时，当周围有超过3个存活细胞时，该细胞变成死亡状态。（模拟生命数量过多）</li>
<li>当前细胞为死亡状态时，当周围有3个存活细胞时，该细胞变成存活状态。（模拟繁殖）</li>
</ul>
<p>可以把最初的细胞结构定义为种子，当所有在种子中的细胞<strong>同时</strong>被以上规则处理后，可以得到第一代细胞图。按规则继续处理当前的细胞图，可以得到下一代的细胞图，周而复始。</p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>生命游戏是一个<a href="https://zh.wikipedia.org/wiki/零玩家遊戲" target="_blank" rel="noopener">零玩家游戏</a>。它包括一个<a href="https://zh.wikipedia.org/wiki/二維" target="_blank" rel="noopener">二维</a><a href="https://zh.wikipedia.org/wiki/矩形" target="_blank" rel="noopener">矩形</a><a href="https://zh.wikipedia.org/wiki/世界" target="_blank" rel="noopener">世界</a>，这个世界中的每个方格居住着一个活着的或死了的<a href="https://zh.wikipedia.org/wiki/细胞" target="_blank" rel="noopener">细胞</a>。一个细胞在下一个时刻生死取决于相邻八个方格中活着的或死了的细胞的数量。如果相邻方格活着的细胞数量过多，这个细胞会因为资源匮乏而在下一个时刻死去；相反，如果周围活细胞过少，这个细胞会因太孤单而死去。实际中，玩家可以设定周围活细胞的数目怎样时才适宜该细胞的生存。如果这个数目设定过高，世界中的大部分细胞会因为找不到太多的活的邻居而死去，直到整个世界都没有生命；如果这个数目设定过低，世界中又会被生命充满而没有什么变化。</p>
<p>实际中，这个数目一般选取2或者3；这样整个生命世界才不至于太过荒凉或拥挤，而是一种动态的平衡。这样的话，游戏的规则就是：当一个方格周围有2或3个活细胞时，方格中的活细胞在下一个时刻继续存活；即使这个时刻方格中没有活细胞，在下一个时刻也会“<a href="https://zh.wikipedia.org/w/index.php?title=诞生&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">诞生</a>”活细胞。</p>
<p>在这个游戏中，还可以设定一些更加复杂的规则，例如当前方格的状况不仅由父一代决定，而且还考虑祖父一代的情况。玩家还可以作为这个世界的“<a href="https://zh.wikipedia.org/wiki/上帝" target="_blank" rel="noopener">上帝</a>”，随意设定某个方格细胞的死活，以观察对世界的影响。</p>
<p>在游戏的进行中，杂乱无序的细胞会逐渐演化出各种精致、有形的结构；这些结构往往有很好的<a href="https://zh.wikipedia.org/wiki/对称" target="_blank" rel="noopener">对称</a>性，而且每一代都在变化形状。一些形状已经锁定，不会逐代变化。有时，一些已经成形的结构会因为一些<a href="https://zh.wikipedia.org/w/index.php?title=无序&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">无序</a>细胞的“入侵”而被破坏。但是形状和<a href="https://zh.wikipedia.org/w/index.php?title=秩序&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener">秩序</a>经常能从杂乱中产生出来。</p>
<p>这个游戏被许多<a href="https://zh.wikipedia.org/wiki/计算机程序" target="_blank" rel="noopener">计算机程序</a>实现了。<a href="https://zh.wikipedia.org/wiki/Unix" target="_blank" rel="noopener">Unix</a>世界中的许多<a href="https://zh.wikipedia.org/wiki/駭客" target="_blank" rel="noopener">骇客</a>喜欢玩这个游戏，他们用<a href="https://zh.wikipedia.org/wiki/字符" target="_blank" rel="noopener">字符</a>代表一个细胞，在一个<a href="https://zh.wikipedia.org/wiki/计算机" target="_blank" rel="noopener">计算机</a><a href="https://zh.wikipedia.org/wiki/屏幕" target="_blank" rel="noopener">屏幕</a>上进行演化。比较著名的例子是，<a href="https://zh.wikipedia.org/wiki/GNU_Emacs" target="_blank" rel="noopener">GNU Emacs</a>编辑器中就包括这样一个小游戏。</p>
<h3 id="高斯帕机枪Python示例"><a href="#高斯帕机枪Python示例" class="headerlink" title="高斯帕机枪Python示例"></a>高斯帕机枪Python示例</h3><p>细胞初始点位</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/图片1.png" alt=""></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span>  matplotlib <span class="keyword">import</span> animation</span><br><span class="line"></span><br><span class="line">length = <span class="number">100</span></span><br><span class="line"><span class="comment"># 随机种子</span></span><br><span class="line"><span class="comment"># arr = np.random.randint(0, 2, (length, length))</span></span><br><span class="line"><span class="comment"># 高斯帕滑翔机</span></span><br><span class="line">arr = np.zeros((length, length), dtype=int)</span><br><span class="line">arr[<span class="number">2</span>, <span class="number">26</span>] = <span class="number">1</span></span><br><span class="line">arr[<span class="number">3</span>, [<span class="number">24</span>, <span class="number">26</span>]] = <span class="number">1</span></span><br><span class="line">arr[<span class="number">4</span>, [<span class="number">14</span>, <span class="number">15</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">36</span>, <span class="number">37</span>]] = <span class="number">1</span></span><br><span class="line">arr[<span class="number">5</span>, [<span class="number">13</span>, <span class="number">17</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">36</span>, <span class="number">37</span>]] = <span class="number">1</span></span><br><span class="line">arr[<span class="number">6</span>, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">18</span>, <span class="number">22</span>, <span class="number">23</span>]] = <span class="number">1</span></span><br><span class="line">arr[<span class="number">7</span>, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">24</span>, <span class="number">26</span>]] = <span class="number">1</span></span><br><span class="line">arr[<span class="number">8</span>, [<span class="number">12</span>, <span class="number">18</span>, <span class="number">26</span>]] = <span class="number">1</span></span><br><span class="line">arr[<span class="number">9</span>, [<span class="number">13</span>, <span class="number">17</span>]] = <span class="number">1</span></span><br><span class="line">arr[<span class="number">10</span>, [<span class="number">14</span>, <span class="number">15</span>]] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count_alive</span><span class="params">(arr, i, j)</span>:</span></span><br><span class="line">    m, n = arr.shape</span><br><span class="line">    up = (i - <span class="number">1</span>) % m</span><br><span class="line">    dn = (i + <span class="number">1</span>) % m</span><br><span class="line">    lt = (j - <span class="number">1</span>) % n</span><br><span class="line">    rt = (j + <span class="number">1</span>) % n</span><br><span class="line">    <span class="keyword">return</span> arr[up,lt] + arr[up,j] + arr[up,rt] \</span><br><span class="line">          +arr[i,lt] +              arr[i,rt] \</span><br><span class="line">          +arr[dn,lt] + arr[dn,j] + arr[dn,rt]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(arr)</span>:</span></span><br><span class="line">    <span class="string">"""update arr for next iter"""</span></span><br><span class="line">    arr_new = arr.copy()</span><br><span class="line">    m, n = arr.shape</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</span><br><span class="line">            <span class="comment"># if point is alive</span></span><br><span class="line">            <span class="keyword">if</span> arr[i,j] == <span class="number">1</span> <span class="keyword">and</span> (count_alive(arr,i,j) &lt; <span class="number">2</span> <span class="keyword">or</span> count_alive(arr,i,j) &gt; <span class="number">3</span>):</span><br><span class="line">                arr_new[i,j] = <span class="number">0</span></span><br><span class="line">            <span class="comment"># if point is dead</span></span><br><span class="line">            <span class="keyword">elif</span> arr[i,j] == <span class="number">0</span> <span class="keyword">and</span> count_alive(arr,i,j) == <span class="number">3</span>:</span><br><span class="line">                arr_new[i,j] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> arr_new</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">animate</span><span class="params">(i,*args)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> arr</span><br><span class="line">    img, = args</span><br><span class="line">    plt.title(str(i))</span><br><span class="line">    arr = update(arr)</span><br><span class="line">    print(<span class="string">'iter'</span>, i, <span class="string">'\n'</span>, arr)</span><br><span class="line">    img.set_array(arr)</span><br><span class="line">    <span class="keyword">return</span> img,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    print(arr)</span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">    img = ax.imshow(arr, cmap=<span class="string">'bone'</span>, extent=(<span class="number">-0.5</span>, length+<span class="number">.5</span>, length+<span class="number">.5</span>, <span class="number">-0.5</span>), animated=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># ax.set_xticks(np.linspace(-0.5, length + .5, length + 1))</span></span><br><span class="line">    <span class="comment"># ax.set_yticks(np.linspace(-0.5, length + .5, length + 1))</span></span><br><span class="line">    <span class="comment"># ax.grid(True)</span></span><br><span class="line">    ax.set_xticks([])</span><br><span class="line">    ax.set_yticks([])</span><br><span class="line">    ani = animation.FuncAnimation(fig, func=animate, fargs=(img,),</span><br><span class="line">                                  frames=<span class="number">200</span>, interval=<span class="number">20</span>, blit=<span class="literal">False</span>)</span><br><span class="line">    ani.save(<span class="string">'GameOfLife.mp4'</span>, fps=<span class="number">15</span>, extra_args=[<span class="string">'-vcodec'</span>, <span class="string">'libx264'</span>])</span><br><span class="line">    <span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in range(100):</span></span><br><span class="line"><span class="comment">#     arr = update(arr)</span></span><br><span class="line"><span class="comment">#     print(arr)</span></span><br><span class="line"><span class="comment">#     plt.imshow(arr, cmap='bone', extent=(-0.5, length+.5, length+.5, -0.5))</span></span><br><span class="line"><span class="comment">#     plt.xticks(np.linspace(-0.5, length+.5, length+1))</span></span><br><span class="line"><span class="comment">#     plt.yticks(np.linspace(-0.5, length+.5, length+1))</span></span><br><span class="line"><span class="comment">#     plt.grid(True)</span></span><br><span class="line"><span class="comment">#     plt.show()</span></span><br></pre></td></tr></table></figure>
<h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><video src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/GameOfLife.mp4" controls="controls" style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;">
your browser does not support the video tag
</video>

]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 Debian 9 上搭建 LNMP 环境</title>
    <url>/2020/04/10/%E5%A6%82%E4%BD%95%E5%9C%A8-Debian-9-%E4%B8%8A%E6%90%AD%E5%BB%BA-LNMP-%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-04/how-to-install-lemp-stack-on-debian-9-featured.jpg" alt=""></p>
<p>LNMP 是其四个开源组件名称的首字母缩写简称，当然根据读音也可以成为LEMP，使用PHP开发的web程序通常需要搭建 LNMP 环境来更好支持web运行<a id="more"></a>， 如果你购买了一台 VPS 服务器 不管是 <a href="https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=nw5f572d" target="_blank" rel="noopener">阿里云ECS</a> 服务器还是 <a href="https://www.vultr.com/?ref=7390907" target="_blank" rel="noopener">VULTR VPS</a> 服务器，如果你选择安装 <a href="https://linux265.com/distro/10.html" target="_blank" rel="noopener">Debian</a> 系统并要安装LNMP环境，这篇文章将会对你有所帮助。 </p>
<ul>
<li>L - Linux操作系统</li>
<li>N - Nginx [引擎x]一个HTTP和反向代理服务器</li>
<li>M - MySQL或MariaDB关系数据库管理系统</li>
<li>P - PHP编程语言。</li>
</ul>
<p>本系列教程将向您展示如何安装Nginx，创建Nginx服务器块，生成免费的Let’s Encrypt SSL证书，安装和保护MariaDB以及安装PHP。</p>
<p>本系列末尾列出了本系列的详细教程。</p>
<p>如果您赶时间并且不想阅读更详细的文档，可以按照快速入门部分在 Debian 9 服务器上安装LNMP 环境。</p>
<h3 id="在Debian-9上安装LNMP环境-快速入门"><a href="#在Debian-9上安装LNMP环境-快速入门" class="headerlink" title="在Debian 9上安装LNMP环境[快速入门]"></a>在Debian 9上安装LNMP环境[快速入门]</h3><p>本快速入门将向您展示在Debian 9服务器上安装LNMP环境所需的基本步骤。</p>
<h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>您登录的用户必须具有sudo权限才能安装软件包。</p>
<p>在开始本教程之前，您可能需要一台 Debian 9 服务器：</p>
<ul>
<li>至少 1GB 的 RAM</li>
<li>具有<a href="https://linux265.com/news/3599.html" target="_blank" rel="noopener">sudo权限</a>的非root用户</li>
</ul>
<p>没有服务器的同学，国内可以在<a href="https://linux265.com/go/aliyun" target="_blank" rel="noopener">这里购买</a>，国外可以在<a href="https://linux265.com/go/vultr" target="_blank" rel="noopener">这里购买</a> VPS服务器。</p>
<h3 id="步骤一、安装Nginx"><a href="#步骤一、安装Nginx" class="headerlink" title="步骤一、安装Nginx"></a><strong>步骤一、安装Nginx</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure>
<p>安装过程完成后，Nginx服务将自动启动。</p>
<h3 id="步骤二、安装MariaDB"><a href="#步骤二、安装MariaDB" class="headerlink" title="步骤二、安装MariaDB"></a>步骤二、安装MariaDB</h3><p>随着Debian 9的发布，MySQL被MariaDB替换为默认数据库系统。 通过运行以下命令安装MariaDB：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install mariadb-server</span><br></pre></td></tr></table></figure>
<p>安装完成后，执行mysql_secure_installation命令以提高MySQL的安全性：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p>系统将要求您设置root密码，删除匿名用户，限制root用户访问本地计算机并删除测试数据库。 你应该对所有问题回答“是”。</p>
<blockquote>
<p>如果要安装MySQL而不是MariaDB，请查看我们的<a href="https://linux265.com/news/3368.html" target="_blank" rel="noopener">教程</a>以获取安装说明。</p>
</blockquote>
<h3 id="步骤三、安装PHP"><a href="#步骤三、安装PHP" class="headerlink" title="步骤三、安装PHP"></a>步骤三、安装PHP</h3><p>Debian 9 附带 PHP 7.0 版。 要安装PHP FPM和最常见的PHP模块类型：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install php-fpm php-opcache php-cli php-gd php-curl php-mysql php-mbstring</span><br></pre></td></tr></table></figure>
<blockquote>
<p>要安装PHP 7.2，请访问本<a href="https://linux265.com/news/3366.html" target="_blank" rel="noopener">教程</a>。</p>
</blockquote>
<h3 id="步骤四、配置Nginx以处理PHP页面"><a href="#步骤四、配置Nginx以处理PHP页面" class="headerlink" title="步骤四、配置Nginx以处理PHP页面"></a>步骤四、配置Nginx以处理PHP页面</h3><p>现在我们已经安装了所有LEMP组件，我们可以编辑Nginx虚拟主机配置文件并添加以下行，以便Nginx可以处理PHP文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    # . . . other code</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        include snippets&#x2F;fastcgi-php.conf;</span><br><span class="line">        fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.0-fpm.sock;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于Centos，配置为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;  </span><br><span class="line">           # root           html;  根目录路径</span><br><span class="line">           fastcgi_pass   127.0.0.1:9000;  </span><br><span class="line">           fastcgi_index  index.php;  </span><br><span class="line">           fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;  </span><br><span class="line">           include        fastcgi_params;  </span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>
<p>不要忘记重新启动Nginx服务以使更改生效：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure>
<h3 id="步骤五、配置phpmyadmin（可选）"><a href="#步骤五、配置phpmyadmin（可选）" class="headerlink" title="步骤五、配置phpmyadmin（可选）"></a>步骤五、配置phpmyadmin（可选）</h3><p>phpMyAdmin 提供了一个 Web 界面，可以管理 MySQL / MariaDB 数据库。</p>
<p><strong>网站：</strong></p>
<p><a href="https://www.phpmyadmin.net/" target="_blank" rel="noopener">https://www.phpmyadmin.net/</a></p>
<p>下载：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;www&#x2F;web</span><br><span class="line">curl -O https:&#x2F;&#x2F;files.phpmyadmin.net&#x2F;phpMyAdmin&#x2F;4.7.0&#x2F;phpMyAdmin-4.7.0-all-languages.zip</span><br></pre></td></tr></table></figure>
<p>解压：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unzip phpMyAdmin*.zip</span><br></pre></td></tr></table></figure>
<p>删除：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -rf phpMyAdmin*.zip</span><br></pre></td></tr></table></figure>
<p>重命名解压之后的目录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv phpMyAdmin* phpmyadmin</span><br></pre></td></tr></table></figure>
<p>配置nginx：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;php.conf</span><br><span class="line"></span><br><span class="line">#输入</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  YOUR_DOMAIN;</span><br><span class="line">    root &#x2F;www&#x2F;web&#x2F;phpmyadmin;</span><br><span class="line">    index index.php;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重启nginx：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure>
<p>配置用户名密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mysql -p -u root</span><br><span class="line">CREATE USER &#39;pmauser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password_here&#39;;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;pmauser&#39;@&#39;localhost&#39; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>
<p>用刚配置的用户名密码访问：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;YOUR_DOMAIN</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-04/phpmyadmin.png" alt=""></p>
<h3 id="步骤六、v2ray-https证书"><a href="#步骤六、v2ray-https证书" class="headerlink" title="步骤六、v2ray+https证书"></a>步骤六、v2ray+https证书</h3><p>安装certbot自动申请：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt -y update</span><br><span class="line">apt -y install nginx python-certbot-nginx</span><br></pre></td></tr></table></figure>
<p>安装v2ray/清空默认的配置文件/生成一个uuid：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https:&#x2F;&#x2F;install.direct&#x2F;go.sh)</span><br><span class="line">echo &gt; &#x2F;etc&#x2F;v2ray&#x2F;config.json</span><br><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;uuid</span><br></pre></td></tr></table></figure>
<p>编辑配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc&#x2F;v2ray&#x2F;config.json</span><br></pre></td></tr></table></figure>
<p>写入如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;log&quot;: &#123;</span><br><span class="line">    &quot;loglevel&quot;: &quot;info&quot;,</span><br><span class="line">    &quot;access&quot;: &quot;&#x2F;var&#x2F;log&#x2F;v2ray&#x2F;access.log&quot;,</span><br><span class="line">    &quot;error&quot;: &quot;&#x2F;var&#x2F;log&#x2F;v2ray&#x2F;error.log&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;inbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;port&quot;: 10000,</span><br><span class="line">      &quot;listen&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">      &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;clients&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;id&quot;: &quot;你生成的UUID&quot;,</span><br><span class="line">            &quot;alterId&quot;: 64</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;streamSettings&quot;: &#123;</span><br><span class="line">        &quot;network&quot;: &quot;ws&quot;,</span><br><span class="line">        &quot;wsSettings&quot;: &#123;</span><br><span class="line">        &quot;path&quot;: &quot;&#x2F;sometimesnaive&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;outbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;protocol&quot;: &quot;freedom&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>检查v2ray配置是否有误：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;v2ray -config &#x2F;etc&#x2F;v2ray&#x2F;config.json -test</span><br></pre></td></tr></table></figure>
<p>没问题的话重启v2ray使新的配置生效：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl restart v2ray</span><br></pre></td></tr></table></figure>
<p>接着新建nginx配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;v2ray.conf</span><br></pre></td></tr></table></figure>
<p>写入如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  dns64.233.fi;</span><br><span class="line"></span><br><span class="line">location &#x2F;sometimesnaive &#123;</span><br><span class="line">    proxy_pass       http:&#x2F;&#x2F;127.0.0.1:10000;</span><br><span class="line">    proxy_redirect             off;</span><br><span class="line">    proxy_http_version         1.1;</span><br><span class="line">    proxy_set_header Upgrade   $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    proxy_set_header Host      $http_host;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>检查nginx配置是否有误：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure>
<p>没问题的话使用certbot签发一个ssl证书：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">certbot --nginx --agree-tos --no-eff-email --email xxxx@qq.com</span><br></pre></td></tr></table></figure>
<p>certbot是一个非常方便的ssl证书申请工具，可以自动为nginx配置证书/自动续期，按照下面的步骤选择即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Which names would you like to activate HTTPS for?</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">1: dns64.233.fi</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Select the appropriate numbers separated by commas and&#x2F;or spaces, or leave input</span><br><span class="line">blank to select all options shown (Enter &#39;c&#39; to cancel): 1</span><br><span class="line">Cert not yet due for renewal</span><br><span class="line"></span><br><span class="line">You have an existing certificate that has exactly the same domains or certificate name you requested and isn&#39;t close to expiry.</span><br><span class="line">(ref: &#x2F;etc&#x2F;letsencrypt&#x2F;renewal&#x2F;dns64.233.fi.conf)</span><br><span class="line"></span><br><span class="line">What would you like to do?</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">1: Attempt to reinstall this existing certificate</span><br><span class="line">2: Renew &amp; replace the cert (limit ~5 per 7 days)</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Select the appropriate number [1-2] then [enter] (press &#39;c&#39; to cancel): 1</span><br><span class="line">Keeping the existing certificate</span><br><span class="line">Deploying Certificate to VirtualHost &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;v2ray.conf</span><br><span class="line"></span><br><span class="line">Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">1: No redirect - Make no further changes to the webserver configuration.</span><br><span class="line">2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for</span><br><span class="line">new sites, or if you&#39;re confident your site works on HTTPS. You can undo this</span><br><span class="line">change by editing your web server&#39;s configuration.</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Select the appropriate number [1-2] then [enter] (press &#39;c&#39; to cancel): 2</span><br><span class="line">Traffic on port 80 already redirecting to ssl in &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;v2ray.conf</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Congratulations! You have successfully enabled https:&#x2F;&#x2F;dns64.233.fi</span><br></pre></td></tr></table></figure>
<p>设置v2ray/nginx开机自启：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable v2ray nginx</span><br></pre></td></tr></table></figure>
<p>最后修改机器的DNS服务器地址：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc&#x2F;resolv.conf</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>LNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>VPS挂载阿里云OSS</title>
    <url>/2020/03/18/VPS%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91OSS/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-18/head.jpg" alt=""></p>
<a id="more"></a>
<p>(<a href="https://spmax.top/p-2428/Mmx.html" target="_blank" rel="noopener">转</a>)服务器容量不够用？硬盘一下子就被塞满了？憋担心，阿里云的oss提供了挂载功能，挂载之后就和本地文件一个尿性了，且不占用服务器空间，这不就是扩容吗?。我已经利用这个功能把本站所有图片、视频等文件移到了oss中，而网页文件（js，css，php等）则留在了本地。腾讯云似乎没有提供这种服务。</p>
<p>你可能会觉得，oss的流量费用特贵，对没错，真的是特贵。因为oss是为自家服务的容器服务，外网流量当然得贵一点。而用阿里云的服务器挂载的话，就只用付储存的钱就够了，储存包年9￥40Gb，不亏，特香。当然，挂载的话流量消耗的是服务器的，也会占用相应的带宽（如果是内网的话仅占用内网带宽）。</p>
<p>宝塔是有oss挂载插件的，但是特low，我就没用那个插件挂载成功过。</p>
<h3 id="一、创建Bucket"><a href="#一、创建Bucket" class="headerlink" title="一、创建Bucket"></a><strong>一、创建Bucket</strong></h3><p>首先，你得有一台阿里云的服务器直接挂载或中转，土豪请自便。</p>
<p>只要你购买了储存包，Bucket是不限数量的，随便创建。购买储存包选择地址的时候最好选择和服务器同一地址的地方。用外网流量的人注意，大陆之外流量贵死 。</p>
<p>创建时选择私人读写即可，没必要公共读。这里的Bucket的名称后面是要用的，不要乱取。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-18/QQ截图20190616174109.png" alt=""></p>
<h3 id="二、安装ossfs"><a href="#二、安装ossfs" class="headerlink" title="二、安装ossfs"></a><strong>二、安装ossfs</strong></h3><p>阿里云是提供了详细的帮助文档的，一般人都看得懂。</p>
<blockquote>
<p><a href="https://help.aliyun.com/document_detail/32196.html" target="_blank" rel="noopener">帮助文档</a></p>
</blockquote>
<p>我也没什么好补充的，再不会发工单让客服给你装。</p>
<p>CentOS 7.x 版本：</p>
<blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://gosspublic.alicdn.com/ossfs/ossfs_1.80.6_centos7.0_x86_64.rpm</span><br><span class="line">sudo yum localinstall ossfs_1.80.6_centos7.0_x86_64.rpm</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</blockquote>
<p>Debian 9/Ubuntu 16.06+版本：</p>
<blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/aliyun/ossfs/releases/download/v1.80.5/ossfs_1.80.5_ubuntu16.04_amd64.deb</span><br><span class="line">sudo dpkg -i ossfs_1.80.5_ubuntu16.04_amd64.deb</span><br></pre></td></tr></table></figure>
</blockquote>
<p>然后就ok了。</p>
<h3 id="三、挂载Bucket"><a href="#三、挂载Bucket" class="headerlink" title="三、挂载Bucket"></a><strong>三、挂载Bucket</strong></h3><p>阿里的帮助文档也给出了挂载方法。</p>
<p>但其中还是有一些小错误，比如缺了参数。</p>
<p>普通直接挂载后，目录所有者是root且权限是640。这使网站程序无权限写操作，压根用不了。</p>
<p>解决方法帮助文档也给出了，我总结一下</p>
<ol>
<li>能同时挂载多个Bucket多个目录，输出多个账号访问信息到<code>/etc/passwd-ossfs</code>然后挂载即可。</li>
<li>用<code>-o allow_other</code>参数将目录权限设置为777。</li>
<li>用<code>sudo -u user</code>或用<code>uid/gid</code>信息即可指定用户。</li>
</ol>
<p>下面是详细的说明和举例。</p>
<p>参数说明：</p>
<p><code>www</code>：需要更改到的用户。</p>
<p><code>your_bucket</code>：上面创建Bucket时提到的要用的名称，并已经输出到了<code>/etc/passwd-ossfs</code>文件中。</p>
<p><code>your_mount_point</code>：你需要挂载到的目录，必须是存在的目录（就是要提前创建好该目录），不以<code>/</code>结尾。</p>
<p><code>your_endpoint</code>：阿里云oss控制台中Bucket概览中给出的EndPoint，选用[ECS 的经典网络访问（内网）]即可，或者你可以用阿里云的服务器反向代理该链接创建的链接以避免费用，供外网服务器使用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-18/QQ截图20190616182722.png" alt=""></p>
<p><code>your-access-key-id</code>与<code>your-access-key-secret</code>：阿里云账号的密钥，这个东西很重要，不要遇到什么人说帮你配置你就傻傻交出去了。获取位置如下图。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-18/QQ截图20190616182917.png" alt=""></p>
<p>先将Bucket名、密钥等一同输出到<code>/etc/passwd-ossfs</code>中</p>
<p>示例：</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo your_bucket:your-access-key-id:your-access-key-secret &gt;&gt; &#x2F;etc&#x2F;passwd-ossfs</span><br></pre></td></tr></table></figure>
</blockquote>
<p><code>/etc/passwd-ossfs</code>文件必须是640权限的，不然ossfs会报错<code>credentials file /etc/passwd-ossfs should not have others permissions.</code>所以挂载前还要更改权限。</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod 640 &#x2F;etc&#x2F;passwd-ossfs</span><br></pre></td></tr></table></figure>
</blockquote>
<p>然后进行挂载</p>
<h4 id="1、sudo-u法，这个方法我这边行不通，你不妨尝试一下。"><a href="#1、sudo-u法，这个方法我这边行不通，你不妨尝试一下。" class="headerlink" title="1、sudo -u法，这个方法我这边行不通，你不妨尝试一下。"></a><strong>1、sudo -u法，这个方法我这边行不通，你不妨尝试一下。</strong></h4><blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -u www ossfs your_bucket your_mount_point -ourl&#x3D;your_endpoint -o allow_other</span><br></pre></td></tr></table></figure>
</blockquote>
<h4 id="2、-uid-gid信息法。"><a href="#2、-uid-gid信息法。" class="headerlink" title="2、 uid/gid信息法。"></a><strong>2、 uid/gid信息法。</strong></h4><p>先用<code>id www</code>获取<code>uid/gid</code>。</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id www</span><br></pre></td></tr></table></figure>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-18/批注-2019-06-16-181429.jpg" alt=""></p>
<p>然后用其进行挂载</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ossfs your_bucket your_mountpoint -ourl&#x3D;your_endpoint -ouid&#x3D;your_uid -ogid&#x3D;your_gid -o allow_other</span><br></pre></td></tr></table></figure>
</blockquote>
<p>此时以图中的返回数值为示例，我的<code>your_uid</code>=<code>your_gid</code>=1001</p>
<p>如此挂载之后的目录就为www用户的777权限目录了，亲测wp媒体库可以随意使用，只是加载媒体库页面时有点慢，加载其他页面没有明显的延缓。</p>
<h3 id="四、开机自动挂载"><a href="#四、开机自动挂载" class="headerlink" title="四、开机自动挂载"></a><strong>四、开机自动挂载</strong></h3><ol>
<li><p>将Bucket名称、AccessKeyID、AccessKeySecret等信息写入/etc/passwd-ossfs文件，并将文件权限修改为640。</p>
<p>配置步骤请参见<a href="https://help.aliyun.com/document_detail/153892.html#concept-kkp-lmb-wdb" target="_blank" rel="noopener">快速安装</a>。</p>
</li>
<li><p>设置开机自动挂载。</p>
<p>针对不同的系统版本，设置开机自动挂载ossfs的方式有所不同。</p>
<ul>
<li><p>Ubuntu14.04和CentOS6.5系统版本通过fstab的方式自动挂载</p>
<ol>
<li><p>在/etc/fstab中加入如下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ossfs#bucket_name mount_point fuse _netdev,url&#x3D;url,allow_other 0 0</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存/etc/fstab文件。执行<strong>mount -a</strong>命令，如果没有报错，则说明设置正常。</p>
</li>
<li><p>上一步执行完成后，Ubuntu14.04就能自动挂载了。CentOS6.5还需要执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chkconfig netfs on</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>CentOS7.0及以上的系统通过开机自动启动脚本进行挂载</p>
<ol>
<li><p>在/etc/init.d/目录下建立文件ossfs，将<a href="https://github.com/aliyun/ossfs/blob/master/scripts/automount.template" target="_blank" rel="noopener">模板文件</a>中的内容拷贝到这个新文件中。并将其中的your_xxx内容改成您自己的信息。</p>
</li>
<li><p>为新建立的ossfs脚本赋予可执行权限：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod a+x &#x2F;etc&#x2F;init.d&#x2F;ossfs</span><br></pre></td></tr></table></figure>
<p>命令执行完成后，您可以尝试执行该脚本，如果脚本文件内容无误，那么此时OSS中的Bucket已经挂载到您指定的目录下了。</p>
</li>
<li><p>把ossfs启动脚本作为其他服务，开机自动启动：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chkconfig ossfs on</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行上述步骤后，ossfs就可以开机自动挂载了。</p>
</li>
</ol>
</li>
<li><p>Ubuntu 16.06/Debian 9可以参照另一篇设置自动开机脚本的教程，即在/etc/rc.local中添加挂载命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ossfs your_bucket your_mountpoint -ourl&#x3D;your_endpoint -ouid&#x3D;your_uid -ogid&#x3D;your_gid -o allow_other</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h3 id="五、取消挂载"><a href="#五、取消挂载" class="headerlink" title="五、取消挂载"></a><strong>五、取消挂载</strong></h3><p>帮助文档中提到，若要取消挂载，输入</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fusermount -u your_mountpoint</span><br></pre></td></tr></table></figure>
</blockquote>
<p>即可取消挂载，但我输了命令之后却提示<code>-bash: fusermount: command not found</code>。后来发了个工单才知道这玩意要单独装。</p>
<p>输入</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install fuse</span><br></pre></td></tr></table></figure>
</blockquote>
<p>再进行取消挂载即可。</p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>OSS</tag>
      </tags>
  </entry>
  <entry>
    <title>超音速来流叶栅进口边界条件设置</title>
    <url>/2020/03/04/%E8%B6%85%E9%9F%B3%E9%80%9F%E6%9D%A5%E6%B5%81%E5%8F%B6%E6%A0%85%E8%BF%9B%E5%8F%A3%E8%BE%B9%E7%95%8C%E6%9D%A1%E4%BB%B6%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>在计算平面叶栅工况时，亚音速来流的边界条件通常和整机仿真相同，即进口给定<strong>总温，总压，来流方向和湍流粘度</strong>，出口指定<strong>静压</strong>或者<strong>流量</strong>。然而由于无因次密流函数的非单调性，同一流量对应超音速和亚音速两种工况，所以来流超音的情况下的边界条件设置和亚音速有所不同。<a id="more"></a></p>
<h4 id="实验工况"><a href="#实验工况" class="headerlink" title="实验工况"></a>实验工况</h4><p>Ma’ = 1.416,  TT1’ = 365.48 K, PT1’ = 233745.02 Pa, Bet1 = 59.2°, P2 = 127383.58 Pa</p>
<h4 id="Fine-Turbo设置"><a href="#Fine-Turbo设置" class="headerlink" title="Fine/Turbo设置"></a>Fine/Turbo设置</h4><h5 id="进口条件设置"><a href="#进口条件设置" class="headerlink" title="进口条件设置"></a>进口条件设置</h5><ul>
<li>Cartesian坐标系（针对平面叶栅）</li>
<li>选择超音速进口（虽然NUMECA手册上说明 Note that the velocity component normal to the boundary should be considered to determine whether an inlet (or an outlet) boundary is subsonic or supersonic，即进口法向速度决定超音还是亚音速边界条件，实测这么做得到的结果会有较大偏差）</li>
<li>指定进口静温，静压以及速度矢量（静参数可以由总参数和马赫数计算得到，速度由来流方向，马赫数和静参数得到）</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-04/20200304163019.png" alt=""></p>
<h5 id="出口条件设置"><a href="#出口条件设置" class="headerlink" title="出口条件设置"></a>出口条件设置</h5><p>出口为亚音边界条件，给定平均静压（若给流量似乎会发散，因为进口条件流量已经确定了）</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-04/20200304164542.png" alt=""></p>
<h5 id="两种进口条计算结果件对比"><a href="#两种进口条计算结果件对比" class="headerlink" title="两种进口条计算结果件对比"></a>两种进口条计算结果件对比</h5><p>CFview绘制</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-04/20200304170620.png" alt=""></p>
<p>亚音速进口条件计算结果</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-04/20200304170734.png" alt=""></p>
<p>超音速进口条件计算结果</p>
<h4 id="SU2设置"><a href="#SU2设置" class="headerlink" title="SU2设置"></a>SU2设置</h4><p>官方提供的针对叶轮机的配置模板中采用了Giles边界条件，即进出口边界条件都是亚音速的：</p>
<h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">% Giles boundary condition for inflow, outfolw and mixing-plane</span><br><span class="line">% Format inlet:  ( marker, TOTAL_CONDITIONS_PT, Total Pressure , Total Temperature,</span><br><span class="line">% Flow dir-norm, Flow dir-tang, Flow dir-span, under-relax-avg, under-relax-fourier)</span><br><span class="line">% Format outlet: ( marker, STATIC_PRESSURE, Static Pressure value, -, -, -, -, under-relax-avg, under-relax-fourier)</span><br><span class="line">% Format mixing-plane in and out: ( marker, MIXING_IN or MIXING_OUT, -, -, -, -, -, -, under-relax-avg, under-relax-fourier)</span><br></pre></td></tr></table></figure>
<p>针对超音速来流工况，需要手动设置进出口边界条件，首先注释掉turbomachinery默认设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%MARKER_TURBOMACHINERY&#x3D; (inlet, outlet)</span><br><span class="line">%MARKER_GILES&#x3D; (inlet, TOTAL_CONDITIONS_PT, 233745.02, 365.48, 1.0, 1.677, 0.0,1.0,1.0, outlet, STATIC_PRESSURE, 127383.58, 0.0, 0.0, 0.0, 0.0,1.0,1.0)</span><br></pre></td></tr></table></figure>
<p>分别指定进口和出口条件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">% Supersonic inlet boundary marker(s) (NONE &#x3D; no marker)</span><br><span class="line">% Format: (inlet marker, temperature, static pressure, velocity_x,</span><br><span class="line">%           velocity_y, velocity_z, ... ), i.e. primitive variables specified.</span><br><span class="line">MARKER_SUPERSONIC_INLET &#x3D; (inlet, 261.15, 72083.18, 234.50, 393.60, 0)</span><br><span class="line">% Outlet boundary marker(s) (NONE &#x3D; no marker)</span><br><span class="line">% Compressible: ( outlet marker, back pressure (static thermodynamic), ... )</span><br><span class="line">% Inc. Pressure: ( outlet marker, back pressure (static gauge in Pa), ... )</span><br><span class="line">% Inc. Mass Flow: ( outlet marker, mass flow target (kg&#x2F;s), ... )</span><br><span class="line">MARKER_OUTLET &#x3D; (outlet, 127383.58)</span><br></pre></td></tr></table></figure>
<h5 id="计算结果"><a href="#计算结果" class="headerlink" title="计算结果"></a>计算结果</h5><p>Tecplot绘制</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-04/20200304171747.png" alt=""></p>
<p>亚音速进口条件计算结果</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-03-04/20200304171711.png" alt=""></p>
<p>超音速进口条件计算结果</p>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>su2</tag>
        <tag>numeca</tag>
      </tags>
  </entry>
  <entry>
    <title>Github+jsDelivr+PicGo 打造稳定快速、高效免费图床</title>
    <url>/2020/02/15/Github+jsDelivr+PicGo-%E6%89%93%E9%80%A0%E7%A8%B3%E5%AE%9A%E5%BF%AB%E9%80%9F%E3%80%81%E9%AB%98%E6%95%88%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/ImgHosting.png" alt=""><a id="more"></a></p>
<hr>
<p>本文转自<a href="https://www.itrhx.com/2019/08/01/A27-image-hosting/" target="_blank" rel="noopener">Github+jsDelivr+PicGo 打造稳定快速、高效免费图床</a></p>
<h4 id="–-前言"><a href="#–-前言" class="headerlink" title="– 前言"></a>– 前言</h4><p>图床是个啥东西就不用过多介绍了，先来对比一下各路图床：</p>
<blockquote>
<ul>
<li>微博图床：以前用的人比较多，从2019年4月开始开启了防盗链，凉凉</li>
<li>SM.MS：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧</li>
<li>其他小众图床：随时有挂掉的风险</li>
<li>Imgur等国外图床：国内访问速度太慢，随时有被墙的风险</li>
<li>大厂储存服务：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，容量限制，操作繁琐，又是实名认证又是域名备案的，麻烦，而且还要花钱（有钱又不怕麻烦的当我没说）</li>
</ul>
</blockquote>
<p>因此，GitHub 图床是个不错的选择，利用 jsDelivr CDN 加速访问（jsDelivr 是一个免费开源的 CDN 解决方案），PicGo 工具一键上传，操作简单高效，GitHub 和 jsDelivr 都是大厂，不用担心跑路问题，不用担心速度和容量问题，而且完全免费，可以说是目前免费图床的最佳解决方案！</p>
<hr>
<h4 id="–-新建GitHub仓库"><a href="#–-新建GitHub仓库" class="headerlink" title="– 新建GitHub仓库"></a>– 新建GitHub仓库</h4><p>登录/注册GitHub，新建一个仓库，填写好仓库名，仓库描述，根据需求选择是否为仓库初始化一个README.md描述文件</p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/01.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/01.png" alt="01"></a></p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/02.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/02.png" alt="02"></a></p>
<hr>
<h4 id="–-生成一个Token"><a href="#–-生成一个Token" class="headerlink" title="– 生成一个Token"></a>– 生成一个Token</h4><p>在主页依次选择【Settings】-【Developer settings】-【Personal access tokens】-【Generate new token】，填写好描述，勾选【repo】，然后点击【Generate token】生成一个Token，注意这个Token只会显示一次，自己先保存下来，或者等后面配置好PicGo后再关闭此网页</p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/03.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/03.png" alt="03"></a></p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/04.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/04.png" alt="04"></a></p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/05.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/05.png" alt="05"></a></p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/06.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/06.png" alt="06"></a></p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/07.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/07.png" alt="07"></a></p>
<h4 id="–-配置PicGo"><a href="#–-配置PicGo" class="headerlink" title="– 配置PicGo"></a>– 配置PicGo</h4><p>前往<a href="https://github.com/Molunerfinn/picgo/releases" target="_blank" rel="noopener">下载PicGo</a>，安装好后开始配置图床</p>
<p><a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/08.png" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/08.png" alt="08"></a></p>
<ul>
<li>设定仓库名：按照【用户名/图床仓库名】的格式填写</li>
<li>设定分支名：【master】</li>
<li>设定Token：粘贴之前生成的【Token】</li>
<li>指定存储路径：填写想要储存的路径，如【ITRHX-PIC/】，这样就会在仓库下创建一个名为 ITRHX-PIC 的文件夹，图片将会储存在此文件夹中</li>
<li>设定自定义域名：它的作用是，在图片上传后，PicGo 会按照【自定义域名+储存路径+上传的图片名】的方式生成访问链接，并放到粘贴板上，因为我们要使用 jsDelivr 加速访问，所以可以设置为【<a href="https://cdn.jsdelivr.net/gh/用户名/图床仓库名" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a> 】，上传完毕后，我们就可以通过【<a href="https://cdn.jsdelivr.net/gh/用户名/图床仓库名/图片路径" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/用户名/图床仓库名/图片路径</a> 】加速访问我们的图片了，比如上图的图片链接为：<a href="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/08.png" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A27/08.png</a></li>
</ul>
<p>关于 jsDelivr 具体是如何引用资源的可以参考我的另一篇博客：<a href="https://www.itrhx.com/2019/02/10/A18-free-cdn/" target="_blank" rel="noopener">《免费CDN：jsDelivr+Github》</a></p>
<hr>
<h4 id="–-进行高效创作"><a href="#–-进行高效创作" class="headerlink" title="– 进行高效创作"></a>– 进行高效创作</h4><p>配置好PicGo后，我们就可以进行高效创作了，将图片拖拽到上传区，将会自动上传并复制访问链接，将链接粘贴到博文中就行了，访问速度杠杠的，此外PicGo还有相册功能，可以对已上传的图片进行删除，修改链接等快捷操作，PicGo还可以生成不同格式的链接、支持批量上传、快捷键上传、自定义链接格式、上传前重命名等，更多功能自己去探索吧！</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 18.04/Debian 10开机自启动脚本</title>
    <url>/2020/02/10/Ubuntu-18.04Debian-10%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>ubuntu18.04不再使用initd管理系统，改用<a href="https://www.centos.bz/tag/systemd/" target="_blank" rel="noopener">systemd</a>。</p>
<p>ubuntu-18.04不能像ubuntu14一样通过编辑rc.local来设置开机启动脚本，通过下列简单设置后，可以使rc.local重新发挥作用。<a id="more"></a></p>
<h4 id="建立rc-local-service文件"><a href="#建立rc-local-service文件" class="headerlink" title="建立rc-local.service文件"></a>建立rc-local.service文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vi &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;rc-local.service</span><br></pre></td></tr></table></figure>
<h4 id="复制以下内容"><a href="#复制以下内容" class="headerlink" title="复制以下内容"></a>复制以下内容</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;&#x2F;etc&#x2F;rc.local Compatibility</span><br><span class="line">ConditionPathExists&#x3D;&#x2F;etc&#x2F;rc.local</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;forking</span><br><span class="line">ExecStart&#x3D;&#x2F;etc&#x2F;rc.local start</span><br><span class="line">TimeoutSec&#x3D;0</span><br><span class="line">StandardOutput&#x3D;tty</span><br><span class="line">RemainAfterExit&#x3D;yes</span><br><span class="line">SysVStartPriority&#x3D;99</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>
<h4 id="创建我们自定义的启动脚本（以后自己的脚本在这里面添加即可）"><a href="#创建我们自定义的启动脚本（以后自己的脚本在这里面添加即可）" class="headerlink" title="创建我们自定义的启动脚本（以后自己的脚本在这里面添加即可）"></a>创建我们自定义的启动脚本（以后自己的脚本在这里面添加即可）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vi &#x2F;etc&#x2F;rc.local</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">#</span><br><span class="line"># rc.local</span><br><span class="line">#</span><br><span class="line"># This script is executed at the end of each multiuser runlevel.</span><br><span class="line"># Make sure that the script will &quot;exit 0&quot; on success or any other</span><br><span class="line"># value on error.</span><br><span class="line">#</span><br><span class="line"># In order to enable or disable this script just change the execution</span><br><span class="line"># bits.</span><br><span class="line">#</span><br><span class="line"># By default this script does nothing.</span><br><span class="line">touch &#x2F;home&#x2F;xxx&#x2F;&#96;date +%Y-%m-%d&#96;.log  </span><br><span class="line">echo &quot;&#96;df&#96;&quot; &gt;  &#x2F;home&#x2F;xxx&#x2F;&#96;date +%Y-%m-%d&#96;.log   </span><br><span class="line">echo &quot;看到这行字，说明添加自启动脚本成功。&quot; &gt; &#x2F;usr&#x2F;local&#x2F;test.log</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chmod +x &#x2F;etc&#x2F;rc.local &amp;&amp; sudo systemctl enable rc-local</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Created symlink /etc/systemd/system/multi-user.target.wants/rc-local.service → /etc/systemd/system/rc-local.service.</p>
</blockquote>
<h4 id="启动服务，并检查服务（非必要）"><a href="#启动服务，并检查服务（非必要）" class="headerlink" title="启动服务，并检查服务（非必要）"></a>启动服务，并检查服务（非必要）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl start rc-local.service</span><br><span class="line">$ sudo systemctl status rc-local.service</span><br><span class="line"></span><br><span class="line">● rc-local.service - &#x2F;etc&#x2F;rc.local Compatibility</span><br><span class="line">   Loaded: loaded (&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;rc-local.service; enabled; vendor preset:</span><br><span class="line">  Drop-In: &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;rc-local.service.d</span><br><span class="line">           └─debian.conf</span><br><span class="line">   Active: active (exited) since Fri 2019-01-25 09:31:07 CST; 9s ago</span><br><span class="line">  Process: 17588 ExecStart&#x3D;&#x2F;etc&#x2F;rc.local start (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</span><br><span class="line"></span><br><span class="line">Jan 25 09:31:07 SCHIPS systemd[1]: Starting &#x2F;etc&#x2F;rc.local Compatibility...</span><br><span class="line">Jan 25 09:31:07 SCHIPS systemd[1]: Started &#x2F;etc&#x2F;rc.local Compatibility.</span><br></pre></td></tr></table></figure>
<p>参考：</p>
<p><a href="https://www.jianshu.com/p/79d24b4af4e5" target="_blank" rel="noopener">https://www.jianshu.com/p/79d24b4af4e5</a></p>
<p><a href="https://www.cnblogs.com/defifind/p/9285456.html" target="_blank" rel="noopener">https://www.cnblogs.com/defifind/p/9285456.html</a></p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>参数化方法CST学习笔记</title>
    <url>/2020/01/20/%E5%8F%82%E6%95%B0%E5%8C%96%E6%96%B9%E6%B3%95CST%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p> “Universal Parametric Geometry Representation Method”学习笔记。</p>
<p>​        叶型优化设计过程中，叶型几何参数期望尽可能得少。一种叶型集合的参数化方法CST(Class Shape Transformation)包含了描述集合特征的“类型函数(class function)”和”形状函数(shape function)”，例如头圆尾尖(round-nose/sharp aft-end)的NASA系列翼型，可以通过具有明确可观测物理特征的简单函数准确地解析描述其叶型形状。这种参数化方法可以表示几乎无限的设计空间，这些设计空间完全由解析的光滑几何构成。<a id="more"></a></p>
<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>​        选择在任何特定的空气动力学设计优化过程中使用的飞机或飞机部件几何形状的数学表示形式，以及选择优化算法的类型，都会对以下方面产生影响，诸如计算时间和资源，设计空间的范围和一般性质，以及设计空间中包含的几何形状是光滑还是不规则，甚至是物理上现实的或可接受的。几何表示方法也影响所选优化过程的适用性。例如，使用离散坐标作为设计变量可能不适合用于遗传优化过程，因为生成的设计空间可能会被具有凹凸不平表面的几何图形大量填充，因此实际上不可能找到最佳的光滑表面。几何图形表示方法还会影响设计空间中是否包含有意义的“最佳”，以及是否存在最佳设计。</p>
<p>​    任意理想的几何描述方式需要有以下特点：</p>
<ol>
<li><p>能够良好地产生光滑和真实的形状；</p>
</li>
<li><p>数学效率和快速，准确并一致的稳定数值过程；</p>
</li>
<li><p>需要相对少的变量来表示一个足够大的设计空间，这个设计空间包含了一定设计条件和约束范围内的最佳气动外形；</p>
</li>
<li><p>允许指定设计参数，例如前缘半径，船尾角，叶型是否封闭；</p>
</li>
<li><p>针对设计和编辑曲线简单的控制方法；</p>
</li>
<li><p>具有直观和几何解释的直观几何算法。</p>
</li>
</ol>
<p>​        任何飞机的几何定义都包括通过使用两种基本类型的形状来表示配置的基本定义组件，以及这些形状沿每个组件的分布。 两种基本定义形状包括：</p>
<ul>
<li>类型1（Class 1）：翼型类形状，包括机翼，直升机旋翼，涡轮机械叶片，垂直和水平尾翼等；</li>
<li>类型2（Class 2）：横截面形状，包括机身，转子轮毂和机匣，流道管道和升力体。</li>
</ul>
<p>​        第一种几何类型的数学描述（拥有圆头尖尾）为连续非解析函数，因为鼻部斜率无限大，相应曲率变化也过大。同样的，在传统笛卡尔坐标下，第二种几何类型的数学表示通常也是连续非解析函数。</p>
<h4 id="叶型几何的数学描述"><a href="#叶型几何的数学描述" class="headerlink" title="叶型几何的数学描述"></a>叶型几何的数学描述</h4><p>开发一个高效表现良好的叶型参数化方法通常需要以下步骤：</p>
<ol>
<li>开发一个通用数学公式，该公式需要高效描述圆鼻尖尾叶型几何；</li>
<li>检查此数学表达式的一般性质，以确定作为数字奇异性来源的数学表达式的元素；</li>
<li>重新排列或变换数学表达式的部分，以消除数值奇异之处；</li>
<li>这导致识别和定义“形状函数”转换技术，从而使使用该形状函数的机翼定义成为具有易于控制的关键物理设计特征的简单行为良好的分析函数；</li>
<li>随后，引入“类别函数”以概括适用于各种基本二维机翼，轴对称短舱和机身几何形状的方法。</li>
</ol>
<p>代表机翼形状的一般表达式为：</p>
<script type="math/tex; mode=display">
\zeta(\psi)=\sqrt{\psi}(1-\psi)\sum_{i=0}^{N}A_i\psi^i+\psi\zeta_T</script><p>其中$\psi=x/c,\zeta=z/c,\zeta_T=\Delta Z_{TE}$，$\sqrt{\psi}$项保证前缘为圆形，$(1-\psi)$保证尾缘是尖的，$\psi\zeta_T$控制尾缘厚度，$\sum_{i=0}^{N}A_i\psi^i$表示描述圆鼻和尖尾之间唯一几何形状的一般函数。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200121212152.png" alt=""></p>
<h4 id="翼型形状函数"><a href="#翼型形状函数" class="headerlink" title="翼型形状函数"></a>翼型形状函数</h4><p>定义一个形状函数$S(\psi)$，将翼型形状减去尾缘厚度，并除以圆头尖尾类型函数$\sqrt{\psi}(1-\psi)$，得到：</p>
<script type="math/tex; mode=display">
S(\psi)\equiv\frac{\zeta(\psi)-\psi\zeta_T}{\sqrt{\psi}(1-\psi)}=\sum_{i=0}^{N}A_i\psi^i</script><p>前缘半径，尾缘厚度和船尾角直接确定了$S(\psi)$的唯一边界值。$x/c=0$处的形状函数直接由前缘半径$R_{LE}$和弦长$C$确定：</p>
<script type="math/tex; mode=display">
S(0) = \sqrt{2 [R_{LE}/C]}</script><p>$x/c=1$处的形状函数直接由船尾角$\beta$和尾缘厚度确定：</p>
<script type="math/tex; mode=display">
S(1) = \tan{\beta}+\frac{\Delta Z_{TE}}{c}</script><p>因此在变换坐标系下，通过指定形状函数的端点可以轻松控制前缘半径，船尾角和尾缘厚度。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200121212410.png" alt=""></p>
<h4 id="翼型类型函数"><a href="#翼型类型函数" class="headerlink" title="翼型类型函数"></a>翼型类型函数</h4><p>类型函数的一般表达式如下：</p>
<script type="math/tex; mode=display">
C_{N2}^{N1}(\psi) \stackrel{\Delta}{=} (\psi)^{N1}[1-\psi]^{N2}</script><p>对于前缘为圆形的翼型有$N1=0.5,N2=1.0$。与单位形状函数结合，类型函数的不同种指数组合从数学上定义了一系列一般几何形状的类别：</p>
<ul>
<li>$N1=0.5,N2=1.0$定义了NACA系列圆鼻尖尾叶型；</li>
<li>$N1=0.5,N2＝0.5$定义了定义椭圆机翼或椭圆体旋转体；</li>
<li>$N1=1.0,N2＝1.0$定义双凸翼型或凸形主体。 双凸翼型是给定面积的最小阻力超音速翼型；</li>
<li>$N1=0.75,N2＝0.75$定义Sears–Haack物体的半径分布。 对于给定的体积，Sears–Haack体是最小的阻力超音速体；</li>
<li>$N1=0.75,N2＝0.25$定义低阻力弹丸；</li>
<li>$N1=1.0,N2＝0.001$定义了锥形或楔形叶型；</li>
<li>$N1=0.001,N2＝0.001$定义了长方形，圆形管道或圆形杆。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200121212338.png" alt=""></p>
<p>类别函数用于确定一般几何类别，而形状函数用于确定该类别下的详细几何形状。确定一个叶型形状函数并指定其几何类别等价于确定叶型真实坐标，其坐标可以从形状函数和类别函数中获得：</p>
<script type="math/tex; mode=display">
\zeta(\psi)=C_{N1}^{N2}(\psi) + \psi \zeta_T</script><h4 id="形状函数分解"><a href="#形状函数分解" class="headerlink" title="形状函数分解"></a>形状函数分解</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200121215217.png" alt=""></p>
<p>​        上图展示了单位形状函数$S(\psi)=1$可以分解为两个元叶型函数：具有圆鼻和零船尾角的叶型$S1(\psi)=1-\psi$和前缘半径为零且有有限船尾角的叶型$S2(\psi)=\psi$。任意缩放因子$KR$在途中式子中作为权重系数。通过改变$KR$值变化前缘半径和尾缘夹角的值，于是带来了一系列可变前缘半径，尾缘夹角，最大厚度位置的叶型。单位形状函数还能通过伯恩斯坦多项式（Bernstein polynomial）的方式继续分解。$n$阶伯恩斯坦多项式由$n+1$项构成：</p>
<script type="math/tex; mode=display">
S_{r,n}(x)=K_{r,n}x^r(1-x)^{n-r}</script><p>其中$r=0\sim n$，上式中系数$K_{r,n}$为二项式系数$K_{r,n} \equiv \frac{n!}{r!(n-r)!}$。根据伯恩斯坦多项式的递增阶数表示单位形状函数，可以将单位形状函数系统地分解为可缩放的部分。这是“单位划分”属性的直接结果，该属性表明，在0–1的区间内，组成任意顺序的伯恩斯坦多项式的项的总和等于1。 这意味着每个伯恩斯坦多项式都代表单位形状函数。因此，多项式中的各个项可以缩放以定义多种翼型几何形状。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200121222223.png" alt=""></p>
<p>​        对于选择用来表示单位形状函数的任何伯恩斯坦多项式阶数，只有第一项定义前沿半径，只有最后一项定义船尾角。 其他的项是“形状项”，既不影响前缘半径也不影响后缘船尾角。下图展示了使用各种阶数的Bernstein多项式分解单位形状函数的示例以及相应的组件翼型。基元形状函数的最高点沿着展向方向等距分布，组成翼型的峰的相应位置也沿着翼型的弦等距间隔开，并且由类函数指数和伯恩斯坦多项式的阶数由方程式定义。</p>
<script type="math/tex; mode=display">
(\psi)_{Zmax}=\frac{N1+i}{N1+N2+n} \quad for \quad i=0\sim n</script><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200121222246.png" alt=""></p>
<p>实际上，使用伯恩斯坦多项式表示机翼形状函数的技术定义了一组可缩放的组件机翼几何形状，然后求和以表示各种机翼形状。</p>
<h4 id="使用单元形状函数的伯恩斯坦多项式表示法定义的机翼"><a href="#使用单元形状函数的伯恩斯坦多项式表示法定义的机翼" class="headerlink" title="使用单元形状函数的伯恩斯坦多项式表示法定义的机翼"></a>使用单元形状函数的伯恩斯坦多项式表示法定义的机翼</h4><p>​        可以使用任何选定阶数n的伯恩斯坦多项式来定义弧形机翼的上表面和下表面，以描述一组基元形状函数，这些函数由“待确定”系数按比例缩放。基元形状函数定义为</p>
<script type="math/tex; mode=display">
S_i(\psi)=K_i\psi^i(1-\psi)^{n-i}</script><p>其中$K_i$为二项式系数定义为</p>
<script type="math/tex; mode=display">
K_i \equiv \left( \begin{matrix}  n \\  r \\ \end{matrix} \right) = \frac{n!}{i!(n-i)!}</script><p>令上下表面的尾缘厚度比表示为</p>
<script type="math/tex; mode=display">
\Delta \xi_U = \frac{zu_{TE}}{C} \quad \Delta \xi_L = \frac{zl_{TE}}{C}</script><p>形状函数定义为</p>
<script type="math/tex; mode=display">
C_{N2}^{N1}(\psi) = (\psi)^{N1}(1-\psi)^{N2}</script><p>上表面的总形状函数表达式为</p>
<script type="math/tex; mode=display">
Su(\psi)=\sum_{i=1}^n Au_i S_i(\psi)</script><p>于是得到上表面坐标为</p>
<script type="math/tex; mode=display">
(\zeta)_{upper} = C_{N2}^{N1}(\psi)Su(\psi)+\psi\Delta\xi_{upper}</script><p>同理下表面的形状函数和坐标分别为</p>
<script type="math/tex; mode=display">
Sl(\psi)=\sum_{i=1}^n Al_i S_i(\psi) \\

(\zeta)_{lower} = C_{N2}^{N1}(\psi)Sl(\psi)+\psi\Delta\xi_{lower}</script><p>将叶型坐标点带入上式得到一个$m \times n$的线性超定方程组，系数$Au_i，Al_i$由最小二乘法确定。伯恩斯坦基方法表示叶片形状由以下独特的特性：</p>
<ol>
<li>能够表示设计空间中所有光滑的叶型；</li>
<li>设计空间中的每一个叶型都能从单位形状函数叶型衍生得到；</li>
<li>设计空间中的每一个叶型也都能从其它叶型衍生得到。</li>
</ol>
<h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><p><em>Kulfan B M. Universal parametric geometry representation method[J]. Journal of aircraft, 2008, 45(1): 142-158.</em> </p>
]]></content>
      <categories>
        <category>参数化方法</category>
      </categories>
      <tags>
        <tag>cst</tag>
      </tags>
  </entry>
  <entry>
    <title>利用WebDAV挂载OneDrive</title>
    <url>/2020/01/19/%E5%88%A9%E7%94%A8WebDAV%E6%8C%82%E8%BD%BDOneDrive/</url>
    <content><![CDATA[<p>edu.cn教育网邮箱可以申请到1T容量的Onedrive，然而在使用rclone挂载Onedrive时会出现<code>Using application &#39;rclone&#39; is currently not supported for your organization [YOUR_ORGANIZATION] because it is in an unmanaged state</code>错误。rclone官方另辟蹊径提供了使用webDAV挂载这类Onedrive的方法。<a id="more"></a></p>
<h4 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h4><p><strong>access_denied (AADSTS65005)</strong></p>
 <!-- more -->
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: access_denied</span><br><span class="line">Code: AADSTS65005</span><br><span class="line">Description: Using application &#39;rclone&#39; is currently not supported for your organization [YOUR_ORGANIZATION] because it is in an unmanaged state. An administrator needs to claim ownership of the company by DNS validation of [YOUR_ORGANIZATION] before the application rclone can be provisioned.</span><br></pre></td></tr></table></figure>
<p>This means that rclone can’t use the OneDrive for Business API with your account. You can’t do much about it, maybe write an email to your admins.</p>
<p>However, there are other ways to interact with your OneDrive account. Have a look at the webdav backend:</p>
<h4 id="WebDAV"><a href="#WebDAV" class="headerlink" title="WebDAV"></a>WebDAV</h4><p>Paths are specified as <code>remote:path</code></p>
<p>Paths may be as deep as required, eg <code>remote:directory/subdirectory</code>.</p>
<p>To configure the WebDAV remote you will need to have a URL for it, and a username and password. If you know what kind of system you are connecting to then rclone can enable extra features.</p>
<p>Here is an example of how to make a remote called <code>remote</code>. First run:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure>
<p>This will guide you through an interactive setup process:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No remotes found - make a new one</span><br><span class="line">n) New remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">n&#x2F;s&#x2F;q&gt; n</span><br><span class="line">name&gt; remote</span><br><span class="line">Type of storage to configure.</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line">[snip]</span><br><span class="line">XX &#x2F; Webdav</span><br><span class="line">   \ &quot;webdav&quot;</span><br><span class="line">[snip]</span><br><span class="line">Storage&gt; webdav</span><br><span class="line">URL of http host to connect to</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 &#x2F; Connect to example.com</span><br><span class="line">   \ &quot;https:&#x2F;&#x2F;example.com&quot;</span><br><span class="line">url&gt; https:&#x2F;&#x2F;example.com&#x2F;remote.php&#x2F;webdav&#x2F;</span><br><span class="line">Name of the Webdav site&#x2F;service&#x2F;software you are using</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 &#x2F; Nextcloud</span><br><span class="line">   \ &quot;nextcloud&quot;</span><br><span class="line"> 2 &#x2F; Owncloud</span><br><span class="line">   \ &quot;owncloud&quot;</span><br><span class="line"> 3 &#x2F; Sharepoint</span><br><span class="line">   \ &quot;sharepoint&quot;</span><br><span class="line"> 4 &#x2F; Other site&#x2F;service or software</span><br><span class="line">   \ &quot;other&quot;</span><br><span class="line">vendor&gt; 1</span><br><span class="line">User name</span><br><span class="line">user&gt; user</span><br><span class="line">Password.</span><br><span class="line">y) Yes type in my own password</span><br><span class="line">g) Generate random password</span><br><span class="line">n) No leave this optional password blank</span><br><span class="line">y&#x2F;g&#x2F;n&gt; y</span><br><span class="line">Enter the password:</span><br><span class="line">password:</span><br><span class="line">Confirm the password:</span><br><span class="line">password:</span><br><span class="line">Bearer token instead of user&#x2F;pass (eg a Macaroon)</span><br><span class="line">bearer_token&gt;</span><br><span class="line">Remote config</span><br><span class="line">--------------------</span><br><span class="line">[remote]</span><br><span class="line">type &#x3D; webdav</span><br><span class="line">url &#x3D; https:&#x2F;&#x2F;example.com&#x2F;remote.php&#x2F;webdav&#x2F;</span><br><span class="line">vendor &#x3D; nextcloud</span><br><span class="line">user &#x3D; user</span><br><span class="line">pass &#x3D; *** ENCRYPTED ***</span><br><span class="line">bearer_token &#x3D;</span><br><span class="line">--------------------</span><br><span class="line">y) Yes this is OK</span><br><span class="line">e) Edit this remote</span><br><span class="line">d) Delete this remote</span><br><span class="line">y&#x2F;e&#x2F;d&gt; y</span><br></pre></td></tr></table></figure>
<p>Once configured you can then use <code>rclone</code> like this,</p>
<p>List directories in top level of your WebDAV</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rclone lsd remote:</span><br></pre></td></tr></table></figure>
<p>List all the files in your WebDAV</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rclone ls remote:</span><br></pre></td></tr></table></figure>
<p>To copy a local directory to an WebDAV directory called backup</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rclone copy &#x2F;home&#x2F;source remote:backup</span><br></pre></td></tr></table></figure>
<h4 id="Sharepoint"><a href="#Sharepoint" class="headerlink" title="Sharepoint"></a>Sharepoint</h4><p>Rclone can be used with Sharepoint provided by OneDrive for Business or Office365 Education Accounts. This feature is only needed for a few of these Accounts, mostly Office365 Education ones. These accounts are sometimes not verified by the domain owner <a href="https://github.com/rclone/rclone/issues/1975" target="_blank" rel="noopener">github#1975</a></p>
<p>This means that these accounts can’t be added using the official API (other Accounts should work with the “onedrive” option). However, it is possible to access them using webdav.</p>
<p>To use a sharepoint remote with rclone, add it like this: First, you need to get your remote’s URL:</p>
<ul>
<li>Go <a href="https://onedrive.live.com/about/en-us/signin/" target="_blank" rel="noopener">here</a> to open your OneDrive or to sign in</li>
<li>Now take a look at your address bar, the URL should look like this: <code>https://[YOUR-DOMAIN]-my.sharepoint.com/personal/[YOUR-EMAIL]/_layouts/15/onedrive.aspx</code></li>
</ul>
<p>You’ll only need this URL upto the email address. After that, you’ll most likely want to add “/Documents”. That subdirectory contains the actual data stored on your OneDrive.</p>
<p>Add the remote to rclone like this: Configure the <code>url</code> as <code>https://[YOUR-DOMAIN]-my.sharepoint.com/personal/[YOUR-EMAIL]/Documents</code> and use your normal account email and password for <code>user</code> and <code>pass</code>. If you have 2FA enabled, you have to generate an app password. Set the <code>vendor</code> to <code>sharepoint</code>.</p>
<p>Your config file should look like this:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[sharepoint]</span><br><span class="line">type &#x3D; webdav</span><br><span class="line">url &#x3D; https:&#x2F;&#x2F;[YOUR-DOMAIN]-my.sharepoint.com&#x2F;personal&#x2F;[YOUR-EMAIL]&#x2F;Documents</span><br><span class="line">vendor &#x3D; other</span><br><span class="line">user &#x3D; YourEmailAddress</span><br><span class="line">pass &#x3D; encryptedpassword</span><br></pre></td></tr></table></figure>
<h4 id="Required-Flags-for-SharePoint"><a href="#Required-Flags-for-SharePoint" class="headerlink" title="Required Flags for SharePoint"></a>Required Flags for SharePoint</h4><p>As SharePoint does some special things with uploaded documents, you won’t be able to use the documents size or the documents hash to compare if a file has been changed since the upload / which file is newer.</p>
<p>For Rclone calls copying files (especially Office files such as .docx, .xlsx, etc.) from/to SharePoint (like copy, sync, etc.), you should append these flags to ensure Rclone uses the “Last Modified” datetime property to compare your documents:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--ignore-size --ignore-checksum --update</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>rclone</tag>
        <tag>onedrive</tag>
      </tags>
  </entry>
  <entry>
    <title>MISES计算算例</title>
    <url>/2020/01/15/MISES%E8%AE%A1%E7%AE%97%E7%AE%97%E4%BE%8B/</url>
    <content><![CDATA[<p>MISES为MIT开发的S1流面求解器暨叶栅反设计工具，耦合求解定常欧拉方程（无粘主流区）和积分边界层方程（有粘边界层）具有极快的求解速度，但是亚音速和超音速进口条件运算过程略有区别，本文展示其演示算例叶型在亚音和超音条件下的计算过程。<a id="more"></a></p>
<h4 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h4><h5 id="叶型坐标即流道堵塞状况（AVDR）"><a href="#叶型坐标即流道堵塞状况（AVDR）" class="headerlink" title="叶型坐标即流道堵塞状况（AVDR）"></a>叶型坐标即流道堵塞状况（AVDR）</h5><p><strong>blade.dfvlr</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AGARD DFVLR CASCADE             </span><br><span class="line">   1.45  1.00  1.200  0.800  0.937</span><br><span class="line">   1.002611  1.129786</span><br><span class="line">   0.989484  1.115162</span><br><span class="line">   0.983923  1.108923</span><br><span class="line">   0.972327  1.096782</span><br><span class="line">   0.966521  1.090721</span><br><span class="line">   0.943288  1.066438</span><br><span class="line">   0.920073  1.042113</span><br><span class="line">   0.896911  1.017748</span><br><span class="line">   0.867989  0.987262</span><br><span class="line">   0.850677  0.968962</span><br><span class="line">   0.827623  0.944544</span><br><span class="line">   0.804596  0.920065</span><br><span class="line">   0.781630  0.895515</span><br><span class="line">   0.758724  0.870909</span><br><span class="line">   0.735969  0.846183</span><br><span class="line">   0.713090  0.821625</span><br><span class="line">   0.695992  0.803092</span><br><span class="line">   0.673311  0.778303</span><br><span class="line">   0.650730  0.753417</span><br><span class="line">   0.628169  0.728506</span><br><span class="line">   0.605668  0.703520</span><br><span class="line">   0.583254  0.678514</span><br><span class="line">   0.560822  0.653577</span><br><span class="line">   0.538402  0.628564</span><br><span class="line">   0.516065  0.603506</span><br><span class="line">   0.493702  0.578476</span><br><span class="line">   0.471352  0.553357</span><br><span class="line">   0.449034  0.528221</span><br><span class="line">   0.426805  0.503058</span><br><span class="line">   0.404554  0.477903</span><br><span class="line">   0.382398  0.452694</span><br><span class="line">   0.360255  0.427404</span><br><span class="line">   0.338196  0.402059</span><br><span class="line">   0.316223  0.376657</span><br><span class="line">   0.294254  0.351267</span><br><span class="line">   0.266894  0.319413</span><br><span class="line">   0.245073  0.293883</span><br><span class="line">   0.223326  0.268275</span><br><span class="line">   0.201603  0.242627</span><br><span class="line">   0.180019  0.216813</span><br><span class="line">   0.158512  0.190947</span><br><span class="line">   0.137105  0.165003</span><br><span class="line">   0.115803  0.138986</span><br><span class="line">   0.105143  0.125934</span><br><span class="line">   0.094556  0.112903</span><br><span class="line">   0.078704  0.093301</span><br><span class="line">   0.068166  0.080173</span><br><span class="line">   0.057661  0.067064</span><br><span class="line">   0.047119  0.053929</span><br><span class="line">   0.036667  0.040798</span><br><span class="line">   0.026191  0.027646</span><br><span class="line">   0.020924  0.021025</span><br><span class="line">   0.015724  0.014351</span><br><span class="line">   0.008260  0.004820</span><br><span class="line">   0.006630  0.002680</span><br><span class="line">   0.004900  0.000490</span><br><span class="line">   0.003320 -0.000620</span><br><span class="line">   0.002120 -0.000800</span><br><span class="line">   0.001420 -0.000730</span><br><span class="line">   0.000151 -0.000257</span><br><span class="line">  -0.000640  0.000630</span><br><span class="line">  -0.001000  0.001270</span><br><span class="line">  -0.001270  0.002480</span><br><span class="line">  -0.000800  0.004400</span><br><span class="line">   0.000680  0.006800</span><br><span class="line">   0.002600  0.009814</span><br><span class="line">   0.007007  0.017098</span><br><span class="line">   0.011492  0.024378</span><br><span class="line">   0.015943  0.031666</span><br><span class="line">   0.024893  0.046195</span><br><span class="line">   0.033821  0.060742</span><br><span class="line">   0.042779  0.075238</span><br><span class="line">   0.051770  0.089676</span><br><span class="line">   0.060857  0.104050</span><br><span class="line">   0.069977  0.118380</span><br><span class="line">   0.088386  0.146969</span><br><span class="line">   0.106932  0.175409</span><br><span class="line">   0.125599  0.203729</span><br><span class="line">   0.144410  0.231942</span><br><span class="line">   0.163397  0.259958</span><br><span class="line">   0.182625  0.287771</span><br><span class="line">   0.202008  0.315479</span><br><span class="line">   0.221504  0.343010</span><br><span class="line">   0.241221  0.370389</span><br><span class="line">   0.261072  0.397683</span><br><span class="line">   0.281134  0.424742</span><br><span class="line">   0.301422  0.451638</span><br><span class="line">   0.321876  0.478370</span><br><span class="line">   0.342494  0.504968</span><br><span class="line">   0.363354  0.531322</span><br><span class="line">   0.384416  0.557483</span><br><span class="line">   0.405692  0.583489</span><br><span class="line">   0.427188  0.609317</span><br><span class="line">   0.448854  0.634937</span><br><span class="line">   0.470802  0.660334</span><br><span class="line">   0.492995  0.685542</span><br><span class="line">   0.515356  0.710573</span><br><span class="line">   0.537954  0.735407</span><br><span class="line">   0.560764  0.760027</span><br><span class="line">   0.583857  0.784398</span><br><span class="line">   0.607251  0.808442</span><br><span class="line">   0.630985  0.832247</span><br><span class="line">   0.654983  0.855805</span><br><span class="line">   0.679263  0.879076</span><br><span class="line">   0.703893  0.902008</span><br><span class="line">   0.728862  0.924660</span><br><span class="line">   0.754166  0.947065</span><br><span class="line">   0.779826  0.969131</span><br><span class="line">   0.805773  0.990937</span><br><span class="line">   0.832045  1.012411</span><br><span class="line">   0.858718  1.033605</span><br><span class="line">   0.878950  1.049258</span><br><span class="line">   0.906245  1.069854</span><br><span class="line">   0.933895  1.090150</span><br><span class="line">   0.947895  1.100155</span><br><span class="line">   0.961981  1.110116</span><br><span class="line">   0.976113  1.119964</span><br><span class="line">   0.983245  1.124844</span><br><span class="line">   0.990443  1.129692</span><br><span class="line">   0.997407  1.134390</span><br></pre></td></tr></table></figure>
<p><strong>stream.dfvlr</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.0</span><br><span class="line">-5.0 1.0  1.184</span><br><span class="line">-0.1 1.0  1.184</span><br><span class="line">-0.1 1.0  1.184</span><br><span class="line"> 0.0  1.0  1.1794</span><br><span class="line"> 0.1  1.0  1.1656</span><br><span class="line"> 0.5  1.0  1.092</span><br><span class="line"> 0.9  1.0  1.0184</span><br><span class="line"> 1.0  1.0  1.0046</span><br><span class="line"> 1.1  1.0  1.0</span><br><span class="line"> 1.1  1.0  1.0</span><br><span class="line"> 4.0  1.0  1.0</span><br></pre></td></tr></table></figure>
<h5 id="绘制网格"><a href="#绘制网格" class="headerlink" title="绘制网格"></a>绘制网格</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">iset dfvlr</span></span><br><span class="line">Coordinates read from file  blade.dfvlr</span><br><span class="line"></span><br><span class="line">   Blade 1:   120 points.</span><br><span class="line"></span><br><span class="line">  X,R,B read from file</span><br><span class="line"> stream.dfvlr</span><br><span class="line">  B perturbation mode 1 not defined.  Default will be used.</span><br><span class="line">  B perturbation mode 2 not defined.  Default will be used.</span><br><span class="line"></span><br><span class="line"> File read error: loss.dfvlr</span><br><span class="line"> Zero prescribed pressure loss assumed.</span><br><span class="line"></span><br><span class="line"> Calculating unit vorticity distributions ...</span><br><span class="line"></span><br><span class="line"> File read error: gridpar.dfvlr</span><br><span class="line"> Default grid parameters used.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> Generating panel solution ...</span><br><span class="line"></span><br><span class="line"> Sinl =  1.450    Sout =  0.984    Cy =  0.2726    Cx = -0.3448</span><br><span class="line"></span><br><span class="line"> Setting wake for blade  1</span><br><span class="line"> Setting inlet streamline for blade  1</span><br><span class="line"> Going down...  0.000000000000000E+000  0.000000000000000E+000</span><br><span class="line"> Going down...   1.00000000000000       0.000000000000000E+000</span><br><span class="line"> Going up  ...  0.000000000000000E+000  0.000000000000000E+000</span><br><span class="line"> Going up  ...  0.994805464330278       0.000000000000000E+000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1  Specify new inlet slope and block off grid</span><br><span class="line">  2  Generate spacings and initialize grid</span><br><span class="line">  3  Elliptic grid smoother</span><br><span class="line">  4  Write  idat.dfvlr</span><br><span class="line">  5  Plot grid</span><br><span class="line">  6  Plot Cp vs x/c</span><br><span class="line">  7  Modify grid parameters</span><br><span class="line">  8  Write  grid parameters to  gridpar.dfvlr</span><br><span class="line">  9  Change plot size</span><br><span class="line"> 10  Read geometry from blade.dfvlr file</span><br><span class="line"> 11  Read geometry from bparm.dfvlr file</span><br><span class="line"></span><br><span class="line"> Select grid generation option (0 to exit): 1</span><br><span class="line"> </span><br><span class="line"> Enter new inlet slope (or -999 to use LE Kutta):    1.450</span><br><span class="line"></span><br><span class="line">  Generating panel solution ...</span><br><span class="line"></span><br><span class="line"> Sinl =  1.450    Sout =  0.984    Cy =  0.2726    Cx = -0.3448</span><br><span class="line"></span><br><span class="line"> Setting wake for blade  1</span><br><span class="line"> Setting inlet streamline for blade  1</span><br><span class="line"> Going down...  0.000000000000000E+000  0.000000000000000E+000</span><br><span class="line"> Going down...   1.00000000000000       0.000000000000000E+000</span><br><span class="line"> Going up  ...  0.000000000000000E+000  0.000000000000000E+000</span><br><span class="line"> Going up  ...  0.994805464330278       0.000000000000000E+000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1  Specify new inlet slope and block off grid</span><br><span class="line">  2  Generate spacings and initialize grid</span><br><span class="line">  3  Elliptic grid smoother</span><br><span class="line">  4  Write  idat.dfvlr</span><br><span class="line">  5  Plot grid</span><br><span class="line">  6  Plot Cp vs x/c</span><br><span class="line">  7  Modify grid parameters</span><br><span class="line">  8  Write  grid parameters to  gridpar.dfvlr</span><br><span class="line">  9  Change plot size</span><br><span class="line"> 10  Read geometry from blade.dfvlr file</span><br><span class="line"> 11  Read geometry from bparm.dfvlr file</span><br><span class="line"></span><br><span class="line"> Select grid generation option (0 to exit): 2 #初始化网格</span><br><span class="line"> </span><br><span class="line"> Number of grid nodes  Upper,Lower =   86   74</span><br><span class="line"></span><br><span class="line"> Prescribed grid node spacing parameters ...</span><br><span class="line">     dsLE/dsAvg =  0.200   dsTE/dsAvg =  0.900   curvature exponent =   1.0000</span><br><span class="line"></span><br><span class="line"> Actual resulting surface spacings ...</span><br><span class="line">  U: dsLE/dsAvg =  0.200   dsTE/dsAvg =  0.577  | ds/dsAvg  min max:  0.200  0.987</span><br><span class="line">  L: dsLE/dsAvg =  0.200   dsTE/dsAvg =  0.625  | ds/dsAvg  min max:  0.200  1.156</span><br><span class="line"> __________________________________________</span><br><span class="line"></span><br><span class="line">  D sLE/dsAvg, dsTE/dsAvg  spacing ratios</span><br><span class="line">  C urvature exponent</span><br><span class="line">  U pper side spacing refinement</span><br><span class="line">  L ower side spacing refinement           |   B lowup plot</span><br><span class="line">  N umber of points                        |   R eset plot</span><br><span class="line"></span><br><span class="line"> Change what? (&lt;Return&gt; if spacing OK): d #修改sLE/dsAvg, dsTE/dsAvg</span><br><span class="line">  Enter new  dsLE/dsAvg, dsTE/dsAvg    0.2000   0.9000</span><br><span class="line">0.1 0.9  #改为0.1 0.9</span><br><span class="line"></span><br><span class="line"> Number of grid nodes  Upper,Lower =   90   70</span><br><span class="line"></span><br><span class="line"> Prescribed grid node spacing parameters ...</span><br><span class="line">     dsLE/dsAvg =  0.100   dsTE/dsAvg =  0.900   curvature exponent =   1.0000</span><br><span class="line"></span><br><span class="line"> Actual resulting surface spacings ...</span><br><span class="line">  U: dsLE/dsAvg =  0.100   dsTE/dsAvg =  0.559  | ds/dsAvg  min max:  0.100  0.991</span><br><span class="line">  L: dsLE/dsAvg =  0.100   dsTE/dsAvg =  0.650  | ds/dsAvg  min max:  0.100  1.320</span><br><span class="line"> __________________________________________</span><br><span class="line"></span><br><span class="line">  D sLE/dsAvg, dsTE/dsAvg  spacing ratios</span><br><span class="line">  C urvature exponent</span><br><span class="line">  U pper side spacing refinement</span><br><span class="line">  L ower side spacing refinement           |   B lowup plot</span><br><span class="line">  N umber of points                        |   R eset plot</span><br><span class="line"></span><br><span class="line"> Change what? (&lt;Return&gt; if spacing OK):n #修改表面平均点数</span><br><span class="line">  Enter average number of points   80</span><br><span class="line">80 #改为80</span><br><span class="line"></span><br><span class="line"> Number of grid nodes  Upper,Lower =   90   70</span><br><span class="line"></span><br><span class="line"> Prescribed grid node spacing parameters ...</span><br><span class="line">     dsLE/dsAvg =  0.100   dsTE/dsAvg =  0.900   curvature exponent =   1.0000</span><br><span class="line"></span><br><span class="line"> Actual resulting surface spacings ...</span><br><span class="line">  U: dsLE/dsAvg =  0.100   dsTE/dsAvg =  0.559  | ds/dsAvg  min max:  0.100  0.991</span><br><span class="line">  L: dsLE/dsAvg =  0.100   dsTE/dsAvg =  0.650  | ds/dsAvg  min max:  0.100  1.320</span><br><span class="line"> __________________________________________</span><br><span class="line"></span><br><span class="line">  D sLE/dsAvg, dsTE/dsAvg  spacing ratios</span><br><span class="line">  C urvature exponent</span><br><span class="line">  U pper side spacing refinement</span><br><span class="line">  L ower side spacing refinement           |   B lowup plot</span><br><span class="line">  N umber of points                        |   R eset plot</span><br><span class="line"></span><br><span class="line"> Change what? (&lt;Return&gt; if spacing OK): #回车</span><br><span class="line"> </span><br><span class="line"> Number of streamlines :  20  ( max:  32 )</span><br><span class="line"> Number of normal lines: 309  ( max: 400 )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1  Specify new inlet slope and block off grid</span><br><span class="line">  2  Generate spacings and initialize grid</span><br><span class="line">  3  Elliptic grid smoother</span><br><span class="line">  4  Write  idat.dfvlr</span><br><span class="line">  5  Plot grid</span><br><span class="line">  6  Plot Cp vs x/c</span><br><span class="line">  7  Modify grid parameters</span><br><span class="line">  8  Write  grid parameters to  gridpar.dfvlr</span><br><span class="line">  9  Change plot size</span><br><span class="line"> 10  Read geometry from blade.dfvlr file</span><br><span class="line"> 11  Read geometry from bparm.dfvlr file</span><br><span class="line"></span><br><span class="line"> Select grid generation option (0 to exit):3 #椭圆网格光顺</span><br><span class="line">  Smoothing grid ...</span><br><span class="line"> Dmax =   1.084800437295646E-002   1.30000000000000</span><br><span class="line"> Dmax =   4.530929838363651E-003   1.50000000000000</span><br><span class="line"> Dmax =   3.115510187641879E-003   1.60000000000000</span><br><span class="line"> Dmax =   2.155087071891026E-003   1.60000000000000</span><br><span class="line"> Dmax =   1.558689457053808E-003   1.60000000000000</span><br><span class="line"> Dmax =   1.129365435543818E-003   1.60000000000000</span><br><span class="line"> Dmax =   8.035709265969261E-004   1.60000000000000</span><br><span class="line"> Dmax =   5.458239363413675E-004   1.60000000000000</span><br><span class="line"> Dmax =   3.522518262011925E-004   1.60000000000000</span><br><span class="line"> Dmax =   2.262700318116133E-004   1.60000000000000</span><br><span class="line"> Dmax =   1.368458127738770E-004   1.60000000000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  1  Specify new inlet slope and block off grid</span><br><span class="line">  2  Generate spacings and initialize grid</span><br><span class="line">  3  Elliptic grid smoother</span><br><span class="line">  4  Write  idat.dfvlr</span><br><span class="line">  5  Plot grid</span><br><span class="line">  6  Plot Cp vs x/c</span><br><span class="line">  7  Modify grid parameters</span><br><span class="line">  8  Write  grid parameters to  gridpar.dfvlr</span><br><span class="line">  9  Change plot size</span><br><span class="line"> 10  Read geometry from blade.dfvlr file</span><br><span class="line"> 11  Read geometry from bparm.dfvlr file</span><br><span class="line"></span><br><span class="line"> Select grid generation option (0 to exit):4 #保存网格文件</span><br><span class="line">  1  Specify new inlet slope and block off grid</span><br><span class="line">  2  Generate spacings and initialize grid</span><br><span class="line">  3  Elliptic grid smoother</span><br><span class="line">  4  Write  idat.dfvlr</span><br><span class="line">  5  Plot grid</span><br><span class="line">  6  Plot Cp vs x/c</span><br><span class="line">  7  Modify grid parameters</span><br><span class="line">  8  Write  grid parameters to  gridpar.dfvlr</span><br><span class="line">  9  Change plot size</span><br><span class="line"> 10  Read geometry from blade.dfvlr file</span><br><span class="line"> 11  Read geometry from bparm.dfvlr file</span><br><span class="line"></span><br><span class="line"> Select grid generation option (0 to exit):5 #绘制网格</span><br><span class="line"> </span><br><span class="line">   1  Plot grid</span><br><span class="line">   2  Plot grid outline</span><br><span class="line">   3  Blowup</span><br><span class="line">   4  Reset plot scaling</span><br><span class="line">   5  Hardcopy current plot</span><br><span class="line">   6  Change plot size</span><br><span class="line">   7  Change number of passages plotted</span><br><span class="line"></span><br><span class="line"> Select plot option (or &lt;return&gt;):5 #输出网格图片</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200115143921.png" alt=""></p>
<h4 id="亚声速算例"><a href="#亚声速算例" class="headerlink" title="亚声速算例"></a>亚声速算例</h4><blockquote>
<p>工况：M1 - 0.92, tan(B1) - 1.63, Re - 1.436E6</p>
</blockquote>
<h5 id="计算配置"><a href="#计算配置" class="headerlink" title="计算配置"></a>计算配置</h5><p><strong>ises.dfvlr</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2 5                                     </span><br><span class="line">1 4 3        </span><br><span class="line">0.92  0.     1.63  -0.2            | M1  P1&#x2F;Po1  S1  X1  </span><br><span class="line">0.    0.  0.     1.1               | M2  P2&#x2F;Po1  S2  X2  </span><br><span class="line">0.   0.                            | MFRIN</span><br><span class="line">1.436E6  6.0                       | RE    NCRIT</span><br><span class="line">1.0 1.0                            | XTRS  XTRP</span><br><span class="line">4   0.85   -1.4                    | ISMOM  MCRIT  MUCON</span><br><span class="line">0.   0.</span><br></pre></td></tr></table></figure>
<h5 id="计算步骤"><a href="#计算步骤" class="headerlink" title="计算步骤"></a>计算步骤</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> ISREAD: Too few MOVNin values. Assuming zeros.</span><br><span class="line"></span><br><span class="line"> No Wall temperature specified, adiabatic wall used</span><br><span class="line"></span><br><span class="line"> Fturb =   0.24547   Ncrit =   6.00000</span><br><span class="line"></span><br><span class="line"> MISES v2.58</span><br><span class="line"></span><br><span class="line"> Current iteration:   0</span><br><span class="line"> </span><br><span class="line"> Boundary Layer coupling included</span><br><span class="line"> Entropy conserved (S-momentum at shocks)</span><br><span class="line"> 1st-order upwinding will be used</span><br><span class="line"></span><br><span class="line"> Flowfield initialized with  M1     =  0.9200   M2     =  0.6380</span><br><span class="line">                             p1/po1 =  0.5785   p2/po1 =  0.7604</span><br><span class="line">   ... using input MINLin</span><br><span class="line"> Fixed mass flow based on MINLin =  0.92000     SINLin =  1.63000</span><br><span class="line"> </span><br><span class="line"> Active global variables ...</span><br><span class="line">  1  DSINL  inlet flow slope</span><br><span class="line">  2  DSLEX  grid exit flow slope</span><br><span class="line">  5  DSBLE  LE stagnation point for blade   1</span><br><span class="line"></span><br><span class="line"> Number of global variables  :  3</span><br><span class="line"> </span><br><span class="line"> Active global constraints ...</span><br><span class="line">  1  Drive inlet slope  S1 from   1.45000      to   1.63000    </span><br><span class="line">  4  Set  TE Kutta condition  for blade   1</span><br><span class="line">  3  Set  LE Kutta condition  for blade   1</span><br><span class="line"></span><br><span class="line"> Number of global constraints:  3</span><br><span class="line">  </span><br><span class="line"> Enter number of iterations 100  #输入迭代步数</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.111618</span><br><span class="line"></span><br><span class="line">    1 S rms(dR): 0.873E-01  Max(dR): -.179E+01  at  145   1</span><br><span class="line">        rms(dN): 0.767E-01  Max(dN): -.191E+00  at    1  20</span><br><span class="line">        Blade  :    1        LE ds : 0.416E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.306E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.091769</span><br><span class="line"></span><br><span class="line">    2   rms(dR): 0.853E-01  Max(dR): -.218E+01  at  146   1</span><br><span class="line">        rms(dN): 0.652E-01  Max(dN): -.164E+00  at    1  20</span><br><span class="line">        Blade  :    1        LE ds : 0.485E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.146E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Initializing BL ...</span><br><span class="line"> MRCHBL: Inverse mode at 146   HB =   5.1458   lam </span><br><span class="line"> MRCHBL: Inverse mode at 147   HB =   6.7756   lam </span><br><span class="line"> MRCHBL: Inverse mode at 148   HB =   8.0000   tran</span><br><span class="line"> MRCHBL: Inverse mode at 149   HB =   2.5000   tran</span><br><span class="line"> MRCHBL: Inverse mode at 150   HB =   2.5000   turb</span><br><span class="line"> MRCHBL: Inverse mode at 230   HB =   2.5000   turb</span><br><span class="line"> MRCHBL: Inverse mode at 231   HB =   2.5000   turb</span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0054 (0.0066)  149</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2152 (0.2162)  211</span><br><span class="line"> MRCHBL: Inverse mode at 258   HB =   2.1638   wake</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.196730</span><br><span class="line"> RLXN: 0.477624</span><br><span class="line"> RLXV: 0.033728    C clamped at I = 211, side   2</span><br><span class="line"></span><br><span class="line">    3   rms(dR): 0.723E-01  Max(dR): -.102E+01  at  147   2</span><br><span class="line">        rms(dN): 0.681E-01  Max(dN): 0.151E+00  at  308   3</span><br><span class="line">        rms(dV): 0.883E+00  Max(dC): -.178E+02  at  211   2</span><br><span class="line">        Blade  :    1        LE ds : 0.301E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.127E+00</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0055 (0.0068)  149</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2036 (0.2046)  210</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.228418</span><br><span class="line"> RLXN: 0.502799</span><br><span class="line"> RLXV: 0.037359    C clamped at I = 210, side   2</span><br><span class="line"></span><br><span class="line">    4   rms(dR): 0.693E-01  Max(dR): -.876E+00  at  147   2</span><br><span class="line">        rms(dN): 0.641E-01  Max(dN): -.137E+00  at    1  20</span><br><span class="line">        rms(dV): 0.779E+00  Max(dC): -.161E+02  at  210   2</span><br><span class="line">        Blade  :    1        LE ds : 0.298E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.115E+00</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0058 (0.0071)  149</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.1934 (0.1944)  210</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.277817</span><br><span class="line"> RLXN: 0.547489</span><br><span class="line"> RLXV: 0.094897    C clamped at I = 210, side   2</span><br><span class="line"></span><br><span class="line">    5   rms(dR): 0.658E-01  Max(dR): -.720E+00  at  147   2</span><br><span class="line">        rms(dN): 0.594E-01  Max(dN): -.131E+00  at    1  20</span><br><span class="line">        rms(dV): 0.602E+00  Max(dC): -.632E+01  at  210   2</span><br><span class="line">        Blade  :    1        LE ds : 0.291E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.993E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0062 (0.0074)  149</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.1973 (0.1983)  210</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.289049</span><br><span class="line"> RLXN: 0.728782</span><br><span class="line"> RLXV: 0.297542    H clamped at I = 210, side   2</span><br><span class="line"></span><br><span class="line">    6   rms(dR): 0.586E-01  Max(dR): -.692E+00  at  148   3</span><br><span class="line">        rms(dN): 0.495E-01  Max(dN): -.117E+00  at    1  20</span><br><span class="line">        rms(dV): 0.279E+00  Max(dH): -.356E+02  at  210   2</span><br><span class="line">        Blade  :    1        LE ds : 0.279E-03</span><br><span class="line">        dSinl  : -.139E-16  dSLex  : 0.654E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0068 (0.0081)  149</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2077 (0.2087)  210</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.239236</span><br><span class="line"> RLXV: 0.139863    C clamped at I = 149, side   1</span><br><span class="line"></span><br><span class="line">    7   rms(dR): 0.479E-01  Max(dR): -.836E+00  at  150   4</span><br><span class="line">        rms(dN): 0.307E-01  Max(dN): -.788E-01  at    1  20</span><br><span class="line">        rms(dV): 0.410E+00  Max(dC): -.429E+01  at  149   1</span><br><span class="line">        Blade  :    1        LE ds : 0.248E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.190E-02</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0095 (0.0107)  150</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2079 (0.2089)  210</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.319475</span><br><span class="line"> RLXV: 0.223840    D clamped at I = 153, side   1</span><br><span class="line"></span><br><span class="line">    8   rms(dR): 0.394E-01  Max(dR): -.626E+00  at  151   5</span><br><span class="line">        rms(dN): 0.263E-01  Max(dN): -.662E-01  at    1  20</span><br><span class="line">        rms(dV): 0.335E+00  Max(dD): -.268E+01  at  153   1</span><br><span class="line">        Blade  :    1        LE ds : 0.221E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.221E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0099 (0.0112)  150</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2085 (0.2095)  210</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.383319</span><br><span class="line"> RLXV: 0.549152    D clamped at I = 155, side   1</span><br><span class="line"></span><br><span class="line">    9   rms(dR): 0.311E-01  Max(dR): -.522E+00  at  153   5</span><br><span class="line">        rms(dN): 0.196E-01  Max(dN): -.495E-01  at    1  20</span><br><span class="line">        rms(dV): 0.161E+00  Max(dD): -.109E+01  at  155   1</span><br><span class="line">        Blade  :    1        LE ds : 0.183E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.174E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0053 (0.0066)  149</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2100 (0.2110)  211</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.564567</span><br><span class="line"> RLXV: 0.527824    H clamped at I = 210, side   2</span><br><span class="line"></span><br><span class="line">   10   rms(dR): 0.199E-01  Max(dR): -.354E+00  at  154   7</span><br><span class="line">        rms(dN): 0.110E-01  Max(dN): -.289E-01  at    1  20</span><br><span class="line">        rms(dV): 0.107E+00  Max(dH): -.477E+01  at  210   2</span><br><span class="line">        Blade  :    1        LE ds : 0.127E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.215E-02</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0042 (0.0055)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.3469 (0.3477)  219</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.958940</span><br><span class="line"> RLXV: 0.355495    H clamped at I = 220, side   2</span><br><span class="line"></span><br><span class="line">   11   rms(dR): 0.116E-01  Max(dR): -.209E+00  at  155   8</span><br><span class="line">        rms(dN): 0.486E-02  Max(dN): -.130E-01  at    1  20</span><br><span class="line">        rms(dV): 0.106E+00  Max(dH): -.260E+01  at  220   2</span><br><span class="line">        Blade  :    1        LE ds : 0.709E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.384E-03</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0040 (0.0053)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.3006 (0.3015)  216</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.081753    H clamped at I = 217, side   2</span><br><span class="line"></span><br><span class="line">   12   rms(dR): 0.870E-02  Max(dR): -.128E+00  at  156   8</span><br><span class="line">        rms(dN): 0.310E-02  Max(dN): -.824E-02  at    1  20</span><br><span class="line">        rms(dV): 0.581E+00  Max(dH): -.633E+01  at  217   2</span><br><span class="line">        Blade  :    1        LE ds : 0.482E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.793E-04</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0040 (0.0053)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2212 (0.2222)  211</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.115072    C clamped at I = 211, side   2</span><br><span class="line"></span><br><span class="line">   13   rms(dR): 0.772E-02  Max(dR): -.120E+00  at  156   8</span><br><span class="line">        rms(dN): 0.283E-02  Max(dN): -.755E-02  at    1  20</span><br><span class="line">        rms(dV): 0.554E+00  Max(dC): 0.148E+02  at  211   2</span><br><span class="line">        Blade  :    1        LE ds : 0.447E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.263E-03</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0040 (0.0052)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2117 (0.2127)  211</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.295705    H clamped at I = 211, side   2</span><br><span class="line"></span><br><span class="line">   14   rms(dR): 0.689E-02  Max(dR): -.104E+00  at  156   8</span><br><span class="line">        rms(dN): 0.249E-02  Max(dN): -.666E-02  at    1  20</span><br><span class="line">        rms(dV): 0.136E+00  Max(dH): -.264E+01  at  211   2</span><br><span class="line">        Blade  :    1        LE ds : 0.400E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.234E-03</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0039 (0.0052)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.1911 (0.1921)  209</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.318331    C clamped at I = 209, side   2</span><br><span class="line"></span><br><span class="line">   15   rms(dR): 0.511E-02  Max(dR): -.717E-01  at  158   6</span><br><span class="line">        rms(dN): 0.173E-02  Max(dN): -.466E-02  at    1  20</span><br><span class="line">        rms(dV): 0.202E+00  Max(dC): 0.534E+01  at  209   2</span><br><span class="line">        Blade  :    1        LE ds : 0.290E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.245E-03</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0038 (0.0051)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0144 (0.0157)  196</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.808090    C clamped at I = 196, side   2</span><br><span class="line"></span><br><span class="line">   16   rms(dR): 0.370E-02  Max(dR): -.509E-01  at  158   7</span><br><span class="line">        rms(dN): 0.119E-02  Max(dN): -.316E-02  at    1  20</span><br><span class="line">        rms(dV): 0.891E-01  Max(dC): 0.210E+01  at  196   2</span><br><span class="line">        Blade  :    1        LE ds : 0.203E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.575E-03</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0037 (0.0050)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0124 (0.0136)  195</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   17   rms(dR): 0.103E-02  Max(dR): -.182E-01  at  160   6</span><br><span class="line">        rms(dN): 0.220E-03  Max(dN): -.588E-03  at    1  20</span><br><span class="line">        rms(dV): 0.147E-01  Max(dH): -.624E-01  at  199   2</span><br><span class="line">        Blade  :    1        LE ds : 0.454E-05</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.169E-03</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0037 (0.0050)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0121 (0.0134)  195</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   18   rms(dR): 0.642E-04  Max(dR): -.132E-02  at  161   6</span><br><span class="line">        rms(dN): 0.131E-05  Max(dN): -.809E-05  at  211  20</span><br><span class="line">        rms(dV): 0.876E-03  Max(dC): 0.187E-01  at  195   2</span><br><span class="line">        Blade  :    1        LE ds : 0.719E-07</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.253E-05</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0037 (0.0050)  148</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0121 (0.0134)  195</span><br><span class="line"> </span><br><span class="line"> Subsonic inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   19   rms(dR): 0.318E-06  Max(dR): -.647E-05  at  145   1</span><br><span class="line">        rms(dN): 0.116E-07  Max(dN): 0.391E-07  at  245   1</span><br><span class="line">        rms(dV): 0.142E-04  Max(dH): -.230E-03  at  196   2</span><br><span class="line">        Blade  :    1        LE ds : -.106E-07</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.142E-07</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.000E+00</span><br><span class="line"> </span><br><span class="line"> Converged on tolerance</span><br><span class="line">  </span><br><span class="line"> Enter number of iterations</span><br><span class="line">0</span><br></pre></td></tr></table></figure>
<h4 id="超声速算例"><a href="#超声速算例" class="headerlink" title="超声速算例"></a>超声速算例</h4><blockquote>
<p>工况：M1 - 1.150, tan(B1) - 1.63, Re - 0.956E6</p>
</blockquote>
<h5 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h5><p>给定进口马赫数和(15)和出口被压(18)，若一开始给定M1和SINLin会导致直接发散，同时Re修改为0，无粘条件计算初场。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 1 2 5 6 15 ! 11 12                                       </span><br><span class="line">15 4 3 6 18 ! 11 12        </span><br><span class="line">1.150  0.     1.63  -0.2            | M1  P1&#x2F;Po1  S1  X1  </span><br><span class="line">0.     0.760  0.     1.1            | M2  P2&#x2F;Po1  S2  X2  </span><br><span class="line">  0.0 0.                              | MFRIN</span><br><span class="line">0.0  6.0                        | RE    NCRIT</span><br><span class="line">1.0 1.0                         | XTRS  XTRP</span><br><span class="line">1   0.85   -1.4                     | ISMOM  MCRIT  MUCON</span><br><span class="line"> 0.   0.                            | BVR1IN  BVR2IN</span><br></pre></td></tr></table></figure>
<p>先在无粘条件下迭代5步</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> ISREAD: Too few MOVNin values. Assuming zeros.</span><br><span class="line"></span><br><span class="line"> No Wall temperature specified, adiabatic wall used</span><br><span class="line"></span><br><span class="line"> Fturb =   0.24547   Ncrit =   6.00000</span><br><span class="line"></span><br><span class="line"> MISES v2.58</span><br><span class="line"></span><br><span class="line"> Current iteration:   0</span><br><span class="line"> </span><br><span class="line"> Momentum conserved</span><br><span class="line"> 1st-order upwinding will be used</span><br><span class="line"></span><br><span class="line"> Flowfield initialized with  M1     =  1.1500   M2     =  0.6386</span><br><span class="line">                             p1/po1 =  0.4398   p2/po1 =  0.7600</span><br><span class="line">   ... using inlet  condition</span><br><span class="line">   ... using outlet condition</span><br><span class="line"> </span><br><span class="line"> Active global variables ...</span><br><span class="line">  1  DSINL  inlet flow slope</span><br><span class="line">  2  DSLEX  grid exit flow slope</span><br><span class="line">  5  DSBLE  LE stagnation point for blade   1</span><br><span class="line">  6  DPREX  grid exit static pressure</span><br><span class="line"> 15  DMINL  inlet Mach number</span><br><span class="line"></span><br><span class="line"> Number of global variables  :  5</span><br><span class="line"> </span><br><span class="line"> Active global constraints ...</span><br><span class="line"> 15  Drive inlet  Mach1 from   1.15000      to   1.15000    </span><br><span class="line">  4  Set  TE Kutta condition  for blade   1</span><br><span class="line">  3  Set  LE Kutta condition  for blade   1</span><br><span class="line">  6  Drive inlet P0a to PSTr0 (= 1/gamma)</span><br><span class="line"> 18  Drive P2/Po1 from  0.760000      to  0.760000    </span><br><span class="line"></span><br><span class="line"> Number of global constraints:  5</span><br><span class="line">  </span><br><span class="line"> Enter number of iterations 5  #先迭代5步</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.009034</span><br><span class="line"></span><br><span class="line">    1 S rms(dR): 0.161E+01  Max(dR): -.221E+02  at  193  19</span><br><span class="line">        rms(dN): 0.118E+00  Max(dN): 0.288E+00  at    1  20</span><br><span class="line">        Blade  :    1        LE ds : -.713E-03</span><br><span class="line">        dSinl  : -.271E+00  dSLex  : -.396E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.127E+00</span><br><span class="line">        dPex/Po: -.226E-01  Pex/Po :    0.7784</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.009381</span><br><span class="line"></span><br><span class="line">    2   rms(dR): 0.157E+01  Max(dR): 0.213E+02  at  196   1</span><br><span class="line">        rms(dN): 0.520E-01  Max(dN): -.152E+00  at  199   9</span><br><span class="line">        Blade  :    1        LE ds : -.396E-03</span><br><span class="line">        dSinl  : 0.122E+00  dSLex  : -.439E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.570E-01</span><br><span class="line">        dPex/Po: -.196E-01  Pex/Po :    0.7782</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.006020</span><br><span class="line"></span><br><span class="line">    3   rms(dR): 0.156E+01  Max(dR): -.332E+02  at  194  18</span><br><span class="line">        rms(dN): 0.398E-01  Max(dN): 0.127E+00  at  197   9</span><br><span class="line">        Blade  :    1        LE ds : -.290E-03</span><br><span class="line">        dSinl  : 0.102E+00  dSLex  : -.434E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.478E-01</span><br><span class="line">        dPex/Po: -.212E-01  Pex/Po :    0.7780</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.001209</span><br><span class="line"></span><br><span class="line">    4   rms(dR): 0.883E+01  Max(dR): -.165E+03  at  196  19</span><br><span class="line">        rms(dN): 0.700E-01  Max(dN): 0.706E+00  at  198   8</span><br><span class="line">        Blade  :    1        LE ds : -.287E-03</span><br><span class="line">        dSinl  : 0.105E+00  dSLex  : -.362E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.492E-01</span><br><span class="line">        dPex/Po: -.239E-01  Pex/Po :    0.7780</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.000285</span><br><span class="line"></span><br><span class="line">    5   rms(dR): 0.356E+02  Max(dR): 0.703E+03  at  196   1</span><br><span class="line">        rms(dN): 0.312E+00  Max(dN): -.326E+01  at  198   9</span><br><span class="line">        Blade  :    1        LE ds : -.373E-03</span><br><span class="line">        dSinl  : 0.132E+00  dSLex  : -.650E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.617E-01</span><br><span class="line">        dPex/Po: -.333E-03  Pex/Po :    0.7780</span><br><span class="line">  </span><br><span class="line"> Enter number of iterations</span><br><span class="line">0	#退出</span><br></pre></td></tr></table></figure>
<h5 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h5><p>第二行修改给定背压(18)为给定来流方向(1)，即</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 1 2 5 6 15 ! 11 12                                       </span><br><span class="line">15 4 3 6 1 ! 11 12</span><br><span class="line">1.150  0.     1.63  -0.2            | M1  P1&#x2F;Po1  S1  X1  </span><br><span class="line">0.     0.760  0.     1.1            | M2  P2&#x2F;Po1  S2  X2  </span><br><span class="line">  0.0 0.                              | MFRIN</span><br><span class="line">0.0  6.0                        | RE    NCRIT</span><br><span class="line">1.0 1.0                         | XTRS  XTRP</span><br><span class="line">1   0.85   -1.4                     | ISMOM  MCRIT  MUCON</span><br><span class="line"> 0.   0.</span><br></pre></td></tr></table></figure>
<p>保持无粘，继续迭代：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> ISREAD: Too few MOVNin values. Assuming zeros.</span><br><span class="line"></span><br><span class="line"> No Wall temperature specified, adiabatic wall used</span><br><span class="line"></span><br><span class="line"> Fturb =   0.24547   Ncrit =   6.00000</span><br><span class="line"></span><br><span class="line"> MISES v2.58</span><br><span class="line"></span><br><span class="line"> Current iteration:   5</span><br><span class="line"> </span><br><span class="line"> Momentum conserved</span><br><span class="line"> 1st-order upwinding will be used</span><br><span class="line"> </span><br><span class="line"> Active global variables ...</span><br><span class="line">  1  DSINL  inlet flow slope</span><br><span class="line">  2  DSLEX  grid exit flow slope</span><br><span class="line">  5  DSBLE  LE stagnation point for blade   1</span><br><span class="line">  6  DPREX  grid exit static pressure</span><br><span class="line"> 15  DMINL  inlet Mach number</span><br><span class="line"></span><br><span class="line"> Number of global variables  :  5</span><br><span class="line"> </span><br><span class="line"> Active global constraints ...</span><br><span class="line"> 15  Drive inlet  Mach1 from   1.15000      to   1.15000    </span><br><span class="line">  4  Set  TE Kutta condition  for blade   1</span><br><span class="line">  3  Set  LE Kutta condition  for blade   1</span><br><span class="line">  6  Drive inlet P0a to PSTr0 (= 1/gamma)</span><br><span class="line">  1  Drive inlet slope  S1 from   1.44947      to   1.63000    </span><br><span class="line"></span><br><span class="line"> Number of global constraints:  5</span><br><span class="line">  </span><br><span class="line"> Enter number of iterations  100 #继续尝试100步</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.003404</span><br><span class="line"></span><br><span class="line">    6   rms(dR): 0.227E+01  Max(dR): 0.588E+02  at  196  19</span><br><span class="line">        rms(dN): 0.809E-01  Max(dN): -.179E+00  at   17  20</span><br><span class="line">        Blade  :    1        LE ds : -.828E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.597E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.494E-13</span><br><span class="line">        dPex/Po: -.295E-01  Pex/Po :    0.7884</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.008077</span><br><span class="line"></span><br><span class="line">    7   rms(dR): 0.917E+00  Max(dR): 0.248E+02  at  195  18</span><br><span class="line">        rms(dN): 0.751E-01  Max(dN): -.177E+00  at   17  19</span><br><span class="line">        Blade  :    1        LE ds : -.398E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.190E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.417E-13</span><br><span class="line">        dPex/Po: -.402E-01  Pex/Po :    0.7881</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.028748</span><br><span class="line"></span><br><span class="line">    8   rms(dR): 0.368E+00  Max(dR): 0.696E+01  at  194  18</span><br><span class="line">        rms(dN): 0.598E-01  Max(dN): -.145E+00  at    1  20</span><br><span class="line">        Blade  :    1        LE ds : -.299E-03</span><br><span class="line">        dSinl  : 0.555E-16  dSLex  : -.138E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.117E-13</span><br><span class="line">        dPex/Po: -.467E-01  Pex/Po :    0.7868</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.031909</span><br><span class="line"></span><br><span class="line">    9   rms(dR): 0.109E+01  Max(dR): -.627E+01  at  181   4</span><br><span class="line">        rms(dN): 0.305E-01  Max(dN): 0.911E-01  at   18  10</span><br><span class="line">        Blade  :    1        LE ds : -.207E-02</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.223E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.105E-13</span><br><span class="line">        dPex/Po: -.921E-01  Pex/Po :    0.7838</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> *** Subsonic Mach number in NUCALC at I,J           1          19</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.072610</span><br><span class="line"></span><br><span class="line">   10   rms(dR): 0.181E+00  Max(dR): 0.275E+01  at  194  19</span><br><span class="line">        rms(dN): 0.737E-01  Max(dN): -.182E+00  at   11  20</span><br><span class="line">        Blade  :    1        LE ds : 0.506E-04</span><br><span class="line">        dSinl  : 0.278E-16  dSLex  : -.147E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.463E-14</span><br><span class="line">        dPex/Po: -.323E-01  Pex/Po :    0.7815</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> *** Subsonic Mach number in NUCALC at I,J           1          19</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.159935</span><br><span class="line"></span><br><span class="line">   11   rms(dR): 0.127E+00  Max(dR): 0.125E+01  at  193  19</span><br><span class="line">        rms(dN): 0.664E-01  Max(dN): -.165E+00  at    1  20</span><br><span class="line">        Blade  :    1        LE ds : 0.168E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.161E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.210E-14</span><br><span class="line">        dPex/Po: -.284E-01  Pex/Po :    0.7769</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.400140</span><br><span class="line"></span><br><span class="line">   12   rms(dR): 0.709E-01  Max(dR): 0.500E+00  at  192  19</span><br><span class="line">        rms(dN): 0.509E-01  Max(dN): -.131E+00  at    1  20</span><br><span class="line">        Blade  :    1        LE ds : 0.255E-03</span><br><span class="line">        dSinl  : 0.278E-16  dSLex  : -.102E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.841E-15</span><br><span class="line">        dPex/Po: -.290E-01  Pex/Po :    0.7653</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.235522</span><br><span class="line"></span><br><span class="line">   13 G rms(dR): 0.542E-01  Max(dR): -.849E+00  at  185   6</span><br><span class="line">        rms(dN): 0.266E-01  Max(dN): -.701E-01  at    1  20</span><br><span class="line">        Blade  :    1        LE ds : 0.207E-03</span><br><span class="line">        dSinl  : 0.278E-16  dSLex  : -.371E-02</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.143E-14</span><br><span class="line">        dPex/Po: -.246E-01  Pex/Po :    0.7595</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.211905</span><br><span class="line"></span><br><span class="line">   14   rms(dR): 0.555E-01  Max(dR): -.944E+00  at  185   7</span><br><span class="line">        rms(dN): 0.200E-01  Max(dN): -.523E-01  at    2  20</span><br><span class="line">        Blade  :    1        LE ds : 0.122E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.293E-02</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.159E-14</span><br><span class="line">        dPex/Po: -.200E-01  Pex/Po :    0.7553</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.234368</span><br><span class="line"></span><br><span class="line">   15   rms(dR): 0.465E-01  Max(dR): -.853E+00  at  185   8</span><br><span class="line">        rms(dN): 0.152E-01  Max(dN): -.399E-01  at    2  20</span><br><span class="line">        Blade  :    1        LE ds : 0.134E-03</span><br><span class="line">        dSinl  : 0.139E-16  dSLex  : -.352E-02</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.144E-14</span><br><span class="line">        dPex/Po: -.161E-01  Pex/Po :    0.7515</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.287949</span><br><span class="line"></span><br><span class="line">   16   rms(dR): 0.358E-01  Max(dR): -.695E+00  at  187   6</span><br><span class="line">        rms(dN): 0.113E-01  Max(dN): -.296E-01  at    2  20</span><br><span class="line">        Blade  :    1        LE ds : 0.150E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.131E-02</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.117E-14</span><br><span class="line">        dPex/Po: -.135E-01  Pex/Po :    0.7476</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.361742</span><br><span class="line"></span><br><span class="line">   17   rms(dR): 0.280E-01  Max(dR): -.553E+00  at  187   7</span><br><span class="line">        rms(dN): 0.781E-02  Max(dN): -.204E-01  at    2  20</span><br><span class="line">        Blade  :    1        LE ds : 0.148E-03</span><br><span class="line">        dSinl  : -.139E-16  dSLex  : -.149E-02</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.930E-15</span><br><span class="line">        dPex/Po: -.102E-01  Pex/Po :    0.7439</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.473714</span><br><span class="line"></span><br><span class="line">   18   rms(dR): 0.198E-01  Max(dR): -.422E+00  at  187   8</span><br><span class="line">        rms(dN): 0.485E-02  Max(dN): -.126E-01  at    2  20</span><br><span class="line">        Blade  :    1        LE ds : 0.125E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.313E-03</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.710E-15</span><br><span class="line">        dPex/Po: -.732E-02  Pex/Po :    0.7405</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.792248</span><br><span class="line"></span><br><span class="line">   19   rms(dR): 0.126E-01  Max(dR): -.252E+00  at  188   7</span><br><span class="line">        rms(dN): 0.248E-02  Max(dN): -.646E-02  at    2  20</span><br><span class="line">        Blade  :    1        LE ds : 0.780E-04</span><br><span class="line">        dSinl  : -.694E-17  dSLex  : -.239E-03</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.425E-15</span><br><span class="line">        dPex/Po: -.413E-02  Pex/Po :    0.7372</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   20   rms(dR): 0.477E-02  Max(dR): -.125E+00  at  189   7</span><br><span class="line">        rms(dN): 0.494E-03  Max(dN): -.127E-02  at    2  20</span><br><span class="line">        Blade  :    1        LE ds : 0.196E-04</span><br><span class="line">        dSinl  : 0.867E-18  dSLex  : -.896E-05</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.336E-15</span><br><span class="line">        dPex/Po: -.966E-03  Pex/Po :    0.7362</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   21   rms(dR): 0.846E-03  Max(dR): -.250E-01  at  188   9</span><br><span class="line">        rms(dN): 0.117E-04  Max(dN): 0.913E-04  at  189  10</span><br><span class="line">        Blade  :    1        LE ds : -.665E-07</span><br><span class="line">        dSinl  : 0.542E-19  dSLex  : -.223E-04</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.336E-15</span><br><span class="line">        dPex/Po: 0.329E-04  Pex/Po :    0.7363</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   22   rms(dR): 0.362E-04  Max(dR): -.111E-02  at  189   8</span><br><span class="line">        rms(dN): 0.848E-06  Max(dN): -.537E-05  at  308   7</span><br><span class="line">        Blade  :    1        LE ds : -.732E-08</span><br><span class="line">        dSinl  : -.339E-20  dSLex  : -.199E-05</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.336E-15</span><br><span class="line">        dPex/Po: 0.370E-05  Pex/Po :    0.7363</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   23   rms(dR): 0.998E-07  Max(dR): 0.381E-05  at  188   7</span><br><span class="line">        rms(dN): 0.182E-08  Max(dN): -.202E-07  at  190   7</span><br><span class="line">        Blade  :    1        LE ds : -.110E-10</span><br><span class="line">        dSinl  : 0.132E-22  dSLex  : 0.955E-09</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.336E-15</span><br><span class="line">        dPex/Po: 0.880E-08  Pex/Po :    0.7363</span><br><span class="line"> </span><br><span class="line"> Converged on tolerance</span><br><span class="line">  </span><br><span class="line"> Enter number of iterations</span><br><span class="line">0 #第23步收敛，退出</span><br></pre></td></tr></table></figure>
<h5 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h5><p>Re替换为真实值，计算有粘边界层</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 1 2 5 6 15 ! 11 12                                       </span><br><span class="line">15 4 3 6 1 ! 11 12        </span><br><span class="line">1.150  0.     1.63  -0.2            | M1  P1&#x2F;Po1  S1  X1  </span><br><span class="line">0.     0.760  0.     1.1            | M2  P2&#x2F;Po1  S2  X2  </span><br><span class="line">  0.0 0.                              | MFRIN</span><br><span class="line">0.956E6  6.0                        | RE    NCRIT</span><br><span class="line">1.0 1.0                         | XTRS  XTRP</span><br><span class="line">1   0.85   -1.4                     | ISMOM  MCRIT  MUCON</span><br><span class="line"> 0.   0.                            | BVR1IN  BVR2IN</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> ISREAD: Too few MOVNin values. Assuming zeros.</span><br><span class="line"></span><br><span class="line"> No Wall temperature specified, adiabatic wall used</span><br><span class="line"></span><br><span class="line"> Fturb =   0.24547   Ncrit =   6.00000</span><br><span class="line"></span><br><span class="line"> MISES v2.58</span><br><span class="line"></span><br><span class="line"> Current iteration:  23</span><br><span class="line"> </span><br><span class="line"> Boundary Layer coupling included</span><br><span class="line"> Momentum conserved</span><br><span class="line"> 1st-order upwinding will be used</span><br><span class="line"> </span><br><span class="line"> Active global variables ...</span><br><span class="line">  1  DSINL  inlet flow slope</span><br><span class="line">  2  DSLEX  grid exit flow slope</span><br><span class="line">  5  DSBLE  LE stagnation point for blade   1</span><br><span class="line">  6  DPREX  grid exit static pressure</span><br><span class="line"> 15  DMINL  inlet Mach number</span><br><span class="line"></span><br><span class="line"> Number of global variables  :  5</span><br><span class="line"> </span><br><span class="line"> Active global constraints ...</span><br><span class="line"> 15  Drive inlet  Mach1 from   1.15000      to   1.15000    </span><br><span class="line">  4  Set  TE Kutta condition  for blade   1</span><br><span class="line">  3  Set  LE Kutta condition  for blade   1</span><br><span class="line">  6  Drive inlet P0a to PSTr0 (= 1/gamma)</span><br><span class="line">  1  Drive inlet slope  S1 from   1.63000      to   1.63000    </span><br><span class="line"></span><br><span class="line"> Number of global constraints:  5</span><br><span class="line">  </span><br><span class="line"> Enter number of iterations 100 #计算有粘</span><br><span class="line">  </span><br><span class="line"> Initializing BL ...</span><br><span class="line"> MRCHBL: Inverse mode at 187   HB =   4.0738   lam </span><br><span class="line"> MRCHBL: Inverse mode at 188   HB =   5.0151   lam </span><br><span class="line"> MRCHBL: Inverse mode at 189   HB =   2.5000   tran</span><br><span class="line"> MRCHBL: Conv. failed at 190   HB =   1.9599   Rt =   1018.7   max(dV) =  0.2371E+01</span><br><span class="line"> MRCHBL: Conv. failed at 191   HB =   1.7502   Rt =   1167.0   max(dV) =  0.2974E+01</span><br><span class="line"> MRCHBL: Conv. failed at 192   HB =   1.7130   Rt =   1287.4   max(dV) =  0.3099E+01</span><br><span class="line"> MRCHBL: Conv. failed at 193   HB =   1.8863   Rt =   1300.9   max(dV) =  0.5443E+01</span><br><span class="line"> MRCHBL: Conv. failed at 194   HB =   1.8845   Rt =   1347.8   max(dV) =  0.6334E+01</span><br><span class="line"> MRCHBL: Conv. failed at 195   HB =   1.9693   Rt =   1311.5   max(dV) =  0.1031E+02</span><br><span class="line"> MRCHBL: Conv. failed at 196   HB =   1.9682   Rt =   1319.2   max(dV) =  0.1081E+02</span><br><span class="line"> MRCHBL: Conv. failed at 197   HB =   1.9681   Rt =   1320.3   max(dV) =  0.1088E+02</span><br><span class="line"> MRCHBL: Conv. failed at 198   HB =   1.9685   Rt =   1318.0   max(dV) =  0.1073E+02</span><br><span class="line"> MRCHBL: Conv. failed at 199   HB =   1.9691   Rt =   1313.9   max(dV) =  0.1047E+02</span><br><span class="line"> MRCHBL: Conv. failed at 200   HB =   1.8828   Rt =   1366.6   max(dV) =  0.6814E+01</span><br><span class="line"> MRCHBL: Conv. failed at 201   HB =   1.8834   Rt =   1362.2   max(dV) =  0.6707E+01</span><br><span class="line"> MRCHBL: Conv. failed at 202   HB =   1.8838   Rt =   1359.5   max(dV) =  0.6643E+01</span><br><span class="line"> MRCHBL: Conv. failed at 203   HB =   1.8838   Rt =   1359.2   max(dV) =  0.6634E+01</span><br><span class="line"> MRCHBL: Conv. failed at 204   HB =   1.8836   Rt =   1360.9   max(dV) =  0.6672E+01</span><br><span class="line"> MRCHBL: Conv. failed at 205   HB =   1.8832   Rt =   1364.1   max(dV) =  0.6749E+01</span><br><span class="line"> MRCHBL: Conv. failed at 206   HB =   1.8827   Rt =   1368.0   max(dV) =  0.6853E+01</span><br><span class="line"> MRCHBL: Conv. failed at 207   HB =   1.9692   Rt =   1314.8   max(dV) =  0.1055E+02</span><br><span class="line"> MRCHBL: Conv. failed at 208   HB =   1.9684   Rt =   1320.2   max(dV) =  0.1093E+02</span><br><span class="line"> MRCHBL: Conv. failed at 209   HB =   1.9673   Rt =   1327.2   max(dV) =  0.1145E+02</span><br><span class="line"> MRCHBL: Conv. failed at 210   HB =   1.9658   Rt =   1336.2   max(dV) =  0.1219E+02</span><br><span class="line"> MRCHBL: Conv. failed at 211   HB =   1.9638   Rt =   1346.7   max(dV) =  0.1317E+02</span><br><span class="line"> MRCHBL: Conv. failed at 212   HB =   1.9614   Rt =   1358.0   max(dV) =  0.1443E+02</span><br><span class="line"> MRCHBL: Conv. failed at 213   HB =   1.9587   Rt =   1369.5   max(dV) =  0.1609E+02</span><br><span class="line"> MRCHBL: Conv. failed at 214   HB =   2.0615   Rt =   1313.7   max(dV) =  0.2758E+03</span><br><span class="line"> MRCHBL: Conv. failed at 215   HB =   1.2823   Rt =   1117.5   max(dV) =  0.2496E+03</span><br><span class="line"> MRCHBL: Conv. failed at 216   HB =   1.2805   Rt =   1127.8   max(dV) =  0.8305E+02</span><br><span class="line"> MRCHBL: Conv. failed at 217   HB =   1.3744   Rt =   1063.3   max(dV) =  0.7746E+01</span><br><span class="line"> MRCHBL: Conv. failed at 218   HB =   1.3731   Rt =   1071.8   max(dV) =  0.7325E+01</span><br><span class="line"> MRCHBL: Conv. failed at 219   HB =   1.3720   Rt =   1080.1   max(dV) =  0.6918E+01</span><br><span class="line"> MRCHBL: Conv. failed at 220   HB =   1.5510   Rt =    968.1   max(dV) =  0.4512E+02</span><br><span class="line"> MRCHBL: Conv. failed at 221   HB =   1.5691   Rt =    963.3   max(dV) =  0.6308E+02</span><br><span class="line"> MRCHBL: Conv. failed at 222   HB =   1.5628   Rt =    974.7   max(dV) =  0.5509E+02</span><br><span class="line"> MRCHBL: Conv. failed at 223   HB =   1.5461   Rt =   1023.0   max(dV) =  0.6105E+02</span><br><span class="line"> MRCHBL: Conv. failed at 224   HB =   1.0461   Rt =    870.9   max(dV) =  0.8313E+02</span><br><span class="line"> MRCHBL: Conv. failed at 225   HB =   1.2763   Rt =    853.5   max(dV) =  0.1915E+02</span><br><span class="line"> MRCHBL: Conv. failed at 226   HB =   1.0200   Rt =    751.6   max(dV) =  0.9205E+02</span><br><span class="line"> MRCHBL: Conv. failed at 227   HB =   1.0200   Rt =    796.7   max(dV) =  0.2963E+02</span><br><span class="line"> MRCHBL: Conv. failed at 228   HB =   1.1086   Rt =    861.0   max(dV) =  0.1374E+02</span><br><span class="line"> MRCHBL: Inverse mode at 229   HB =   2.5000   turb</span><br><span class="line"> MRCHBL: Conv. failed at 230   HB =   1.4505   Rt =   1295.4   max(dV) =  0.1053E+03</span><br><span class="line"> MRCHBL: Inverse mode at 231   HB =   2.5000   turb</span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.4135 (0.4143)  189</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.4452 (0.4459)  225</span><br><span class="line"> MRCHBL: Inverse mode at 258   HB =   1.6595   wake</span><br><span class="line"> MRCHBL: Conv. failed at 259   HB =   1.7527   Rt =   7494.1   max(dV) =  0.3238E+01</span><br><span class="line"> MRCHBL: Conv. failed at 260   HB =   1.7204   Rt =   7671.3   max(dV) =  0.2513E+01</span><br><span class="line"> MRCHBL: Conv. failed at 261   HB =   1.7295   Rt =   7674.8   max(dV) =  0.2262E+01</span><br><span class="line"> MRCHBL: Conv. failed at 262   HB =   1.7559   Rt =   7601.1   max(dV) =  0.2157E+01</span><br><span class="line"> MRCHBL: Conv. failed at 263   HB =   1.7264   Rt =   7759.5   max(dV) =  0.1756E+01</span><br><span class="line"> MRCHBL: Conv. failed at 264   HB =   1.7507   Rt =   7682.4   max(dV) =  0.1702E+01</span><br><span class="line"> MRCHBL: Conv. failed at 265   HB =   1.7684   Rt =   7630.2   max(dV) =  0.1634E+01</span><br><span class="line"> MRCHBL: Conv. failed at 266   HB =   1.8163   Rt =   7453.0   max(dV) =  0.1733E+01</span><br><span class="line"> MRCHBL: Conv. failed at 267   HB =   1.8291   Rt =   7416.2   max(dV) =  0.1672E+01</span><br><span class="line"> MRCHBL: Conv. failed at 268   HB =   1.8389   Rt =   7389.0   max(dV) =  0.1612E+01</span><br><span class="line"> MRCHBL: Conv. failed at 269   HB =   1.8462   Rt =   7368.9   max(dV) =  0.1554E+01</span><br><span class="line"> MRCHBL: Conv. failed at 270   HB =   1.8516   Rt =   7354.5   max(dV) =  0.1500E+01</span><br><span class="line"> MRCHBL: Conv. failed at 271   HB =   1.8553   Rt =   7344.7   max(dV) =  0.1451E+01</span><br><span class="line"> MRCHBL: Conv. failed at 272   HB =   1.8155   Rt =   7503.2   max(dV) =  0.1250E+01</span><br><span class="line"> MRCHBL: Conv. failed at 273   HB =   1.8174   Rt =   7497.6   max(dV) =  0.1217E+01</span><br><span class="line"> MRCHBL: Conv. failed at 274   HB =   1.7997   Rt =   7569.4   max(dV) =  0.1127E+01</span><br><span class="line"> MRCHBL: Conv. failed at 275   HB =   1.8033   Rt =   7554.6   max(dV) =  0.1116E+01</span><br><span class="line"> MRCHBL: Conv. failed at 276   HB =   1.8062   Rt =   7542.5   max(dV) =  0.1360E+01</span><br><span class="line"> MRCHBL: Conv. failed at 277   HB =   1.8062   Rt =   7541.1   max(dV) =  0.1364E+01</span><br><span class="line"> MRCHBL: Conv. failed at 278   HB =   1.8052   Rt =   7544.1   max(dV) =  0.1368E+01</span><br><span class="line"> MRCHBL: Conv. failed at 279   HB =   1.8024   Rt =   7553.6   max(dV) =  0.1371E+01</span><br><span class="line"> MRCHBL: Conv. failed at 280   HB =   1.7945   Rt =   7584.5   max(dV) =  0.1123E+01</span><br><span class="line"> MRCHBL: Conv. failed at 281   HB =   1.8536   Rt =   7349.5   max(dV) =  0.1437E+01</span><br><span class="line"> MRCHBL: Conv. failed at 282   HB =   1.8537   Rt =   7348.2   max(dV) =  0.1642E+01</span><br><span class="line"> MRCHBL: Conv. failed at 283   HB =   1.8557   Rt =   7339.6   max(dV) =  0.1839E+01</span><br><span class="line"> MRCHBL: Conv. failed at 284   HB =   1.8522   Rt =   7352.0   max(dV) =  0.1682E+01</span><br><span class="line"> MRCHBL: Conv. failed at 285   HB =   1.8512   Rt =   7355.2   max(dV) =  0.1599E+01</span><br><span class="line"> MRCHBL: Conv. failed at 286   HB =   1.8504   Rt =   7357.5   max(dV) =  0.1559E+01</span><br><span class="line"> MRCHBL: Conv. failed at 287   HB =   1.8498   Rt =   7359.2   max(dV) =  0.1539E+01</span><br><span class="line"> MRCHBL: Conv. failed at 288   HB =   1.8494   Rt =   7360.5   max(dV) =  0.1531E+01</span><br><span class="line"> MRCHBL: Conv. failed at 289   HB =   1.8490   Rt =   7361.5   max(dV) =  0.1528E+01</span><br><span class="line"> MRCHBL: Conv. failed at 290   HB =   1.8488   Rt =   7362.2   max(dV) =  0.1528E+01</span><br><span class="line"> MRCHBL: Conv. failed at 291   HB =   1.8486   Rt =   7362.7   max(dV) =  0.1530E+01</span><br><span class="line"> MRCHBL: Conv. failed at 292   HB =   1.8485   Rt =   7363.0   max(dV) =  0.1533E+01</span><br><span class="line"> MRCHBL: Conv. failed at 293   HB =   1.8485   Rt =   7363.1   max(dV) =  0.1535E+01</span><br><span class="line"> MRCHBL: Conv. failed at 294   HB =   1.8485   Rt =   7363.1   max(dV) =  0.1537E+01</span><br><span class="line"> MRCHBL: Conv. failed at 295   HB =   1.8485   Rt =   7363.0   max(dV) =  0.1536E+01</span><br><span class="line"> MRCHBL: Conv. failed at 296   HB =   1.8485   Rt =   7362.9   max(dV) =  0.1536E+01</span><br><span class="line"> MRCHBL: Conv. failed at 297   HB =   1.8486   Rt =   7362.7   max(dV) =  0.1537E+01</span><br><span class="line"> MRCHBL: Conv. failed at 298   HB =   1.8487   Rt =   7362.4   max(dV) =  0.1538E+01</span><br><span class="line"> MRCHBL: Conv. failed at 299   HB =   1.8488   Rt =   7362.2   max(dV) =  0.1539E+01</span><br><span class="line"> MRCHBL: Conv. failed at 300   HB =   1.8489   Rt =   7361.9   max(dV) =  0.1539E+01</span><br><span class="line"> MRCHBL: Conv. failed at 301   HB =   1.8490   Rt =   7361.7   max(dV) =  0.1540E+01</span><br><span class="line"> MRCHBL: Conv. failed at 302   HB =   1.8491   Rt =   7361.4   max(dV) =  0.1541E+01</span><br><span class="line"> MRCHBL: Conv. failed at 303   HB =   1.8492   Rt =   7361.2   max(dV) =  0.1542E+01</span><br><span class="line"> MRCHBL: Conv. failed at 304   HB =   1.8493   Rt =   7360.9   max(dV) =  0.1544E+01</span><br><span class="line"> MRCHBL: Conv. failed at 305   HB =   1.8494   Rt =   7360.6   max(dV) =  0.1555E+01</span><br><span class="line"> MRCHBL: Conv. failed at 306   HB =   1.8495   Rt =   7360.0   max(dV) =  0.1578E+01</span><br><span class="line"> MRCHBL: Conv. failed at 307   HB =   1.8499   Rt =   7358.7   max(dV) =  0.1654E+01</span><br><span class="line"> MRCHBL: Conv. failed at 308   HB =   1.8525   Rt =   7348.9   max(dV) =  0.1806E+01</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.000000</span><br><span class="line"> RLXN: 0.000000</span><br><span class="line"> RLXV: 0.000000    T clamped at I = 308, side   2</span><br><span class="line"></span><br><span class="line">   24   rms(dR): 0.141E+10  Max(dR): -.239E+11  at  308   1</span><br><span class="line">        rms(dN): 0.233E+09  Max(dN): 0.200E+10  at  298   1</span><br><span class="line">        rms(dV): 0.346E+11  Max(dT): -.753E+12  at  308   2</span><br><span class="line">        Blade  :    1        LE ds : -.455E-03</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : -.156E+12</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.211E-03</span><br><span class="line">        dPex/Po: 0.189E+10  Pex/Po :    0.7378</span><br><span class="line">  </span><br><span class="line"> MRCHBL: Conv. failed at 215   HB =   1.0200   Rt =    527.3   max(dV) =  0.1305E+02</span><br><span class="line"> MRCHBL: Conv. failed at 216   HB =   1.7920   Rt =    668.4   max(dV) =  0.9260E+01</span><br><span class="line"> MRCHBL: Conv. failed at 217   HB =   1.7639   Rt =    673.0   max(dV) =  0.3115E+01</span><br><span class="line"> MRCHBL: Conv. failed at 218   HB =   1.7846   Rt =    642.9   max(dV) =  0.6667E+01</span><br><span class="line"> MRCHBL: Conv. failed at 219   HB =   1.0200   Rt =    437.8   max(dV) =  0.9375E+01</span><br><span class="line"> MRCHBL: Conv. failed at 220   HB =   2.3578   Rt =   1070.4   max(dV) =  0.1094E+02</span><br><span class="line"> MRCHBL: Conv. failed at 221   HB =   1.3606   Rt =    991.4   max(dV) =  0.2694E+02</span><br><span class="line"> MRCHBL: Conv. failed at 222   HB =   1.0200   Rt =    341.4   max(dV) =  0.1868E+01</span><br><span class="line"> MRCHBL: Conv. failed at 223   HB =   1.5012   Rt =    574.5   max(dV) =  0.3940E+00</span><br><span class="line"> MRCHBL: Conv. failed at 224   HB =   1.3303   Rt =    405.9   max(dV) =  0.7398E+00</span><br><span class="line"> MRCHBL: Conv. failed at 225   HB =   3.2539   Rt =    831.3   max(dV) =  0.1027E+02</span><br><span class="line"> MRCHBL: Conv. failed at 226   HB =   1.1414   Rt =    394.9   max(dV) =  0.1660E+00</span><br><span class="line"> MRCHBL: Conv. failed at 227   HB =   1.8620   Rt =   1501.7   max(dV) =  0.1188E+01</span><br><span class="line"> MRCHBL: Conv. failed at 229   HB =   1.5043   Rt =    493.3   max(dV) =  0.8753E-01</span><br><span class="line"> Side 1 bypass transition at  X (x/c) i =   0.9426 (0.9426)  227</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.4372 (0.4379)  224</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.165547</span><br><span class="line"> RLXN: 0.396388</span><br><span class="line"> RLXV: 0.004049    C clamped at I = 227, side   1</span><br><span class="line"></span><br><span class="line">   25   rms(dR): 0.959E-01  Max(dR): 0.121E+01  at  229   1</span><br><span class="line">        rms(dN): 0.901E-01  Max(dN): 0.387E+00  at  308   3</span><br><span class="line">        rms(dV): 0.793E+01  Max(dC): -.148E+03  at  227   1</span><br><span class="line">        Blade  :    1        LE ds : -.312E-04</span><br><span class="line">        dSinl  : 0.156E-16  dSLex  : 0.155E+01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.831E-13</span><br><span class="line">        dPex/Po: -.158E+00  Pex/Po :    0.7371</span><br><span class="line">  </span><br><span class="line"> MRCHBL: Conv. failed at 165   HB =   1.1825   Rt =    383.2   max(dV) =  0.7232E+01</span><br><span class="line"> MRCHBL: Conv. failed at 166   HB =   1.5617   Rt =    197.5   max(dV) =  0.4362E-01</span><br><span class="line"> MRCHBL: Conv. failed at 167   HB =   1.5406   Rt =    375.5   max(dV) =  0.1513E+01</span><br><span class="line"> MRCHBL: Conv. failed at 168   HB =   2.0289   Rt =    483.7   max(dV) =  0.1782E+01</span><br><span class="line"> MRCHBL: Conv. failed at 169   HB =   1.0927   Rt =    175.4   max(dV) =  0.1975E+00</span><br><span class="line"> MRCHBL: Conv. failed at 170   HB =   2.3604   Rt =    513.0   max(dV) =  0.6095E+01</span><br><span class="line"> MRCHBL: Conv. failed at 171   HB =   2.1279   Rt =    377.1   max(dV) =  0.6730E+00</span><br><span class="line"> MRCHBL: Conv. failed at 172   HB =   1.4457   Rt =    224.3   max(dV) =  0.5802E+00</span><br><span class="line"> MRCHBL: Conv. failed at 175   HB =   1.4440   Rt =    463.7   max(dV) =  0.2207E+02</span><br><span class="line"> MRCHBL: Conv. failed at 178   HB =  13.6218   Rt =    300.9   max(dV) =  0.4204E-02</span><br><span class="line"> MRCHBL: Conv. failed at 181   HB =   1.0200   Rt =    211.8   max(dV) =  0.5185E+00</span><br><span class="line"> MRCHBL: Conv. failed at 183   HB =   1.7791   Rt =    525.8   max(dV) =  0.2151E+01</span><br><span class="line"> MRCHBL: Conv. failed at 186   HB =   2.0830   Rt =    393.2   max(dV) =  0.8351E-01</span><br><span class="line"> MRCHBL: Conv. failed at 227   HB =   1.4485   Rt =   1588.5   max(dV) =  0.7339E+00</span><br><span class="line"> MRCHBL: Conv. failed at 228   HB =   1.4405   Rt =   1605.1   max(dV) =  0.7250E+00</span><br><span class="line"> MRCHBL: Conv. failed at 229   HB =   1.1744   Rt =   1319.3   max(dV) =  0.2201E+01</span><br><span class="line"> MRCHBL: Conv. failed at 230   HB =   1.1793   Rt =   1505.9   max(dV) =  0.2215E+00</span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.3089 (0.3098)  180</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.4291 (0.4298)  224</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.001260</span><br><span class="line"> RLXN: 0.012005</span><br><span class="line"> RLXV: 0.000480    H clamped at I = 175, side   1</span><br><span class="line"></span><br><span class="line">   26   rms(dR): 0.797E+01  Max(dR): 0.159E+03  at  186  10</span><br><span class="line">        rms(dN): 0.649E+00  Max(dN): -.312E+01  at  176   1</span><br><span class="line">        rms(dV): 0.100E+03  Max(dH): 0.179E+02  at  175   1</span><br><span class="line">        Blade  :    1        LE ds : 0.629E-02</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.242E+01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.701E-12</span><br><span class="line">        dPex/Po: 0.150E+01  Pex/Po :    0.7378</span><br><span class="line">  </span><br><span class="line"> MRCHBL: Conv. failed at 159   HB =   2.5457   Rt =    323.6   max(dV) =  0.2841E+00</span><br><span class="line"> MRCHBL: Conv. failed at 161   HB =   2.1635   Rt =    272.0   max(dV) =  0.1628E+00</span><br><span class="line"> MRCHBL: Conv. failed at 165   HB =   1.0200   Rt =    107.3   max(dV) =  0.2514E+00</span><br><span class="line"> MRCHBL: Conv. failed at 166   HB =   1.8711   Rt =    243.6   max(dV) =  0.7365E-01</span><br><span class="line"> MRCHBL: Conv. failed at 168   HB =   1.9608   Rt =    283.0   max(dV) =  0.2068E+00</span><br><span class="line"> MRCHBL: Conv. failed at 169   HB =   1.0200   Rt =    150.8   max(dV) =  0.6213E+00</span><br><span class="line"> MRCHBL: Conv. failed at 170   HB =   2.3314   Rt =    344.0   max(dV) =  0.3210E+00</span><br><span class="line"> MRCHBL: Conv. failed at 171   HB =   1.4241   Rt =    221.9   max(dV) =  0.1513E+00</span><br><span class="line"> MRCHBL: Conv. failed at 172   HB =   1.2041   Rt =    219.7   max(dV) =  0.3304E+00</span><br><span class="line"> MRCHBL: Conv. failed at 175   HB =   1.5450   Rt =    394.5   max(dV) =  0.1621E+01</span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.4223 (0.4230)  190</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.4227 (0.4235)  223</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.167921</span><br><span class="line"> RLXV: 0.040140    H clamped at I = 181, side   1</span><br><span class="line"></span><br><span class="line">   27   rms(dR): 0.933E-01  Max(dR): 0.119E+01  at  189   7</span><br><span class="line">        rms(dN): 0.157E-01  Max(dN): -.648E-01  at  308   7</span><br><span class="line">        rms(dV): 0.136E+01  Max(dH): 0.466E+02  at  181   1</span><br><span class="line">        Blade  :    1        LE ds : -.818E-04</span><br><span class="line">        dSinl  : -.139E-16  dSLex  : -.909E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.838E-14</span><br><span class="line">        dPex/Po: 0.317E-01  Pex/Po :    0.7391</span><br><span class="line">  </span><br><span class="line"> MRCHBL: Conv. failed at 179   HB =   1.0200   Rt =    420.2   max(dV) =  0.8569E-01</span><br><span class="line"> MRCHBL: Conv. failed at 180   HB =   1.0200   Rt =    583.5   max(dV) =  0.5653E-01</span><br><span class="line"> MRCHBL: Conv. failed at 181   HB =   1.0200   Rt =    719.8   max(dV) =  0.1972E-01</span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.2844 (0.2854)  178</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.4116 (0.4124)  223</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.854733</span><br><span class="line"> RLXV: 0.119719    H clamped at I = 213, side   1</span><br><span class="line"></span><br><span class="line">   28   rms(dR): 0.296E-01  Max(dR): -.234E+00  at  212   1</span><br><span class="line">        rms(dN): 0.204E-01  Max(dN): 0.916E-01  at  307  20</span><br><span class="line">        rms(dV): 0.164E+01  Max(dH): -.439E+01  at  213   1</span><br><span class="line">        Blade  :    1        LE ds : -.145E-04</span><br><span class="line">        dSinl  : -.278E-16  dSLex  : -.396E+00</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.281E-14</span><br><span class="line">        dPex/Po: 0.489E-01  Pex/Po :    0.7449</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.2394 (0.2403)  174</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.3998 (0.4005)  222</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.538496</span><br><span class="line"> RLXV: 0.244774    C clamped at I = 174, side   1</span><br><span class="line"></span><br><span class="line">   29   rms(dR): 0.185E-01  Max(dR): -.371E+00  at  187   9</span><br><span class="line">        rms(dN): 0.124E-02  Max(dN): 0.829E-02  at  192   1</span><br><span class="line">        rms(dV): 0.510E+00  Max(dC): -.245E+01  at  174   1</span><br><span class="line">        Blade  :    1        LE ds : -.294E-04</span><br><span class="line">        dSinl  : -.862E-17  dSLex  : 0.722E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.137E-14</span><br><span class="line">        dPex/Po: 0.840E-04  Pex/Po :    0.7449</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.2902 (0.2911)  178</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.3390 (0.3398)  218</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.362965    H clamped at I = 220, side   2</span><br><span class="line"></span><br><span class="line">   30   rms(dR): 0.104E-01  Max(dR): -.172E+00  at  188   9</span><br><span class="line">        rms(dN): 0.280E-02  Max(dN): 0.104E-01  at  252   1</span><br><span class="line">        rms(dV): 0.247E+00  Max(dH): -.268E+01  at  220   2</span><br><span class="line">        Blade  :    1        LE ds : -.138E-04</span><br><span class="line">        dSinl  : 0.139E-16  dSLex  : 0.115E+00</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.927E-15</span><br><span class="line">        dPex/Po: -.105E-01  Pex/Po :    0.7411</span><br><span class="line">  </span><br><span class="line"> Side 1 bypass transition at  X (x/c) i =   0.4682 (0.4688)  194</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.2451 (0.2461)  213</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.221254</span><br><span class="line"> RLXV: 0.051529    H clamped at I = 214, side   2</span><br><span class="line"></span><br><span class="line">   31   rms(dR): 0.523E-01  Max(dR): -.904E+00  at  190   5</span><br><span class="line">        rms(dN): 0.891E-02  Max(dN): -.349E-01  at  199   1</span><br><span class="line">        rms(dV): 0.132E+01  Max(dH): -.776E+01  at  214   2</span><br><span class="line">        Blade  :    1        LE ds : 0.354E-05</span><br><span class="line">        dSinl  : 0.139E-16  dSLex  : 0.147E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.653E-14</span><br><span class="line">        dPex/Po: 0.200E-01  Pex/Po :    0.7421</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.2927 (0.2936)  179</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.1953 (0.1963)  210</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.067002    H clamped at I = 211, side   2</span><br><span class="line"></span><br><span class="line">   32   rms(dR): 0.109E-01  Max(dR): 0.167E+00  at  210  19</span><br><span class="line">        rms(dN): 0.344E-02  Max(dN): 0.144E-01  at  308   1</span><br><span class="line">        rms(dV): 0.516E+00  Max(dH): -.627E+01  at  211   2</span><br><span class="line">        Blade  :    1        LE ds : -.103E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.104E+00</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.502E-14</span><br><span class="line">        dPex/Po: -.141E-01  Pex/Po :    0.7412</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.2638 (0.2647)  176</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.1509 (0.1519)  207</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.068201    H clamped at I = 208, side   2</span><br><span class="line"></span><br><span class="line">   33   rms(dR): 0.107E-01  Max(dR): 0.133E+00  at  207  19</span><br><span class="line">        rms(dN): 0.327E-02  Max(dN): 0.138E-01  at  308   1</span><br><span class="line">        rms(dV): 0.627E+00  Max(dH): -.608E+01  at  208   2</span><br><span class="line">        Blade  :    1        LE ds : -.100E-04</span><br><span class="line">        dSinl  : -.555E-16  dSLex  : 0.101E+00</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.493E-14</span><br><span class="line">        dPex/Po: -.138E-01  Pex/Po :    0.7403</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.2307 (0.2317)  173</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.1116 (0.1128)  204</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.684467</span><br><span class="line"> RLXV: 0.065474    C clamped at I = 204, side   2</span><br><span class="line"></span><br><span class="line">   34   rms(dR): 0.146E-01  Max(dR): 0.292E+00  at  176   1</span><br><span class="line">        rms(dN): 0.365E-02  Max(dN): 0.156E-01  at  308   2</span><br><span class="line">        rms(dV): 0.999E+00  Max(dC): 0.260E+02  at  204   2</span><br><span class="line">        Blade  :    1        LE ds : 0.423E-05</span><br><span class="line">        dSinl  : 0.416E-16  dSLex  : 0.103E+00</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.514E-14</span><br><span class="line">        dPex/Po: -.136E-01  Pex/Po :    0.7394</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.1705 (0.1715)  168</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0857 (0.0869)  203</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> RLXR: 0.310014</span><br><span class="line"> RLXV: 0.130884    H clamped at I = 204, side   2</span><br><span class="line"></span><br><span class="line">   35   rms(dR): 0.229E-01  Max(dR): 0.645E+00  at  178   1</span><br><span class="line">        rms(dN): 0.261E-02  Max(dN): -.967E-02  at  178   1</span><br><span class="line">        rms(dV): 0.523E+00  Max(dH): -.350E+01  at  204   2</span><br><span class="line">        Blade  :    1        LE ds : 0.187E-04</span><br><span class="line">        dSinl  : 0.173E-17  dSLex  : 0.869E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.257E-14</span><br><span class="line">        dPex/Po: -.136E-02  Pex/Po :    0.7392</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.1046 (0.1057)  161</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0195 (0.0207)  197</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.082792    C clamped at I = 197, side   2</span><br><span class="line"></span><br><span class="line">   36   rms(dR): 0.143E-01  Max(dR): -.182E+00  at  188   9</span><br><span class="line">        rms(dN): 0.672E-02  Max(dN): 0.278E-01  at  308   2</span><br><span class="line">        rms(dV): 0.836E+00  Max(dC): 0.205E+02  at  197   2</span><br><span class="line">        Blade  :    1        LE ds : -.180E-04</span><br><span class="line">        dSinl  : 0.139E-16  dSLex  : 0.102E+00</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.406E-14</span><br><span class="line">        dPex/Po: -.185E-01  Pex/Po :    0.7377</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0864 (0.0875)  159</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0155 (0.0168)  196</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.158187    C clamped at I = 196, side   2</span><br><span class="line"></span><br><span class="line">   37   rms(dR): 0.141E-01  Max(dR): -.191E+00  at  188   9</span><br><span class="line">        rms(dN): 0.648E-02  Max(dN): 0.268E-01  at  308   2</span><br><span class="line">        rms(dV): 0.454E+00  Max(dC): 0.107E+02  at  196   2</span><br><span class="line">        Blade  :    1        LE ds : -.185E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.951E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.213E-14</span><br><span class="line">        dPex/Po: -.176E-01  Pex/Po :    0.7349</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0730 (0.0742)  158</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0134 (0.0146)  196</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.489132    C clamped at I = 158, side   1</span><br><span class="line"></span><br><span class="line">   38   rms(dR): 0.133E-01  Max(dR): -.172E+00  at  188   9</span><br><span class="line">        rms(dN): 0.597E-02  Max(dN): 0.246E-01  at  308   1</span><br><span class="line">        rms(dV): 0.196E+00  Max(dC): 0.348E+01  at  158   1</span><br><span class="line">        Blade  :    1        LE ds : -.175E-04</span><br><span class="line">        dSinl  : 0.139E-16  dSLex  : 0.852E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.688E-15</span><br><span class="line">        dPex/Po: -.161E-01  Pex/Po :    0.7270</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0452 (0.0465)  155</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0118 (0.0130)  195</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.233197    C clamped at I = 155, side   1</span><br><span class="line"></span><br><span class="line">   39   rms(dR): 0.116E-01  Max(dR): -.145E+00  at  187  10</span><br><span class="line">        rms(dN): 0.465E-02  Max(dN): 0.190E-01  at  308   1</span><br><span class="line">        rms(dV): 0.290E+00  Max(dC): 0.729E+01  at  155   1</span><br><span class="line">        Blade  :    1        LE ds : -.159E-04</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.545E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.144E-14</span><br><span class="line">        dPex/Po: -.123E-01  Pex/Po :    0.7241</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0323 (0.0336)  154</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0115 (0.0128)  195</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.633088    H clamped at I = 155, side   1</span><br><span class="line"></span><br><span class="line">   40   rms(dR): 0.967E-02  Max(dR): -.104E+00  at  187  10</span><br><span class="line">        rms(dN): 0.389E-02  Max(dN): 0.159E-01  at  308   1</span><br><span class="line">        rms(dV): 0.120E+00  Max(dH): -.174E+01  at  155   1</span><br><span class="line">        Blade  :    1        LE ds : -.126E-04</span><br><span class="line">        dSinl  : -.139E-16  dSLex  : 0.428E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.531E-15</span><br><span class="line">        dPex/Po: -.104E-01  Pex/Po :    0.7175</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0152 (0.0165)  151</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0110 (0.0123)  195</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line">  </span><br><span class="line"> RLXV: 0.874557    C clamped at I = 151, side   1</span><br><span class="line"></span><br><span class="line">   41   rms(dR): 0.483E-02  Max(dR): -.488E-01  at  186  11</span><br><span class="line">        rms(dN): 0.191E-02  Max(dN): 0.771E-02  at  308   2</span><br><span class="line">        rms(dV): 0.803E-01  Max(dC): 0.194E+01  at  151   1</span><br><span class="line">        Blade  :    1        LE ds : -.542E-05</span><br><span class="line">        dSinl  : -.347E-17  dSLex  : 0.172E-01</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.385E-15</span><br><span class="line">        dPex/Po: -.526E-02  Pex/Po :    0.7128</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0090 (0.0102)  150</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0107 (0.0120)  195</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   42   rms(dR): 0.958E-03  Max(dR): 0.113E-01  at  151   1</span><br><span class="line">        rms(dN): 0.345E-03  Max(dN): 0.138E-02  at  308   3</span><br><span class="line">        rms(dV): 0.132E-01  Max(dH): -.280E+00  at  151   1</span><br><span class="line">        Blade  :    1        LE ds : -.902E-06</span><br><span class="line">        dSinl  : 0.173E-17  dSLex  : 0.252E-02</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.336E-15</span><br><span class="line">        dPex/Po: -.990E-03  Pex/Po :    0.7118</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0079 (0.0092)  150</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0107 (0.0120)  195</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   43   rms(dR): 0.716E-04  Max(dR): 0.250E-02  at  150   1</span><br><span class="line">        rms(dN): 0.125E-04  Max(dN): 0.509E-04  at  308   4</span><br><span class="line">        rms(dV): 0.200E-02  Max(dC): -.308E-01  at  150   1</span><br><span class="line">        Blade  :    1        LE ds : 0.977E-09</span><br><span class="line">        dSinl  : 0.000E+00  dSLex  : 0.585E-04</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: 0.336E-15</span><br><span class="line">        dPex/Po: -.405E-04  Pex/Po :    0.7118</span><br><span class="line">  </span><br><span class="line"> Side 1  free  transition at  X (x/c) i =   0.0080 (0.0093)  150</span><br><span class="line"> Side 2  free  transition at  X (x/c) i =   0.0107 (0.0120)  195</span><br><span class="line"> </span><br><span class="line"> Supersonic/subsonic-axial inlet  BCs</span><br><span class="line"> Subsonic outlet BCs</span><br><span class="line"></span><br><span class="line">   44   rms(dR): 0.301E-05  Max(dR): 0.590E-04  at  150   1</span><br><span class="line">        rms(dN): 0.487E-06  Max(dN): 0.169E-05  at  248   3</span><br><span class="line">        rms(dV): 0.959E-04  Max(dH): -.160E-02  at  153   1</span><br><span class="line">        Blade  :    1        LE ds : 0.262E-08</span><br><span class="line">        dSinl  : 0.169E-20  dSLex  : 0.954E-06</span><br><span class="line">        dMinl  : 0.000E+00  dmass/m: -.336E-15</span><br><span class="line">        dPex/Po: -.275E-05  Pex/Po :    0.7118</span><br><span class="line"> </span><br><span class="line"> Converged on tolerance</span><br><span class="line">  </span><br><span class="line"> Enter number of iterations</span><br><span class="line">0 #第44步收敛，退出</span><br></pre></td></tr></table></figure>
<h4 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h4><p>输入命令，根据提示选项操作，选项7，8为将流场结果写入文件中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iplot dfvlr</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200115153248.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200115153402.png" alt=""></p>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>mises</tag>
      </tags>
  </entry>
  <entry>
    <title>VPS搭建GPS轨迹记录服务</title>
    <url>/2020/01/12/VPS%E6%90%AD%E5%BB%BAGPS%E8%BD%A8%E8%BF%B9%E8%AE%B0%E5%BD%95%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/Snipaste_2019-03-04_11-22-40-768x424.png" alt=""><br><a id="more"></a></p>
<h4 id="Traccar-是什么？"><a href="#Traccar-是什么？" class="headerlink" title="Traccar 是什么？"></a>Traccar 是什么？</h4><p><strong>Traccar 是一个免费的开源现代GPS跟踪系统，支持170多种GPS协议和超过1500种型号的GPS跟踪设备。</strong></p>
<p>可以满足</p>
<ul>
<li>出租车，货车，卡车/拖车</li>
<li>农用设备，车队，集装箱，船舶，全地形车</li>
<li>专人跟踪，个人车辆，手机</li>
</ul>
<p>等追踪定位需求。</p>
<p>Traccar 的功能非常多，可<strong>切换卫星、街景地图</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/Snipaste_2019-03-03_20-05-43-768x347.png" alt=""></p>
<p> <strong>追踪运动轨迹</strong> <img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/GPStrace-1-768x370.png" alt=""></p>
<p> <strong>追踪行程</strong>，<strong>停留点</strong>等 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/Snipaste_2019-03-03_21-54-45-768x476.png" alt=""></p>
<h4 id="搭建-Traccar-服务端"><a href="#搭建-Traccar-服务端" class="headerlink" title="搭建 Traccar 服务端"></a>搭建 Traccar 服务端</h4><p>我使用的Vultr虚拟主机，配置为</p>
<blockquote>
<p>操作系统：Debian10</p>
<p>控制面板：宝塔</p>
</blockquote>
<p>SSH连接后，安装Java服务和Mysql数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install unzip default-jre mysql-server</span><br></pre></td></tr></table></figure>
<p>由于宝塔已经安装了MySQL，只需要再安装java即可。使用宝塔面板创建一个新数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据库名: traccar</span><br><span class="line">用户名: traccar</span><br><span class="line">密码: 123456</span><br></pre></td></tr></table></figure>
<p>下载 Traccar 安装压缩包，可上<a href="https://github.com/traccar/traccar/releases" target="_blank" rel="noopener">官网</a>查看最新版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /opt/traccar &amp;&amp; cd /opt/traccar</span><br><span class="line">wget https://github.com/traccar/traccar/releases/download/v4.6/traccar-linux-64-4.6.zip</span><br></pre></td></tr></table></figure>
<p> 解压压缩包并安装，编辑配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unzip traccar-linux-*.zip</span><br><span class="line">./traccar.run</span><br><span class="line">echo &gt; conf/traccar.xml</span><br><span class="line">nano conf/traccar.xml</span><br></pre></td></tr></table></figure>
<p>按照<a href="https://www.traccar.org/install-digitalocean/" target="_blank" rel="noopener">官方模板</a>修改配置文件，注意端口和数据库密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&#39;1.0&#39; encoding&#x3D;&#39;UTF-8&#39;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE properties SYSTEM &#39;http:&#x2F;&#x2F;java.sun.com&#x2F;dtd&#x2F;properties.dtd&#39;&gt;</span><br><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;entry key&#x3D;&quot;config.default&quot;&gt;.&#x2F;conf&#x2F;default.xml&lt;&#x2F;entry&gt;</span><br><span class="line"></span><br><span class="line">    &lt;entry key&#x3D;&#39;web.port&#39;&gt;(端口)&lt;&#x2F;entry&gt;</span><br><span class="line"></span><br><span class="line">    &lt;entry key&#x3D;&#39;geocoder.enable&#39;&gt;false&lt;&#x2F;entry&gt;</span><br><span class="line"></span><br><span class="line">    &lt;entry key&#x3D;&#39;database.driver&#39;&gt;com.mysql.jdbc.Driver&lt;&#x2F;entry&gt;</span><br><span class="line">    &lt;entry key&#x3D;&#39;database.url&#39;&gt;jdbc:mysql:&#x2F;&#x2F;localhost&#x2F;traccar?allowMultiQueries&#x3D;true&amp;autoReconnect&#x3D;true&amp;useUnicode&#x3D;yes&amp;characterEncoding&#x3D;UTF-8&amp;sessionVariables&#x3D;sql_mode&#x3D;&#39;&#39;&lt;&#x2F;entry&gt;</span><br><span class="line">    &lt;entry key&#x3D;&#39;database.user&#39;&gt;root&lt;&#x2F;entry&gt;</span><br><span class="line">    &lt;entry key&#x3D;&#39;database.password&#39;&gt;(数据库密码)&lt;&#x2F;entry&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;entry key&#x3D;&#39;server.timeout&#39;&gt;120&lt;&#x2F;entry&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;properties&gt;</span><br></pre></td></tr></table></figure>
<p> 删除安装压缩包 （可选）安装完就用不到安装包了，删除节省服务器空间 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -f traccar.run README.txt traccar-linux-*.zip</span><br></pre></td></tr></table></figure>
<p> 使用systemd启停traccar： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start traccar</span><br><span class="line">systemctl enable traccar</span><br><span class="line">systemctl status traccar</span><br></pre></td></tr></table></figure>
<p>宝塔面板新建站点，开启反向代理绑定traccar端口，</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200112180224.png" alt=""></p>
<p>更改反代配置，避免出现<a href="https://github.com/socketio/socket.io/issues/1942" target="_blank" rel="noopener">websocket error问题</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;nginx&#x2F;proxy&#x2F;域名&#x2F;*.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">#PROXY-START/</span><br><span class="line">location  ~* \.(php|jsp|cgi|asp|aspx)$</span><br><span class="line">&#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8082;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection "upgrade";</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">&#125;</span><br><span class="line">location /</span><br><span class="line">&#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8082;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection "upgrade";</span><br><span class="line">    proxy_set_header Host $host; </span><br><span class="line">    add_header X-Cache $upstream_cache_status;</span><br><span class="line">    </span><br><span class="line">    #Set Nginx Cache</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    proxy_ignore_headers Set-Cookie Cache-Control expires;</span><br><span class="line">    proxy_cache cache_one;</span><br><span class="line">    proxy_cache_key $host$uri$is_args$args;</span><br><span class="line">    proxy_cache_valid 200 304 301 302 1m;</span><br><span class="line">    expires 12h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#PROXY-END/</span><br></pre></td></tr></table></figure>
<p><strong>完成后重启nginx</strong></p>
<h4 id="登陆-Traccar-Web管理"><a href="#登陆-Traccar-Web管理" class="headerlink" title="登陆 Traccar Web管理"></a>登陆 Traccar Web管理</h4><p> 浏览器输入 <code>http://服务器IP:8082</code>（需防火墙放行端口）或者反代域名， <strong>初始用户名和密码都为 ：</strong> admin </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/Snipaste_2019-03-03_19-12-51-768x462.png" alt=""></p>
<p> 添加设备和设备编码 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/Snipaste_2019-03-03_19-40-01.png" alt=""></p>
<p>如果是自己用的话，建议把注册功能给关了，另外这个默认的地图不能显示出详细的街道名和附近的场所名，这里我们可以把地图换成GoogleMap： </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;mt0.google.com&#x2F;vt&#x2F;lyrs&#x3D;m&amp;hl&#x3D;en&amp;x&#x3D;&#123;x&#125;&amp;y&#x3D;&#123;y&#125;&amp;z&#x3D;&#123;z&#125;&amp;s&#x3D;Ga</span><br></pre></td></tr></table></figure>
<p> 按下图进行设置，将上面这个地址粘贴进去即可： </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/lala.im_2019-07-21_23-51-15.png" alt=""></p>
<h4 id="安装-Traccar-客户端"><a href="#安装-Traccar-客户端" class="headerlink" title="安装 Traccar 客户端"></a>安装 Traccar 客户端</h4><p> Traccar有多种平台<a href="https://www.traccar.org/client/" target="_blank" rel="noopener">客户端</a>，根据需求安装。安卓机直接 Google Play 商城搜索 traccar 下载 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/Snipaste_2019-03-03_19-44-17-768x359.png" alt=""></p>
<p>安装打开，给予权限</p>
<p>按图设置</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/Snipaste_2019-03-03_20-00-44-768x596.png" alt=""></p>
<p> 然后打开 Traccar Web管理界面点击跟踪就可以定位到你的位置了 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/image-20200112181329268.png" alt=""></p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>traccar</tag>
      </tags>
  </entry>
  <entry>
    <title>手动安装V2ray并配置ssl</title>
    <url>/2020/01/12/%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85V2ray%E5%B9%B6%E9%85%8D%E7%BD%AEssl/</url>
    <content><![CDATA[<p>V2ray作为继小飞机后又一科学上网利器，在小飞机频繁被封的情况下运行良好。但是V2ray的配置相对小飞机稍微复杂一些，之前的博文里使用了大神的一键安装脚本简化了安装，本文参考官方给出的安装方法进行手动安装和配置。<a id="more"></a></p>
<h4 id="官方脚本安装V2ray"><a href="#官方脚本安装V2ray" class="headerlink" title="官方脚本安装V2ray"></a>官方脚本安装V2ray</h4><p><a href="https://www.v2ray.com/chapter_00/install.html" target="_blank" rel="noopener">参考官方安装说明</a>，V2Ray 提供了一个在 Linux 中的自动化安装脚本。这个脚本会自动检测有没有安装过 V2Ray，如果没有，则进行完整的安装和配置；如果之前安装过 V2Ray，则只更新 V2Ray 二进制程序而不更新配置。</p>
<p>以下指令假设已在 su 环境下，如果不是，请先运行 sudo su。</p>
<p>运行下面的指令下载并安装 V2Ray。当 yum 或 apt-get 可用的情况下，此脚本会自动安装 unzip 和 daemon。这两个组件是安装 V2Ray 的必要组件。如果你使用的系统不支持 yum 或 apt-get，请自行安装 unzip 和 daemon</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure>
<p>此脚本会自动安装以下文件：</p>
<ul>
<li><code>/usr/bin/v2ray/v2ray</code>：V2Ray 程序；</li>
<li><code>/usr/bin/v2ray/v2ctl</code>：V2Ray 工具；</li>
<li><code>/etc/v2ray/config.json</code>：配置文件；</li>
<li><code>/usr/bin/v2ray/geoip.dat</code>：IP 数据文件</li>
<li><code>/usr/bin/v2ray/geosite.dat</code>：域名数据文件</li>
</ul>
<p>此脚本会配置自动运行脚本。自动运行脚本会在系统重启之后，自动运行 V2Ray。目前自动运行脚本只支持带有 Systemd 的系统，以及 Debian / Ubuntu 全系列。</p>
<p>运行脚本位于系统的以下位置：</p>
<ul>
<li><code>/etc/systemd/system/v2ray.service</code>: Systemd</li>
<li><code>/etc/init.d/v2ray</code>: SysV</li>
</ul>
<p>脚本运行完成后，你需要：</p>
<ol>
<li>编辑 /etc/v2ray/config.json 文件来配置你需要的代理方式；</li>
<li>运行 service v2ray start 来启动 V2Ray 进程；</li>
<li>之后可以使用 service v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行。</li>
</ol>
<h4 id="配置V2ray-config文件"><a href="#配置V2ray-config文件" class="headerlink" title="配置V2ray config文件"></a>配置V2ray config文件</h4><p>编辑config.json文件，修改后删除注释。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">    "port":12345,  #v2ray端口</span><br><span class="line">      "listen": "127.0.0.1", </span><br><span class="line">      "tag": "vmess-in", </span><br><span class="line">      "protocol": "vmess", </span><br><span class="line">      "settings": &#123;</span><br><span class="line">        "clients": [</span><br><span class="line">          &#123;</span><br><span class="line">	  "id":"f56c3faf-08b3-65e2-d6b8-8bff8d292ba9",  #/usr/bin/v2ray/v2ctl uuid生成</span><br><span class="line">	  "alterId":187  #修改为任意数字(&lt;255)</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;, </span><br><span class="line">      "streamSettings": &#123;</span><br><span class="line">        "network": "ws", </span><br><span class="line">        "wsSettings": &#123;</span><br><span class="line">	  "path":"/abc123" #路径，随便填，后面要用</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ], </span><br><span class="line">  "outbounds": [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>, </span><br><span class="line">      <span class="attr">"settings"</span>: &#123; &#125;, </span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"direct"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>, </span><br><span class="line">      <span class="attr">"settings"</span>: &#123; &#125;, </span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ], </span><br><span class="line">  "routing": &#123;</span><br><span class="line">    "domainStrategy": "AsIs", </span><br><span class="line">    "rules": [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>, </span><br><span class="line">        <span class="attr">"inboundTag"</span>: [</span><br><span class="line">          <span class="string">"vmess-in"</span></span><br><span class="line">        ], </span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="配置SSL"><a href="#配置SSL" class="headerlink" title="配置SSL"></a>配置SSL</h4><p>宝塔面板新建网站，域名<code>test.domain</code>解析到VPS，开启SSL，在网站ngnix配置文件中添加</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">location /abc123 #上面的路径</span><br><span class="line">        &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">	    proxy_pass http://127.0.0.1:12345;  #v2ray端口</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection "upgrade";</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重启v2ray和nginx</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart v2ray.service</span><br><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure>
<h4 id="配置v2ray客户端"><a href="#配置v2ray客户端" class="headerlink" title="配置v2ray客户端"></a>配置v2ray客户端</h4><blockquote>
<p>地址：域名</p>
<p>端口：443</p>
<p>用户ID：UUID</p>
<p>传输协议：ws</p>
<p>路径：/abc123</p>
<p>底层传输安全：tls</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20200112172718.png" alt=""></p>
<h4 id="主页配置（可选）"><a href="#主页配置（可选）" class="headerlink" title="主页配置（可选）"></a>主页配置（可选）</h4><p>可在网站根目录下上传有趣的静态主页，例如<a href="https://github.com/xifanu/3DCEList" target="_blank" rel="noopener">元素周期表</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/chrome_2020-01-12_17-32-27.png" alt=""></p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>v2ray</tag>
      </tags>
  </entry>
  <entry>
    <title>使用宝塔面板玩转VPS</title>
    <url>/2019/12/22/%E4%BD%BF%E7%94%A8%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%8E%A9%E8%BD%ACVPS/</url>
    <content><![CDATA[<p>宝塔面板一键搭建LNMP环境以及丰富的插件，让网络运维对小白也变简单了。本文介绍在VPS使用宝塔面板实现V2ray+TLS代理，Nextcloud网盘搭建，离线下载工具Aria2及Web界面配置，rclone挂载网络云盘，GoIndex利用CDN实现国内访问谷歌云文件，以及部署Plex媒体服务器。<a id="more"></a></p>
<h3 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h3><p>本例VPS选择Debian 10 系统，访问<a href="https://www.bt.cn/" target="_blank" rel="noopener">宝塔官网</a>获得安装面板：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191222230015.png" alt=""></p>
<p>将宝塔登录信息复制下来，通过<code>ip:8888/ID</code>访问面板地址</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191222230335.png" alt=""></p>
<p>安装LMNP环境，耗时大约1个小时，PHP版本7.2，其余默认</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191222230459.png" alt=""></p>
<h3 id="搭建V2ray"><a href="#搭建V2ray" class="headerlink" title="搭建V2ray"></a>搭建V2ray</h3><h4 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h4><p>本文采用相对稳妥的方式，即V2ray + websocket + Tls 的方式搭建。首先到DNS解析域名，此处采用Cloudflare，添加一个A记录，Name填域名前缀，Content为目标VPS地址，先不走CDN转发，即保持右边云朵是灰色的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191222235452.png" alt=""></p>
<h4 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h4><p><a href="https://github.com/233boy/v2ray/wiki" target="_blank" rel="noopener">233boy大神</a>开发的易溅V2ray脚本可以很方便的搭建，脚本如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -s -L https:&#x2F;&#x2F;git.io&#x2F;v2ray.sh)</span><br></pre></td></tr></table></figure>
<p>协议选择WebSocket +TLS</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223000123.png" alt=""></p>
<p>输入刚才解析的域名</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223000247.png" alt=""></p>
<p>此处不要自动配置TLS，待会手动配置</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223000421.png" alt=""></p>
<p>将输出信息复制下来备用</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223000558.png" alt=""></p>
<h4 id="配置SSL"><a href="#配置SSL" class="headerlink" title="配置SSL"></a>配置SSL</h4><p>点击左边栏网站，添加站点，输入刚才的域名并提交</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223000851.png" alt=""></p>
<p>点击网站名，在左侧菜单选中SSL，这里我们使用Let’s Encrypt，填上邮箱并选中域名</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223001118.png" alt=""></p>
<p>选中其它证书，可将密钥及证书文件复制保存，开启强制HTTPS</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223001256.png" alt=""></p>
<p>按照<a href="https://233v2.com/post/3/" target="_blank" rel="noopener">教程</a>中的示例使用Nginx实现TLS，模板如下</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span>  <span class="number">443</span> ssl; <span class="comment"># 如果你木有添加 HTTP2 模块，请删除 http2</span></span><br><span class="line">  <span class="attribute">server_name</span>           fq.xxwu1990.tk; <span class="comment"># 将 233blog.com 修改成你的域名</span></span><br><span class="line">  <span class="attribute">ssl_certificate</span>       /www/wwwroot/fq.xxwu1990.tk/cert/fq.xxwu1990.tk.pem; <span class="comment"># 证书</span></span><br><span class="line">  <span class="attribute">ssl_certificate_key</span>   /www/wwwroot/fq.xxwu1990.tk/cert/fq.xxwu1990.tk.key; <span class="comment"># 密钥</span></span><br><span class="line">  <span class="attribute">ssl_protocols</span>         TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">ssl_ciphers</span>           HIGH:!aNULL:!MD5;</span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:31828; <span class="comment"># 2333 为 V2Ray 端口</span></span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">"upgrade"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打开左边栏配置文件，在最顶端插入以上内容，注意修改端口，以及将证书和密钥改为正确位置，可参考原配置文件。完成后删除原配置文件并重启站点，在终端输入v2ray url生成链接导入客户端即可。</p>
<h4 id="利用CDN加速"><a href="#利用CDN加速" class="headerlink" title="利用CDN加速"></a>利用CDN加速</h4><p>进入cloudflare，点亮云，使得V2ray流量全部经过CDN</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223025648.png" alt=""></p>
<p>进入SSL/TLS页面，加密方式选Full，即所有流量都走https协议。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223025822.png" alt=""></p>
<p>进入Firewall选项，可添加Firewall Rules, Tools 以及Settings选择Essentially Off来降低国内延迟。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223030023.png" alt=""></p>
<h3 id="搭建Nextcloud"><a href="#搭建Nextcloud" class="headerlink" title="搭建Nextcloud"></a>搭建Nextcloud</h3><h4 id="创建站点及数据库"><a href="#创建站点及数据库" class="headerlink" title="创建站点及数据库"></a>创建站点及数据库</h4><ul>
<li>站点名称<code>pan.xxwu1990.tk</code>（解析至VPS地址）</li>
<li>站点目录<code>/www/wwwroot/pan.xxwu1990.tk</code></li>
<li>数据库名<code>nextcloud</code></li>
<li>用户名<code>wxx</code></li>
<li>密码<code>xxxxxxx</code></li>
</ul>
<h4 id="上传Nextcloud"><a href="#上传Nextcloud" class="headerlink" title="上传Nextcloud"></a>上传Nextcloud</h4><p> 宝塔－文件－网站根目录<code>/www/wwwroot/pan.xxwu1990.tk</code>， 清空根目录；</p>
<p>从官方网站下载<a href="https://nextcloud.com/install/#instructions-server" target="_blank" rel="noopener">最新版</a>，上传至根目录，解压缩得到nextcloud目录，将目录中所有文件移动至网站根目录下，删除nextcloud空目录</p>
<h4 id="安装Nextcloud"><a href="#安装Nextcloud" class="headerlink" title="安装Nextcloud"></a>安装Nextcloud</h4><ul>
<li>浏览器访问域名　<code>pan.xxwu1990.com</code></li>
<li>创建管理员帐号　自己创建</li>
<li>数据库目录　　　不用管</li>
<li>配置数据库　　　MySQL/MariaDB</li>
<li>数据库　　　　　创建站点时创建的数据库</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223005311.png" alt=""></p>
<h4 id="安全及设置警告"><a href="#安全及设置警告" class="headerlink" title="安全及设置警告"></a>安全及设置警告</h4><p>安装完成后，点击设置-管理-概览，显示安全及设置警告。</p>
<p>一堆问题，逐条解决。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223005603.png" alt=""></p>
<p><strong>重要的先提一下：</strong> 所有关于<code>php</code>设置修改完之后，重载<code>php-fpm-70</code>服务才生效</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223005655.png" alt=""></p>
<blockquote>
<p>问题1：您的数据目录和文件可以从互联网直接访问。.htaccess 文件不起作用。强烈建议您配置 Web 服务器，以便数据目录不再可访问，或者您可以将数据目录移动到 Web 服务器文档根目录。 </p>
</blockquote>
<p>解决方法是修改nextcloud绑定的网站配置文件，添加nextcloud常用目录禁止访问即可，加入下列代码</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ &#123;</span><br><span class="line"> deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>问题2：PHP 的安装似乎不正确，无法访问系统环境变量。getenv(“PATH”) 函数测试返回了一个空值。 请参照<a href="https://docs.nextcloud.com/server/17/go.php?to=admin-php-fpm" target="_blank" rel="noopener">安装说明文档 ↗</a>中的 PHP 配置说明查阅您服务器的PHP配置信息，特别是在使用 php-fpm 时。 </p>
</blockquote>
<p> 从宝塔文件管理，打开/www/server/php/72/etc/php-fpm.conf，在其尾部添加一行 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">env[PATH] &#x3D; &#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;bin:&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;php&#x2F;bin</span><br></pre></td></tr></table></figure>
<p> 保存并重启PHP即可解决该问题。 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223010303.png" alt=""></p>
<h5 id=""><a href="#" class="headerlink" title=" "></a> </h5><blockquote>
<p> 问题3: PHP 内存限制低于建议值 512MB。</p>
</blockquote>
<p>PHP管理-配置修改-memory_limit，修改为512M</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223010516.png" alt=""></p>
<blockquote>
<p>问题4: 所使用的数据库为MySQL但没有对4字节字符的支持。为正确处理文件名或评论中使用的4字节字符（比如emoji表情），建议开启MySQL的4字节字符支持。 </p>
</blockquote>
<p><strong>修改MySQL配置文件，这里以MySQL 5.5 为例</strong></p>
<p>在 <code>[mysqld]</code> 配置段里加入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">innodb_large_prefix&#x3D;true</span><br><span class="line">innodb_file_format&#x3D;barracuda</span><br><span class="line">innodb_file_per_table&#x3D;1</span><br></pre></td></tr></table></figure>
<p><strong>保存后重启MySQL</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223011226.png" alt=""></p>
<p> <strong>修改nextcloud的数据库的字符集和排序规则</strong> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE nextcloud所在的数据库名称 CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;</span><br></pre></td></tr></table></figure>
<p>可以在shell下使用mysql执行上述SQL命令，也可以用phpmyadmin执行</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223011538.png" alt=""></p>
<p> <strong>修改nextcloud配置文件config.php</strong> </p>
<p>将 <code>utf8mb4</code> 值改为 <code>true</code></p>
<p>官方给出的方法是使用occ命令，当然也可以直接修改config.php</p>
<p>occ命令：<strong>需要在nextcloud的安装根目录下执行</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo -u www php occ config:system:set mysql.utf8mb4 --type boolean --value="true"</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223011807.png" alt=""></p>
<p>直接修改</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223011920.png" alt=""></p>
<p><strong>修复数据库</strong></p>
<p>同样是occ命令，<strong>需要在nextcloud的安装根目录下执行</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -u www php occ maintenance:repair</span><br></pre></td></tr></table></figure>
<p> 完成上述操作后，即可修复该告警 </p>
<blockquote>
<p>问题5: 通过 HTTP 访问网站不安全。强烈建议您将服务器设置成要求使用HTTPS 协议 </p>
</blockquote>
<p>配置<code>nextcloud</code>的SSL，参考上一小节。</p>
<blockquote>
<p>问题6:  您的网页服务器未正确设置以解析“/.well-known/caldav”。 </p>
<p> 您的网页服务器未正确设置以解析“/.well-known/carddav”。 </p>
</blockquote>
<p>这两个警告可以一起解决，出现该提示一般是因为这两个路径的伪静态设置有问题，导致无法正常访问。<br>解决方法就是站点配置文件添加两行重定向配置 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rewrite &#x2F;.well-known&#x2F;carddav &#x2F;remote.php&#x2F;dav permanent;</span><br><span class="line">rewrite &#x2F;.well-known&#x2F;caldav &#x2F;remote.php&#x2F;dav permanent;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223012628.png" alt=""></p>
<blockquote>
<p>问题7: 未找到 PHP 的 “fileinfo” 模块。强烈推荐启用该模块，从而获得更好的 MIME 类型探测结果。 </p>
</blockquote>
<p>因为php环境默认是没有安装fileinfo这个扩展模块的，所以需要手动去宝塔PHP管理选项中安装fileinfo扩展。 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223012857.png" alt=""></p>
<p>为防止内存过小装不上，使用宝塔工具安装虚拟内存</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223013028.png" alt=""></p>
<blockquote>
<p>问题8 :内存缓存未配置，为了提升使用体验，请尽量配置内存缓存。更多信息请参见文档。 </p>
</blockquote>
<p>安装php的Memcached和apcu模块（注意是memcached，非memcache），我选的是Memcached和apcu </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/Memcached.png" alt=""></p>
<p>编译安装完毕之后，从宝塔面板打开/www/wwwroot/你的域名/config/config.php，手动给nextcloud的配置文件中添加一行设置，指定使用APCu作为缓存</p>
<p>第1行为指定本地缓存为APCu，第2、3行为指定分布式缓存为Memcached</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;memcache.local&#39; &#x3D;&gt; &#39;\\OC\\Memcache\\APCu&#39;,</span><br><span class="line">&#39;memcache.distributed&#39; &#x3D;&gt; &#39;\\OC\\Memcache\\Memcached&#39;,</span><br><span class="line">&#39;memcached_servers&#39; &#x3D;&gt; </span><br><span class="line">array (</span><br><span class="line">0 &#x3D;&gt; </span><br><span class="line">array (</span><br><span class="line">0 &#x3D;&gt; &#39;localhost&#39;,</span><br><span class="line">1 &#x3D;&gt; 11211,</span><br><span class="line">),</span><br><span class="line">),</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223013444.png" alt=""></p>
<blockquote>
<p>问题9: PHP 的 OPcache 模块未载入。推荐开启获得更好的性能。 </p>
</blockquote>
<p> 安装php的opcache扩展模块， 并在配置文件中改为下图的参数 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">opcache.enable&#x3D;1</span><br><span class="line">opcache.enable_cli&#x3D;1</span><br><span class="line">opcache.interned_strings_buffer&#x3D;8</span><br><span class="line">opcache.max_accelerated_files&#x3D;10000</span><br><span class="line">opcache.memory_consumption&#x3D;128</span><br><span class="line">opcache.save_comments&#x3D;1</span><br><span class="line">opcache.revalidate_freq&#x3D;1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>问题10: 该实例缺失了一些推荐的 PHP 模块。为提高性能和兼容性，我们强烈建议安装它们。<code>imagick</code></p>
</blockquote>
<p> 安装php的imagemagick扩展模块 </p>
<blockquote>
<p>问题11: 数据库中的一些列由于进行长整型转换而缺失。由于在较大的数据表重改变列类型会耗费一些时间，因此程序没有自动对其更改。您可以通过<a href="https://www.chyiyang.cn/tag/mingling/" target="_blank" rel="noopener">命令</a>行手动执行 “occ db:convert-filecache-bigint” 命令以应用挂起的更改。该操作需要当整个实例变为离线状态后执行。查阅相关文档以获得更多详情。 </p>
</blockquote>
<p>通过SSH登录到服务器的命令模式下，并cd到站点目录下，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -u www php occ db:convert-filecache-bigint</span><br></pre></td></tr></table></figure>
<p>程序会询问是否继续执行这项操作，可能需要几个小时，具体取决于文件数量！输入y，回车，继续转换~</p>
<p>程序会在后台自动转换，不用担心</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20190507044041204.png" alt=""></p>
<blockquote>
<p>问题12: HTTP的请求头 “Strict-Transport-Security” 未设置为至少 “15552000” 秒。为了提高安全性，建议参照<a href="https://docs.nextcloud.com/server/17/go.php?to=admin-security" target="_blank" rel="noopener">security tips ↗</a>中的说明启用HSTS。 </p>
</blockquote>
<p> 解决方法还是修改nextcloud绑定的网站配置文件，添加一行header信息 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">add_header Strict-Transport-Security &quot;max-age&#x3D;63072000;&quot;;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223015727.png" alt=""></p>
<h4 id="多域名访问Nextcloud"><a href="#多域名访问Nextcloud" class="headerlink" title="多域名访问Nextcloud"></a>多域名访问Nextcloud</h4><p>两个域名解析到同一IP</p>
<ul>
<li><code>pan.xxwu1990.tk</code>: CDN加速，已建站点</li>
<li><code>pan.61xiao.tk</code>: 直接解析，尚未建站</li>
</ul>
<p>新建站点，域名为<code>pan.61xiao.tk</code>根目录选择<code>pan.xxwu1990.tk</code>根目录即可，其余配置相同。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223040250.png" alt=""></p>
<p>打开Nextcloud的<code>config/config.php</code>文件，将<code>pan.61xiao.tk</code>加入信任域名</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223041114.png" alt=""></p>
<h3 id="搭建离线下载Aria2"><a href="#搭建离线下载Aria2" class="headerlink" title="搭建离线下载Aria2"></a>搭建离线下载Aria2</h3><h4 id="一键脚本-1"><a href="#一键脚本-1" class="headerlink" title="一键脚本"></a>一键脚本</h4><h5 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h5><p> <a href="https://github.com/P3TERX/aria2.sh" target="_blank" rel="noopener">https://github.com/P3TERX/aria2.sh</a> </p>
<h5 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h5><p>执行下面的代码下载并运行脚本，出现脚本操作菜单输入 <code>1</code> 开始安装。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -N git.io&#x2F;aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; .&#x2F;aria2.sh</span><br></pre></td></tr></table></figure>
<h5 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h5><ul>
<li><p>进入下载脚本的目录并运行脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;aria2.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>选择你要执行的选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Aria2 一键安装管理脚本 [v2.0.8]</span><br><span class="line">-- P3TERX.COM --</span><br><span class="line"></span><br><span class="line">1. 升级脚本</span><br><span class="line">————————————</span><br><span class="line">1. 安装 Aria2</span><br><span class="line">2. 更新 Aria2</span><br><span class="line">3. 卸载 Aria2</span><br><span class="line">————————————</span><br><span class="line">4. 启动 Aria2</span><br><span class="line">5. 停止 Aria2</span><br><span class="line">6. 重启 Aria2</span><br><span class="line">————————————</span><br><span class="line">7. 修改 配置</span><br><span class="line">8. 查看 配置</span><br><span class="line">9. 查看 日志</span><br><span class="line">10. 清空 日志</span><br><span class="line">————————————</span><br><span class="line">11. 手动更新 BT-Tracker</span><br><span class="line">12. 自动更新 BT-Tracker</span><br><span class="line">————————————</span><br><span class="line"></span><br><span class="line">当前状态: 已安装 并 已启动</span><br><span class="line"></span><br><span class="line">请输入数字 [0-12]:</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h5><p>启动：<code>/etc/init.d/aria2 start</code></p>
<p>停止：<code>/etc/init.d/aria2 stop</code></p>
<p>重启：<code>/etc/init.d/aria2 restart</code></p>
<p>查看状态：<code>/etc/init.d/aria2 status</code></p>
<p>配置文件：<code>/root/.aria2/aria2.conf</code> （配置文件包含中文注释，但是一些系统可能不支持显示中文）</p>
<p>令牌密匙：随机生成（可以自己修改 7. 修改 配置文件）</p>
<p>默认下载目录：<code>/root/Download</code></p>
<h5 id="附加功能"><a href="#附加功能" class="headerlink" title="附加功能"></a>附加功能</h5><p>整合了 <a href="https://github.com/P3TERX/aria2_perfect_config" target="_blank" rel="noopener">Aria2 完美配置</a>，在安装 Aria2 的过程中会下载这套配置方案，包含了配置文件、附加功能脚本等文件，用于实现 Aria2 功能的增强和扩展。</p>
<p>增强功能：</p>
<ul>
<li>提升BT下载率和下载速度</li>
<li>下载完成删除残留的<code>.aria2</code>后缀名文件</li>
<li>下载错误或取消下载删除未完成的文件</li>
</ul>
<p>扩展功能：</p>
<ul>
<li><a href="https://p3terx.com/archives/offline-download-of-onedrive-gdrive.html" target="_blank" rel="noopener">OneDrive、Google Drive 等网盘离线下载</a></li>
<li><a href="https://p3terx.com/archives/baidunetdisk-transfer-to-onedrive-and-google-drive.html" target="_blank" rel="noopener">百度网盘转存到 OneDrive 、Google Drive 等其他网盘</a></li>
</ul>
<h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p>打开配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">vim .aria2/aria2.conf</span><br></pre></td></tr></table></figure>
<p>分别修改</p>
<blockquote>
<p>rpc-secret # 设置的RPC授权令牌</p>
<p>rpc-secure=true    # 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接</p>
<p>rpc-certificate=    # 在 RPC 服务中启用 SSL/TLS 加密时的证书文件(.pem/.crt)</p>
<p>rpc-private-key=    # # 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件(.key)</p>
<p>dir=    # 文件的保存路径(可使用绝对路径或相对路径)</p>
<p>listen-port= # 监听端口，避免和Transmission冲突</p>
</blockquote>
<p>修改完成后重启aria</p>
<h4 id="配置网页客户端"><a href="#配置网页客户端" class="headerlink" title="配置网页客户端"></a>配置网页客户端</h4><p>新建站点<code>aria.61xiao.tk</code>，按照前面所讲的配置SSL证书，将证书和密钥路径填入<code>~/.aria/aria.config</code>文件。</p>
<p>下载<a href="https://github.com/mayswind/AriaNg/releases" target="_blank" rel="noopener">AriaNG</a>，将index.html文件上传至网站根目录替换。登录网址，选择AriaNg设置-RPC，填入密钥并将协议修改为Https，刷新页面后显示已连接则表示配置成功。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223022308.png" alt=""></p>
<h4 id="Nextcloud挂载离线下载文件夹"><a href="#Nextcloud挂载离线下载文件夹" class="headerlink" title="Nextcloud挂载离线下载文件夹"></a>Nextcloud挂载离线下载文件夹</h4><p><strong>注意：离线下载文件夹（配置文件中的dir）最好位于网页根目录里，以免出现权限问题</strong></p>
<p>登录Nextcloud，选择<code>应用-已禁用的应用-External storage support</code>启用，授权密码为登录密码。在<code>设置-管理</code>中便可看到外部储存。外部储存选择本地，配置填入Aria下载路径，确定即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223023200.png" alt=""></p>
<h3 id="使用rclone挂载Google-Drive"><a href="#使用rclone挂载Google-Drive" class="headerlink" title="使用rclone挂载Google Drive"></a>使用rclone挂载Google Drive</h3><p>转自<a href="https://www.moerats.com/archives/877/" target="_blank" rel="noopener">Rat’s Blog</a></p>
<h4 id="挂载方法"><a href="#挂载方法" class="headerlink" title="挂载方法"></a>挂载方法</h4><p> <strong>说明：</strong>我们很多人喜欢用<code>VPS</code>做离线下载，不过由于有的服务器硬盘太小了，装不了太多电影资源啥的，我们就需要想办法了，之前说过可以通过挂载<code>FTP</code>来增大空间，参考：<a href="https://www.moerats.com/archives/424/" target="_blank" rel="noopener">Linux VPS通过安装CurlFtpFS来挂载FTP</a>，这里再说个挂载<code>Google Drive</code>网盘的方法，毕竟<code>Google Drive</code>有<code>15G</code>免费的空间，有的也有无限空间，都可以利用上去。 </p>
<h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><p>本教程只适用<code>Debian</code>/<code>Ubuntu</code>系统，如果你是<code>CentOS</code>或者其它<code>Linux</code>系统，请使用以下命令安装<code>rclone</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl https:&#x2F;&#x2F;rclone.org&#x2F;install.sh | sudo bash</span><br></pre></td></tr></table></figure>
<p>初始化配置和挂载方法和下面一样，开机自启可参考该教程→<a href="https://www.moerats.com/archives/870/" target="_blank" rel="noopener">传送门</a>。</p>
<p>安装</p>
<p><strong>1、安装rclone</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;www.moerats.com&#x2F;usr&#x2F;shell&#x2F;rclone_debian.sh &amp;&amp; bash rclone_debian.sh</span><br></pre></td></tr></table></figure>
<p><strong>2、初始化配置</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure>
<p>会出现以下信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n) New remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">n&#x2F;s&#x2F;q&gt; n</span><br><span class="line">name&gt; Rats  #配置名称，随便填</span><br><span class="line">Type of storage to configure.</span><br><span class="line">Enter a string value. Press Enter for the default (&quot;&quot;).</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 &#x2F; 1Fichier</span><br><span class="line">   \ &quot;fichier&quot;</span><br><span class="line"> 2 &#x2F; Alias for an existing remote</span><br><span class="line">   \ &quot;alias&quot;</span><br><span class="line"> 3 &#x2F; Amazon Drive</span><br><span class="line">   \ &quot;amazon cloud drive&quot;</span><br><span class="line"> 4 &#x2F; Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class="line">   \ &quot;s3&quot;</span><br><span class="line"> 5 &#x2F; Backblaze B2</span><br><span class="line">   \ &quot;b2&quot;</span><br><span class="line"> 6 &#x2F; Box</span><br><span class="line">   \ &quot;box&quot;</span><br><span class="line"> 7 &#x2F; Cache a remote</span><br><span class="line">   \ &quot;cache&quot;</span><br><span class="line"> 8 &#x2F; Dropbox</span><br><span class="line">   \ &quot;dropbox&quot;</span><br><span class="line"> 9 &#x2F; Encrypt&#x2F;Decrypt a remote</span><br><span class="line">   \ &quot;crypt&quot;</span><br><span class="line">10 &#x2F; FTP Connection</span><br><span class="line">   \ &quot;ftp&quot;</span><br><span class="line">11 &#x2F; Google Cloud Storage (this is not Google Drive)</span><br><span class="line">   \ &quot;google cloud storage&quot;</span><br><span class="line">12 &#x2F; Google Drive</span><br><span class="line">   \ &quot;drive&quot;</span><br><span class="line">13 &#x2F; Google Photos</span><br><span class="line">   \ &quot;google photos&quot;</span><br><span class="line">14 &#x2F; Hubic</span><br><span class="line">   \ &quot;hubic&quot;</span><br><span class="line">15 &#x2F; JottaCloud</span><br><span class="line">   \ &quot;jottacloud&quot;</span><br><span class="line">16 &#x2F; Koofr</span><br><span class="line">   \ &quot;koofr&quot;</span><br><span class="line">17 &#x2F; Local Disk</span><br><span class="line">   \ &quot;local&quot;</span><br><span class="line">18 &#x2F; Mega</span><br><span class="line">   \ &quot;mega&quot;</span><br><span class="line">19 &#x2F; Microsoft Azure Blob Storage</span><br><span class="line">   \ &quot;azureblob&quot;</span><br><span class="line">20 &#x2F; Microsoft OneDrive</span><br><span class="line">   \ &quot;onedrive&quot;</span><br><span class="line">21 &#x2F; OpenDrive</span><br><span class="line">   \ &quot;opendrive&quot;</span><br><span class="line">22 &#x2F; Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ &quot;swift&quot;</span><br><span class="line">23 &#x2F; Pcloud</span><br><span class="line">   \ &quot;pcloud&quot;</span><br><span class="line">24 &#x2F; Put.io</span><br><span class="line">   \ &quot;putio&quot;</span><br><span class="line">25 &#x2F; QingCloud Object Storage</span><br><span class="line">   \ &quot;qingstor&quot;</span><br><span class="line">26 &#x2F; SSH&#x2F;SFTP Connection</span><br><span class="line">   \ &quot;sftp&quot;</span><br><span class="line">27 &#x2F; Union merges the contents of several remotes</span><br><span class="line">   \ &quot;union&quot;</span><br><span class="line">28 &#x2F; Webdav</span><br><span class="line">   \ &quot;webdav&quot;</span><br><span class="line">29 &#x2F; Yandex Disk</span><br><span class="line">   \ &quot;yandex&quot;</span><br><span class="line">30 &#x2F; http Connection</span><br><span class="line">   \ &quot;http&quot;</span><br><span class="line">31 &#x2F; premiumize.me</span><br><span class="line">   \ &quot;premiumizeme&quot;</span><br><span class="line">Storage&gt; 12  #选择12，Google Drive</span><br><span class="line">Google Application Client Id - leave blank normally.</span><br><span class="line">client_id&gt;  #留空 </span><br><span class="line">Google Application Client Secret - leave blank normally.</span><br><span class="line">client_secret&gt;  #留空</span><br><span class="line">Service Account Credentials JSON file path - needed only if you want use SA instead of interactive login.</span><br><span class="line">service_account_file&gt;  #留空</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 &#x2F; Full access all files, excluding Application Data Folder.</span><br><span class="line">   \ &quot;drive&quot;</span><br><span class="line"> 2 &#x2F; Read-only access to file metadata and file contents.</span><br><span class="line">   \ &quot;drive.readonly&quot;</span><br><span class="line">   &#x2F; Access to files created by rclone only.</span><br><span class="line"> 3 | These are visible in the drive website.</span><br><span class="line">   | File authorization is revoked when the user deauthorizes the app.</span><br><span class="line">   \ &quot;drive.file&quot;</span><br><span class="line">   &#x2F; Allows read and write access to the Application Data folder.</span><br><span class="line"> 4 | This is not visible in the drive website.</span><br><span class="line">   \ &quot;drive.appfolder&quot;</span><br><span class="line">   &#x2F; Allows read-only access to file metadata but</span><br><span class="line"> 5 | does not allow any access to read or download file content.</span><br><span class="line">   \ &quot;drive.metadata.readonly&quot;</span><br><span class="line">scope&gt; 1 </span><br><span class="line">ID of the root folder</span><br><span class="line">Leave blank normally.</span><br><span class="line">Fill in to access &quot;Computers&quot; folders. (see docs).</span><br><span class="line">Enter a string value. Press Enter for the default (&quot;&quot;).</span><br><span class="line">root_folder_id&gt; </span><br><span class="line">Service Account Credentials JSON file path </span><br><span class="line">Leave blank normally.</span><br><span class="line">Needed only if you want use SA instead of interactive login.</span><br><span class="line">Enter a string value. Press Enter for the default (&quot;&quot;).</span><br><span class="line">service_account_file&gt; </span><br><span class="line">Edit advanced config? (y&#x2F;n)</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y&#x2F;n&gt; n  #输入n</span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y if not sure</span><br><span class="line"> * Say N if you are working on a remote or headless machine</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y&#x2F;n&gt; n  #输入n</span><br><span class="line">If your browser doesn&#39;t open automatically go to the following link: https:&#x2F;&#x2F;accounts.google.com&#x2F;o&#x2F;  #打开该地址获取code</span><br><span class="line">Log in and authorize rclone for access</span><br><span class="line">Enter verification code&gt;hjdd  #输入你获取到的code</span><br><span class="line">Configure this as a team drive?</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y&#x2F;n&gt; n  #输入n</span><br><span class="line">--------------------</span><br><span class="line">[Rats]</span><br><span class="line">type &#x3D; drive</span><br><span class="line">client_id &#x3D; 85042871</span><br><span class="line">client_secret &#x3D; D72gPc</span><br><span class="line">scope &#x3D; drive</span><br><span class="line">token &#x3D; &#123;&quot;access_token&quot;:&quot;y902Z&quot;&#125;</span><br><span class="line">--------------------</span><br><span class="line">y) Yes this is OK</span><br><span class="line">e) Edit this remote</span><br><span class="line">d) Delete this remote</span><br><span class="line">y&#x2F;e&#x2F;d&gt; y  #输入y</span><br><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 Type</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;                 &#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Rats                 drive</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e&#x2F;n&#x2F;d&#x2F;r&#x2F;c&#x2F;s&#x2F;q&gt; q  #输入q保存退出</span><br></pre></td></tr></table></figure>
<p><strong>3、挂载为磁盘</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#新建本地文件夹，路径自己定，即下面的LocalFolder</span><br><span class="line">mkdir &#x2F;root&#x2F;GoogleDrive</span><br><span class="line">#挂载为磁盘，下面的DriveName、Folder、LocalFolder参数根据说明自行替换</span><br><span class="line">rclone mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000</span><br></pre></td></tr></table></figure>
<p><code>DriveName</code>为初始化配置填的<code>name</code>，<code>Folder</code>为<code>Google Drive</code>里的文件夹，<code>LocalFolder</code>为<code>VPS</code>上的本地文件夹。</p>
<p>挂载成功后，输入<code>df -h</code>命令查看即可！</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/asdasdsaqeopfewg%20.png" alt=""></p>
<p><strong>4、卸载磁盘</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fusermount -qzu LocalFolder</span><br></pre></td></tr></table></figure>
<h5 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h5><p>先新建<code>systemd</code>配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<p>再使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#将后面修改成你上面手动运行命令中，除了rclone的全部参数</span><br><span class="line">command&#x3D;&quot;mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000&quot;</span><br><span class="line">localfolder &#x3D; LocalFolder</span><br><span class="line">#以下是一整条命令，一起复制到SSH客户端运行</span><br><span class="line">cat &gt; &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;rclone.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Rclone</span><br><span class="line">After&#x3D;network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;simple</span><br><span class="line">ExecStart&#x3D;$(command -v rclone) $&#123;command&#125;</span><br><span class="line">ExecStop&#x3D;&#x2F;bin&#x2F;fusermount -uz $&#123;localfolder&#125;</span><br><span class="line">Restart&#x3D;on-abort</span><br><span class="line">User&#x3D;root</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;default.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>开始启动：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start rclone</span><br></pre></td></tr></table></figure>
<p>设置开机自启：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable rclone</span><br></pre></td></tr></table></figure>
<p>其他命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">重启：systemctl restart rclone</span><br><span class="line">停止：systemctl stop rclone</span><br><span class="line">状态：systemctl status rclone</span><br></pre></td></tr></table></figure>
<p>如果你想挂载多个网盘，那么将<code>systemd</code>配置文件的<code>rclone.service</code>改成<code>rclone1.service</code>即可，重启动什么的同样换成<code>rclone1</code>。</p>
<h4 id="使用个人凭据"><a href="#使用个人凭据" class="headerlink" title="使用个人凭据"></a>使用个人凭据</h4><p> <strong>说明：</strong>之前看到有些人评论使用<code>Rclone</code>挂载<code>Gdrive</code>时，会出现部分文件上传失败和挂载崩掉等问题，后者在挂载<code>OneDrive</code>时也会出现，所以这里就专门花了点时间测试了下这些问题，然后就水个解决方法。一般挂载<code>Gdrive</code>的时候，默认是使用的官方提供的<code>api</code>，所以高峰期上传文件的时候，由于很多人在用，导致<code>api</code>的流量上限，会出现各种<code>403</code>，<code>ratelimit</code>等错误，最常见的报错提示为：<code>Failed to get file: googleapi: Error 403: Rate Limit Exceeded, rateLimitExceeded</code>，然后目前的解决方法就是使用自己的<code>api</code>。至于挂载崩掉的问题是可以通过调整部分参数来解决，这里就都一起说下。 </p>
<p><strong>方法：</strong></p>
<p>首先获取谷歌<code>API</code>凭据，获取方法在之前很多文章都提过，这里就直接复制粘贴了，先启用<code>Google Drive API</code>，启用地址：<a href="https://console.developers.google.com/apis/api/drive.googleapis.com/overview" target="_blank" rel="noopener">点击进入</a>。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/plexdrive%281%29.png" alt=""></p>
<p>再创建一个<code>OAuth client ID</code>，创建地址：<a href="https://console.developers.google.com/apis/credentials/oauthclient" target="_blank" rel="noopener">点击进入</a>。应用类型选择其他(<code>Other</code>)，名称自己填，这里博主填的<code>Rclone</code>。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/plexdrive%284%29.png" alt=""></p>
<p>然后你会获得自己的客户端<code>ID</code>和客户端密钥，再复制下来。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/plexdrive%283%29.png" alt=""></p>
<p>然后使用<code>rclone config</code>命令配置的时候，会有部分提示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#直接将你获取到的客户端id和密匙输进去即可</span><br><span class="line">Google Application Client Id</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter for the default (&quot;&quot;).</span><br><span class="line">client_id&gt; #输入客户端id</span><br><span class="line">Google Application Client Secret</span><br><span class="line">Leave blank normally.</span><br><span class="line">Enter a string value. Press Enter for the default (&quot;&quot;).</span><br><span class="line">client_secret&gt; #输入客户端密匙</span><br></pre></td></tr></table></figure>
<p>最后打开配置时的链接授权时候，就会显示我们自己设置的应用名称。</p>
<p>然后挂载命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#该参数主要是上传用的</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;rclone mount DriveName:Folder LocalFolder \</span><br><span class="line"> --umask 0000 \</span><br><span class="line"> --default-permissions \</span><br><span class="line"> --allow-non-empty \</span><br><span class="line"> --allow-other \</span><br><span class="line"> --transfers 4 \</span><br><span class="line"> --buffer-size 32M \</span><br><span class="line"> --low-level-retries 200</span><br><span class="line"></span><br><span class="line">#如果你还涉及到读取使用，比如使用H5ai等在线播放，就还建议加3个参数，添加格式参考上面</span><br><span class="line">--dir-cache-time 12h</span><br><span class="line">--vfs-read-chunk-size 32M</span><br><span class="line">--vfs-read-chunk-size-limit 1G</span><br></pre></td></tr></table></figure>
<p>主要参数这里大概说下，具体自己根据<code>vps</code>配置进行调整。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--transfers：该参数控制最大同时传输任务数量，如果你cpu性能差，建议调低，但太低可能会影响多个文件同时传输的速度。</span><br><span class="line">--buffer-size：该参数为读取每个文件时的内存缓冲区大小，控制rclone上传和挂载的时候的内存占用，调低点可以防止内存占用过高而崩溃，但太低可能会影响部分文件的传输速度。</span><br><span class="line">--low-level-retries：该参数为传输文件没速度的时候重试次数，没速度的时候，单个会自动睡眠10ms起，然后再重试，不行，再睡眠更长一段时间，再重试，这样可以稍微加快文件上传进度。</span><br></pre></td></tr></table></figure>
<p>如果你还不会使用<code>rclone</code>挂载，或者不会设置开机自启的，可以参考该篇文章的部分内容→<a href="https://www.moerats.com/archives/870/" target="_blank" rel="noopener">传送门</a></p>
<p>最后博主使用了自己的<code>api</code>后，上传测试了<code>700G</code>上限，基本一次也没出过<code>403</code>等一些问题了，内存占用也还不高，不过限制了些参数后，体验肯定会差点。至于<code>Onedrive</code>，博主也测试了下，貌似还没遇到上传问题，可能是使用<code>rclone</code>挂载的人数没<code>gdrive</code>多吧，至于其他问题也可以参考下本文设置。</p>
<h4 id="挂载TeamDrive"><a href="#挂载TeamDrive" class="headerlink" title="挂载TeamDrive"></a>挂载TeamDrive</h4><p>在Nextcloud外部储存中选中允许用户挂载外部存储，填入GoogleDrive挂载的本地路径</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223024848.png" alt=""></p>
<h4 id="修改Aria自动上传脚本"><a href="#修改Aria自动上传脚本" class="headerlink" title="修改Aria自动上传脚本"></a>修改Aria自动上传脚本</h4><p>打开<code>.aria/autoupload.sh</code>，修改下载路径，配置rclone时填写的name，Google网盘中的文件夹，上传失败重试次数</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223025244.png" alt=""></p>
<h3 id="搭建Plex服务"><a href="#搭建Plex服务" class="headerlink" title="搭建Plex服务"></a>搭建Plex服务</h3><h4 id="GoIndex-CDN生成GoogleDrive外链"><a href="#GoIndex-CDN生成GoogleDrive外链" class="headerlink" title="GoIndex+CDN生成GoogleDrive外链"></a>GoIndex+CDN生成GoogleDrive外链</h4><p>转自<a href="https://www.moerats.com/archives/1001/" target="_blank" rel="noopener">GoIndex：一个无需服务器的Google Drive目录索引程序</a></p>
<p><strong>说明：</strong><code>GoIndex</code>是一款部署在<code>Cloudflare Workers</code>的<code>Google Drive</code>目录索引程序，无需提供服务器，可以直接列出你谷歌网盘的所有文件，同时下载和访问也不需要挂梯子，也可以在线观看某些格式的视频文件，拿来玩玩也是可以的。</p>
<h5 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h5><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%2811%29.png" alt=""></p>
<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p><strong>Github地址：</strong><a href="https://github.com/donwa/goindex" target="_blank" rel="noopener">https://github.com/donwa/goindex</a></p>
<p>首先肯定是需要一个谷歌网盘的，个人的话容量有点小，如果想容量大的，可以免费申请一个无限容量的<code>Google Drive</code>网盘，申请方法查看→<a href="https://www.moerats.com/archives/879" target="_blank" rel="noopener">传送门</a>。</p>
<p>这里直接使用作者提供的快速部署方法，由于使用的是<code>rclone</code>的<code>google api</code>，高峰期难免会出现点问题，后面也会说下使用自己的<code>api</code>部署方法。</p>
<p><strong>1、获取Workers代码</strong><br>先访问：<a href="https://installen.gd.workers.dev/，点击`GET" target="_blank" rel="noopener">https://installen.gd.workers.dev/，点击`GET</a> AUTH CODE<code>，验证你的谷歌账号获取</code>Auth code`。</p>
<p>然后开始输入你的<code>Auth code</code>，其它可以先默认，然后点击<code>BUILD</code>获取你的代码。</p>
<p>开头的相关参数，可自行修改：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#站点名称</span><br><span class="line">&quot;siteName&quot;: &quot;GoIndex&quot;,</span><br><span class="line">#根目录访问密码，如不设置留空即可</span><br><span class="line">&quot;root_pass&quot;: &quot;moerats&quot;,</span><br><span class="line">#根目录ID，默认整个网盘文件夹，如果只想列出根目录某个文件夹，那么填入该文件夹ID即可。</span><br><span class="line">&quot;root&quot;: &quot;root&quot;</span><br></pre></td></tr></table></figure>
<p>文件夹<code>ID</code>获取方法，点击根目录某个文件夹，地址栏为：<code>https://drive.google.com/drive/folders/1C4Aro</code>，则<code>1C4Aro</code>为文件夹<code>ID</code>。</p>
<p><strong>2、部署到Workers</strong></p>
<p>首先登录<code>cloudflare</code>，官网→<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">传送门</a>，然后首页右侧可以看到<code>Workers</code>入口。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%281%29.png" alt=""></p>
<p>点进去后新建一个<code>Workers</code>子域名，也就是你的专属域名，填入确认后就更改不了了，所以别乱填。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%282%29.png" alt=""><br>接下来点击<code>Create a Worker</code>创建一个<code>Worker</code>。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%283%29.png" alt=""><br>把你之前获取的<code>Workers</code>代码粘贴进去，然后可以在左上角双击修改域名，再点击<code>Save and Deploy</code>即可。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%284%29.png" alt=""><br>最后打开分配的子域名即可，此后修改配置可以自行修改<code>Workers</code>代码。</p>
<h5 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h5><p>如果想绑定自己的域名，就需要先将自己的域名转到<code>cloudflare</code>，然后点自己的域名，解析一个<code>A</code>记录，<code>IP</code>地址随意。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%285%29.png" alt=""><br>然后在上方找到<code>Workers</code>，选择后，点击页面下的<code>Add route</code>，进行如下设置。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%286%29.png" alt=""><br>按照图中的格式，填上自己的域名，并选择对应的<code>Workers</code>程序即可。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%287%29.png" alt=""></p>
<h5 id="API部署"><a href="#API部署" class="headerlink" title="API部署"></a>API部署</h5><p>这里也可以使用自己的<code>API</code>部署，好处就是安全点，高峰期也不容易爆炸，当然安装会麻烦点，如果不经常使用的话，还是建议用上面的方法快速部署。</p>
<p><strong>1、获取GDrive客户端</strong><br>先启用<code>Google Drive API</code>，启用地址：<a href="https://console.developers.google.com/apis/api/drive.googleapis.com/overview" target="_blank" rel="noopener">点击进入</a>，注意这里使用个人账号操作。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%288%29.png" alt=""><br>再创建一个<code>OAuth client ID</code>，创建地址：<a href="https://console.developers.google.com/apis/credentials/oauthclient" target="_blank" rel="noopener">点击进入</a>。应用类型选择其他(<code>Other</code>)，名称自己填，这里博主填的<code>GoIndex</code>。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%289%29.png" alt=""><br>然后你会获得自己的客户端<code>ID</code>和客户端密钥，再复制下来。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cfwk%2810%29.png" alt=""></p>
<p><strong>2、获取refresh_token</strong><br>这里使用<code>Rclone</code>来获取<code>refresh_token</code>，先登录<code>VPS</code>，先安装依赖，使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#CentOS系统</span><br><span class="line">yum install p7zip unzip -y</span><br><span class="line">#Debian&#x2F;Ubuntu系统</span><br><span class="line">apt install -y p7zip-full</span><br></pre></td></tr></table></figure>
<p>再安装<code>Rclone</code>，使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl https:&#x2F;&#x2F;rclone.org&#x2F;install.sh | bash</span><br></pre></td></tr></table></figure>
<p>开始配置，使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure>
<p>会出现以下信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n) New remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">n&#x2F;s&#x2F;q&gt; n</span><br><span class="line">name&gt; Rats  #配置名称，随便填</span><br><span class="line">Type of storage to configure.</span><br><span class="line">Enter a string value. Press Enter for the default (&quot;&quot;).</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 &#x2F; 1Fichier</span><br><span class="line">   \ &quot;fichier&quot;</span><br><span class="line"> 2 &#x2F; Alias for an existing remote</span><br><span class="line">   \ &quot;alias&quot;</span><br><span class="line"> 3 &#x2F; Amazon Drive</span><br><span class="line">   \ &quot;amazon cloud drive&quot;</span><br><span class="line"> 4 &#x2F; Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class="line">   \ &quot;s3&quot;</span><br><span class="line"> 5 &#x2F; Backblaze B2</span><br><span class="line">   \ &quot;b2&quot;</span><br><span class="line"> 6 &#x2F; Box</span><br><span class="line">   \ &quot;box&quot;</span><br><span class="line"> 7 &#x2F; Cache a remote</span><br><span class="line">   \ &quot;cache&quot;</span><br><span class="line"> 8 &#x2F; Dropbox</span><br><span class="line">   \ &quot;dropbox&quot;</span><br><span class="line"> 9 &#x2F; Encrypt&#x2F;Decrypt a remote</span><br><span class="line">   \ &quot;crypt&quot;</span><br><span class="line">10 &#x2F; FTP Connection</span><br><span class="line">   \ &quot;ftp&quot;</span><br><span class="line">11 &#x2F; Google Cloud Storage (this is not Google Drive)</span><br><span class="line">   \ &quot;google cloud storage&quot;</span><br><span class="line">12 &#x2F; Google Drive</span><br><span class="line">   \ &quot;drive&quot;</span><br><span class="line">13 &#x2F; Google Photos</span><br><span class="line">   \ &quot;google photos&quot;</span><br><span class="line">14 &#x2F; Hubic</span><br><span class="line">   \ &quot;hubic&quot;</span><br><span class="line">15 &#x2F; JottaCloud</span><br><span class="line">   \ &quot;jottacloud&quot;</span><br><span class="line">16 &#x2F; Koofr</span><br><span class="line">   \ &quot;koofr&quot;</span><br><span class="line">17 &#x2F; Local Disk</span><br><span class="line">   \ &quot;local&quot;</span><br><span class="line">18 &#x2F; Mega</span><br><span class="line">   \ &quot;mega&quot;</span><br><span class="line">19 &#x2F; Microsoft Azure Blob Storage</span><br><span class="line">   \ &quot;azureblob&quot;</span><br><span class="line">20 &#x2F; Microsoft OneDrive</span><br><span class="line">   \ &quot;onedrive&quot;</span><br><span class="line">21 &#x2F; OpenDrive</span><br><span class="line">   \ &quot;opendrive&quot;</span><br><span class="line">22 &#x2F; Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class="line">   \ &quot;swift&quot;</span><br><span class="line">23 &#x2F; Pcloud</span><br><span class="line">   \ &quot;pcloud&quot;</span><br><span class="line">24 &#x2F; Put.io</span><br><span class="line">   \ &quot;putio&quot;</span><br><span class="line">25 &#x2F; QingCloud Object Storage</span><br><span class="line">   \ &quot;qingstor&quot;</span><br><span class="line">26 &#x2F; SSH&#x2F;SFTP Connection</span><br><span class="line">   \ &quot;sftp&quot;</span><br><span class="line">27 &#x2F; Union merges the contents of several remotes</span><br><span class="line">   \ &quot;union&quot;</span><br><span class="line">28 &#x2F; Webdav</span><br><span class="line">   \ &quot;webdav&quot;</span><br><span class="line">29 &#x2F; Yandex Disk</span><br><span class="line">   \ &quot;yandex&quot;</span><br><span class="line">30 &#x2F; http Connection</span><br><span class="line">   \ &quot;http&quot;</span><br><span class="line">31 &#x2F; premiumize.me</span><br><span class="line">   \ &quot;premiumizeme&quot;</span><br><span class="line">Storage&gt; 12  #选择12，Google Drive</span><br><span class="line">client_id&gt; 850428  #填上你的Google Drive客户端ID</span><br><span class="line">client_secret&gt; D72gPc  #填上你的Google Drive客户端密匙</span><br><span class="line">Choose a number from below, or type in your own value</span><br><span class="line"> 1 &#x2F; Full access all files, excluding Application Data Folder.</span><br><span class="line">   \ &quot;drive&quot;</span><br><span class="line"> 2 &#x2F; Read-only access to file metadata and file contents.</span><br><span class="line">   \ &quot;drive.readonly&quot;</span><br><span class="line">   &#x2F; Access to files created by rclone only.</span><br><span class="line"> 3 | These are visible in the drive website.</span><br><span class="line">   | File authorization is revoked when the user deauthorizes the app.</span><br><span class="line">   \ &quot;drive.file&quot;</span><br><span class="line">   &#x2F; Allows read and write access to the Application Data folder.</span><br><span class="line"> 4 | This is not visible in the drive website.</span><br><span class="line">   \ &quot;drive.appfolder&quot;</span><br><span class="line">   &#x2F; Allows read-only access to file metadata but</span><br><span class="line"> 5 | does not allow any access to read or download file content.</span><br><span class="line">   \ &quot;drive.metadata.readonly&quot;</span><br><span class="line">scope&gt; 1 </span><br><span class="line">ID of the root folder</span><br><span class="line">Leave blank normally.</span><br><span class="line">Fill in to access &quot;Computers&quot; folders. (see docs).</span><br><span class="line">Enter a string value. Press Enter for the default (&quot;&quot;).</span><br><span class="line">root_folder_id&gt; </span><br><span class="line">Service Account Credentials JSON file path </span><br><span class="line">Leave blank normally.</span><br><span class="line">Needed only if you want use SA instead of interactive login.</span><br><span class="line">Enter a string value. Press Enter for the default (&quot;&quot;).</span><br><span class="line">service_account_file&gt; </span><br><span class="line">Edit advanced config? (y&#x2F;n)</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y&#x2F;n&gt; n  #输入n</span><br><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y if not sure</span><br><span class="line"> * Say N if you are working on a remote or headless machine</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y&#x2F;n&gt; n  #输入n</span><br><span class="line">If your browser doesn&#39;t open automatically go to the following link: https:&#x2F;&#x2F;accounts.google.com&#x2F;o&#x2F;  #打开该地址获取code</span><br><span class="line">Log in and authorize rclone for access</span><br><span class="line">Enter verification code&gt;hjdd   #输入你获取到的code</span><br><span class="line">Configure this as a team drive?</span><br><span class="line">y) Yes</span><br><span class="line">n) No</span><br><span class="line">y&#x2F;n&gt; n  #输入n</span><br><span class="line">--------------------</span><br><span class="line">[Rats]</span><br><span class="line">type &#x3D; drive</span><br><span class="line">client_id &#x3D; 85042871</span><br><span class="line">client_secret &#x3D; D72gPc</span><br><span class="line">scope &#x3D; drive</span><br><span class="line">token &#x3D; &#123;&quot;access_token&quot;:&quot;y902Z&quot;&#125;  #记住里面的refresh_token参数</span><br><span class="line">--------------------</span><br><span class="line">y) Yes this is OK</span><br><span class="line">e) Edit this remote</span><br><span class="line">d) Delete this remote</span><br><span class="line">y&#x2F;e&#x2F;d&gt; y  #输入y</span><br><span class="line">Current remotes:</span><br><span class="line"></span><br><span class="line">Name                 Type</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;                 &#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Rats                 drive</span><br><span class="line"></span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e&#x2F;n&#x2F;d&#x2F;r&#x2F;c&#x2F;s&#x2F;q&gt; q  #输入q保存退出</span><br></pre></td></tr></table></figure>
<p>此时我们在配置过程中就获取到了<code>refresh_token</code>参数，如果忘了的可以查看配置文件。</p>
<p>不知道配置文件在哪的，可以使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rclone config file | grep rclone.conf</span><br></pre></td></tr></table></figure>
<p><strong>3、获取并修改Workers代码</strong><br><code>Workers</code>代码可以点击该地址查看→<a href="https://github.com/donwa/goindex/blob/master/index.js" target="_blank" rel="noopener">传送门</a>，先复制代码，部分修改可参考上面，不同的是，需要填上自己的<code>api</code>信息，如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#填上自己的api客户端，密匙和获取到的refresh_token</span><br><span class="line">“client_id”：“20226481”，</span><br><span class="line">“client_secret”：“X4Z3ca8”，</span><br><span class="line">“refresh_token”：“”，</span><br></pre></td></tr></table></figure>
<p>最后就可以部署<code>Workers</code>代码了，方法参考上面的快速部署。</p>
<h4 id="VPS安装Plex-Server"><a href="#VPS安装Plex-Server" class="headerlink" title="VPS安装Plex Server"></a>VPS安装Plex Server</h4><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p><code>Plex</code>的全称为<code>Plex Media Server</code>，主要功能是存储+索引+转码+在线播放，它不仅仅是简单的存储，它还能分析影片的信息从而从<code>IMDB</code>等数据库补全影片介绍等信息，并且进行索引以方便搜索，要知道影片的格式有很多种，很多情况下播放设备无法兼容，所以它还能实时转码，播放渠道从网页到全平台的客户端应有尽有。当然，<code>Plex</code>除了能存片，还能存图存歌等等。</p>
<h5 id="截图-1"><a href="#截图-1" class="headerlink" title="截图"></a>截图</h5><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/plex-media-server%281%29.png" alt=""></p>
<h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><p>安装方法参考：<a href="https://www.plex.tv/downloads/。" target="_blank" rel="noopener">https://www.plex.tv/downloads/。</a></p>
<p>运行一下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#CentOS系统</span><br><span class="line">yum -y update &amp;&amp; yum -y install wget</span><br><span class="line">wget https:&#x2F;&#x2F;downloads.plex.tv&#x2F;plex-media-server&#x2F;1.12.1.4885-1046ba85f&#x2F;plexmediaserver-1.12.1.4885-1046ba85f.x86_64.rpm</span><br><span class="line">yum install plexmediaserver*.rpm</span><br><span class="line"></span><br><span class="line">#Debian&#x2F;Ubuntu系统</span><br><span class="line">apt-get -y update &amp;&amp; apt-get -y upgrade</span><br><span class="line">wget https:&#x2F;&#x2F;downloads.plex.tv&#x2F;plex-media-server-new&#x2F;1.18.3.2156-349e9837e&#x2F;debian&#x2F;plexmediaserver_1.18.3.2156-349e9837e_amd64.deb</span><br><span class="line">dpkg -i plexmediaserver*.deb</span><br></pre></td></tr></table></figure>
<p><code>Docker</code>安装方法请参考官方<code>GitHub</code>的说明：<a href="https://github.com/plexinc/pms-docker。" target="_blank" rel="noopener">https://github.com/plexinc/pms-docker。</a></p>
<p>设置<code>Plex</code>开机启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable plexmediaserver.service</span><br><span class="line">systemctl start plexmediaserver.service</span><br></pre></td></tr></table></figure>
<p>安装完成后进入<code>http://IP:32400/</code>就行了。如果无法访问，先检查运行状态。（<strong>宝塔界面：安全-防火墙-放行端口添加32400</strong>）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl status plexmediaserver</span><br></pre></td></tr></table></figure>
<p>如果显示<code>active</code>，则一般是防火墙问题，关掉或打开端口即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#CentOS 7</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line">#其它系统</span><br><span class="line">iptables -I INPUT -p tcp --dport 32400 -j ACCEPT</span><br><span class="line">service iptables save                              </span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>如果第一次进入应用界面，会显示“找不到服务器。 下载并安装<code>Plex Media Server</code>，它会显示在这里”。因为初次使用是不允许远程访问<code>Plex</code>的，这里我们可以使用<code>SSH</code>转发端口来解决这个问题。<br>运行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh root@服务器IP -L 8888:localhost:32400</span><br></pre></td></tr></table></figure>
<p>或者通过<code>Xshell-属性-隧道</code>添加如下图所示的转移规则，SSH连接服务器后访问<code>localhost:32400/web</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191227191616.png" alt=""></p>
<p>输入正确的密码后，再去浏览器里打开<code>localhost:8888/web</code>进入即可。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/plex-media-server%282%29.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/plex-media-server%284%29.png" alt=""><br>第一次链接成功后，下次就不需要用<code>SSH</code>转发进入了，直接通过<code>http://IP:32400/</code>访问就可以了。</p>
<p>然后点击左侧添加资料库，选择存放电影或者音乐的文件夹，就可以显示出来观看了，还可以添加频道等，更多操作自己慢慢研究<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/plex-media-server%285%29.png" alt=""></p>
<h4 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h4><ul>
<li>解析<code>plex.61xiao.tk</code>至目标IP</li>
<li>添加站点<code>plex.61xiao.tk</code></li>
<li>添加SSL（若先添加反代理则无法解析目标IP导致SSL无法开启）</li>
<li>添加反向代理至plex端口32400，并开启缓存</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/image-20191223034221529.png" alt=""></p>
<p>反代后直接输入域名即可浏览Plex内容，并且申请SSL后可通过CDN提速</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20191223050553.png" alt=""></p>
<h4 id="权限及防火墙"><a href="#权限及防火墙" class="headerlink" title="权限及防火墙"></a>权限及防火墙</h4><h5 id="文件访问权限"><a href="#文件访问权限" class="headerlink" title="文件访问权限"></a>文件访问权限</h5><p>Plex server默认用户组为plex，而使用rclone挂载的GoogleDrive为root所有，因此可能会出现Plex没有权限访问挂载的网盘，可在<code>计划任务</code>添加定时脚本来改变挂载目录的访问权限。例如谷歌盘挂载在Nextcloud目录下，则可添加以下定时脚本。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod -R 777 /www/wwwroot/pan.xxwu1990.tk/share/</span><br></pre></td></tr></table></figure>
<p>另外最好将plex用户赋予root权限，否则在扫描rclone挂载目录时会出现<code>权限是个好东西，可惜你没有</code>提示。具体操作为修改<code>/etc/passwd</code>文件，找到如下行，将用户ID(x:后面的数字)修改为0</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plex:x:0:117::&#x2F;var&#x2F;lib&#x2F;plexmediaserver:&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<h5 id="手动配置防火墙"><a href="#手动配置防火墙" class="headerlink" title="手动配置防火墙"></a>手动配置防火墙</h5><p>所有端口均需要通过宝塔面板-安全来放行。安装完bbr后重启服务器会导致端口已放行无法访问，可重新删除再放行，也可在命令行执行全部放行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line">iptables -F</span><br></pre></td></tr></table></figure>
<p>然而debian的iptables不保存防火墙规则，要使指定规则再次重启也能生效，查看/etc/network/if-pre-up.d/iptables找到防火墙规则路径/etc/iptables.up.rules，添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-A INPUT -p udp -m state --state NEW -m udp --dport 32400 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 32400 -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>如此外网也能访问32400端口，通过<a href="https://app.plex.tv" target="_blank" rel="noopener">https://app.plex.tv</a> 也可访问Plex服务器</p>
<p>若出现<code>errors: ufw problem running ip6tables</code>，在文件<code>/etc/default/ufw</code>修改<code>IPV6=no</code></p>
<h5 id="自动配置防火墙"><a href="#自动配置防火墙" class="headerlink" title="自动配置防火墙"></a>自动配置防火墙</h5><p>使用<code>iptables-save</code>命令保存防火墙设置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Debian/Ubuntu: </span><br><span class="line">iptables-save &gt; /etc/iptables/rules.v4</span><br><span class="line">ip6tables-save &gt; /etc/iptables/rules.v6</span><br><span class="line"></span><br><span class="line">RHEL/CentOS:</span><br><span class="line">iptables-save &gt; /etc/sysconfig/iptables</span><br><span class="line">ip6tables-save &gt; /etc/sysconfig/ip6tables</span><br></pre></td></tr></table></figure>
<p>修改<code>/etc/network/if-pre-up.d/iptables</code>内容为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables-restore &lt; /etc/iptables/rules.v4</span><br><span class="line">ip6tables-restore &lt; /etc/iptables/rules.v6</span><br></pre></td></tr></table></figure>
<h5 id="Plex配置防止VPS偷跑流量"><a href="#Plex配置防止VPS偷跑流量" class="headerlink" title="Plex配置防止VPS偷跑流量"></a>Plex配置防止VPS偷跑流量</h5><p>Plex默认会在凌晨自动在后台刷新所有媒体的元数据，如果都是本地文件等话，其实影响不大，因为每个文件只读取几十M等内容用来分析，但是网上的这个数据的话，那个数据量就惊人了哈，我自己统计了我的，每次全盘分析一次google drive的元数据，则需要耗费大约200G的流量。这个在国内这个环境下不现实。所以需要在plex的预定任务那取消这几个地方。 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/152425ksb4bb4ez4mbog5m.jpg" alt=""></p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>宝塔</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>利用forpy在Fortran代码中调用Python脚本</title>
    <url>/2019/12/07/%E5%88%A9%E7%94%A8forpy%E5%9C%A8Fortran%E4%BB%A3%E7%A0%81%E4%B8%AD%E8%B0%83%E7%94%A8Python%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>由于某些原因，可能会在Fortran代码中调用Python的模块，本文介绍在Linux环境下实现这一功能，有关Windows环境下可参考之前的博客，其余教程可参考<a href="https://github.com/ylikx/forpy" target="_blank" rel="noopener">项目地址</a>。<a id="more"></a></p>
<h4 id="算例"><a href="#算例" class="headerlink" title="算例"></a>算例</h4><p>以网站提供的<a href="https://github.com/ylikx/forpy/wiki/Using-scipy-in-Fortran" target="_blank" rel="noopener">算例</a>为例，调用Python模块<code>scipy</code>求解线性规划问题：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">minimize f(x1, x2) &#x3D; -300 * x1 -500 * x2</span><br><span class="line"></span><br><span class="line">x1 + 2*x2 &lt;&#x3D; 170</span><br><span class="line">x1 +   x2 &lt;&#x3D; 150</span><br><span class="line">     3*x2 &lt;&#x3D; 180</span><br><span class="line"></span><br><span class="line">x1 &gt;&#x3D; 0</span><br><span class="line">x2 &gt;&#x3D; 0</span><br></pre></td></tr></table></figure>
<p>这里我们使用函数 <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.linprog.html#scipy.optimize.linprog" target="_blank" rel="noopener">scipy.optimize.linprog</a>，其Python代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> scipy.optimize <span class="keyword">as</span> opt</span><br><span class="line"></span><br><span class="line">c = np.array([<span class="number">-300.</span>, <span class="number">-500.</span>])</span><br><span class="line">b_ub = np.array([<span class="number">170.</span>, <span class="number">150.</span>, <span class="number">180.</span>])</span><br><span class="line"></span><br><span class="line">A_ub = np.array([[<span class="number">1.</span>, <span class="number">2.</span>],</span><br><span class="line">                 [<span class="number">1.</span>, <span class="number">1.</span>],</span><br><span class="line">                 [<span class="number">0.</span>, <span class="number">3.</span>]])</span><br><span class="line"></span><br><span class="line">retval = opt.linprog(c, A_ub, b_ub)</span><br><span class="line">x = retval.x</span><br><span class="line">objective_fun_value = retval.fun</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Solution: x = &#123;0&#125;"</span>.format(x))</span><br><span class="line">print(<span class="string">"Value of objective function: fun = &#123;0&#125;"</span>.format(</span><br><span class="line">       objective_fun_value))</span><br></pre></td></tr></table></figure>
<p>下面我们利用Fortran调用<code>scipy</code>实现相同功能。我们需要载入<code>scipy.optimize</code>模块，对3组Fotran数组创建<code>numpy</code>封装，构建<code>linprog</code>函数的参数元组并最终调用函数，<code>linprog</code>返回一个具有多属性的object类型的结果，我们使用<code>getattribute</code>方法从object中检索需要的变量，然后将该变量传递给Fortran变量。</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">program</span></span> scipy_example01</span><br><span class="line"><span class="keyword">use</span> forpy_mod</span><br><span class="line"><span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">integer</span>, <span class="keyword">parameter</span>:: dp = <span class="keyword">kind</span>(<span class="number">0.d0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">integer</span> :: ierror</span><br><span class="line"><span class="keyword">type</span>(module_py) :: opt</span><br><span class="line"><span class="keyword">type</span>(ndarray) :: nd_c, nd_b_ub, nd_A_ub, nd_x</span><br><span class="line"><span class="keyword">type</span>(object) :: retval, attr</span><br><span class="line"><span class="keyword">type</span>(tuple) :: args</span><br><span class="line"></span><br><span class="line"><span class="keyword">real</span>(dp) :: c(<span class="number">2</span>) = [-<span class="number">300.</span>_dp, -<span class="number">500.</span>_dp]</span><br><span class="line"><span class="keyword">real</span>(dp) :: b_ub(<span class="number">3</span>) = [<span class="number">170.</span>_dp, <span class="number">150.</span>_dp, <span class="number">180.</span>_dp]</span><br><span class="line"></span><br><span class="line"><span class="keyword">real</span>(dp) :: A_ub(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">real</span>(dp), <span class="keyword">dimension</span>(:), <span class="keyword">pointer</span> :: x</span><br><span class="line"><span class="keyword">real</span>(dp) :: objective_fun_value</span><br><span class="line"></span><br><span class="line">A_ub(<span class="number">1</span>,<span class="number">1</span>) = <span class="number">1.</span><span class="number">0</span>_dp </span><br><span class="line">A_ub(<span class="number">2</span>,<span class="number">1</span>) = <span class="number">1.</span><span class="number">0</span>_dp </span><br><span class="line">A_ub(<span class="number">3</span>,<span class="number">1</span>) = <span class="number">0.</span><span class="number">0</span>_dp </span><br><span class="line"></span><br><span class="line">A_ub(<span class="number">1</span>,<span class="number">2</span>) = <span class="number">2.</span><span class="number">0</span>_dp</span><br><span class="line">A_ub(<span class="number">2</span>,<span class="number">2</span>) = <span class="number">1.</span><span class="number">0</span>_dp</span><br><span class="line">A_ub(<span class="number">3</span>,<span class="number">2</span>) = <span class="number">3.</span><span class="number">0</span>_dp</span><br><span class="line"></span><br><span class="line">ierror = forpy_initialize()</span><br><span class="line">ierror = import_py(opt, <span class="string">"scipy.optimize"</span>)</span><br><span class="line"></span><br><span class="line">ierror = ndarray_create(nd_c, c)</span><br><span class="line">ierror = ndarray_create(nd_b_ub, b_ub)</span><br><span class="line">ierror = ndarray_create(nd_A_ub, A_ub)</span><br><span class="line"></span><br><span class="line">ierror = tuple_create(args, <span class="number">3</span>)</span><br><span class="line">ierror = args%setitem(<span class="number">0</span>, nd_c)</span><br><span class="line">ierror = args%setitem(<span class="number">1</span>, nd_A_ub)</span><br><span class="line">ierror = args%setitem(<span class="number">2</span>, nd_b_ub)</span><br><span class="line"></span><br><span class="line">ierror = call_py(retval, opt, <span class="string">"linprog"</span>, args)</span><br><span class="line"></span><br><span class="line">ierror = retval%getattribute(attr, <span class="string">"x"</span>)</span><br><span class="line">ierror = cast(nd_x, attr)</span><br><span class="line">ierror = nd_x%get_data(x)</span><br><span class="line"><span class="keyword">call</span> attr%destroy</span><br><span class="line"></span><br><span class="line">ierror = retval%getattribute(attr, <span class="string">"fun"</span>)</span><br><span class="line">ierror = cast(objective_fun_value, attr)</span><br><span class="line"><span class="keyword">call</span> attr%destroy</span><br><span class="line"></span><br><span class="line"><span class="built_in">write</span>(*,*) <span class="string">"Solution: x = "</span>, x</span><br><span class="line"><span class="built_in">write</span>(*,*) <span class="string">"Value of objective function: fun = "</span>, objective_fun_value</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> retval%destroy</span><br><span class="line"><span class="keyword">call</span> args%destroy</span><br><span class="line"><span class="keyword">call</span> nd_c%destroy</span><br><span class="line"><span class="keyword">call</span> nd_b_ub%destroy</span><br><span class="line"><span class="keyword">call</span> nd_A_ub%destroy</span><br><span class="line"><span class="keyword">call</span> nd_x%destroy</span><br><span class="line"><span class="keyword">call</span> opt%destroy</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> forpy_finalize()</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">program</span></span></span><br></pre></td></tr></table></figure>
<h4 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h4><p>手动编译</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifort -g forpy_mod.F90 -o forpy_mod.o</span><br><span class="line">ifort -g scipy_example01.f90 -o scipy_example01.o</span><br><span class="line">ifort -g forpy_mod.o scipy_example01.o -o test_scipy  `python3-config --ldflags`</span><br></pre></td></tr></table></figure>
<p>或者利用Makefile，</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">FC = ifort</span><br><span class="line">FFLAGS = -warn all -g</span><br><span class="line">LDFLAGS = `python3-config --ldflags`</span><br><span class="line"></span><br><span class="line"><span class="section">all: test_scipy</span></span><br><span class="line"></span><br><span class="line"><span class="section">test_scipy: forpy_mod.o scipy_example01.o</span></span><br><span class="line">        <span class="variable">$(FC)</span> <span class="variable">$(FFLAGS)</span> <span class="variable">$^</span> -o <span class="variable">$@</span> <span class="variable">$(LDFLAGS)</span></span><br><span class="line"></span><br><span class="line"><span class="section">forpy_mod.o: forpy_mod.F90</span></span><br><span class="line">        <span class="variable">$(FC)</span> <span class="variable">$(FFLAGS)</span> -c <span class="variable">$^</span>  -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="section">scipy_example01.o: scipy_example01.f90</span></span><br><span class="line">        <span class="variable">$(FC)</span> <span class="variable">$(FFLAGS)</span> -c <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>:clean</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">        rm -f *.o</span><br><span class="line">        rm -f *.mod</span><br><span class="line">        rm -f test</span><br></pre></td></tr></table></figure>
<p>注意编译的顺序，依赖项最先编译，主程序最后编译，即按照子程序-主程序的顺序来进行编译，否则会报错，在Makefile中需要注意链接顺序，排在前面的.o目标文件最先编译，最后链接时需要添加python3-config —ldflags。</p>
<p>如果代码中有预处理语句(例如<code>#define</code>)，在编译时需要添加<code>-fpp</code>选项。</p>
<p>最终目录结构如下：</p>
<p>.<br>├── forpy_mod.F90<br>├── forpy_mod.mod<br>├── forpy_mod.o<br>├── Makefile<br>├── test_scipy<br>├── scipy_example01.f90<br>└── scipy_example01.o</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>fortran</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10 运行SU2并行版本</title>
    <url>/2019/12/06/Windows-10-%E8%BF%90%E8%A1%8CSU2%E5%B9%B6%E8%A1%8C%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<p>在将SU2可执行文件放置在安装目录（如<strong>C:\CFD\SU2</strong>）下后，需要进行以下操作方便调用：<a id="more"></a></p>
<h4 id="Step1-配置环境变量"><a href="#Step1-配置环境变量" class="headerlink" title="Step1: 配置环境变量"></a>Step1: 配置环境变量</h4><p>将安装目录<strong>C:\CFD\SU2</strong>添加到Path变量中，并新建变量<strong>SU2_RUN</strong>，其值同为<strong>C:\CFD\SU2</strong>；</p>
<h4 id="Step2-安装mpich"><a href="#Step2-安装mpich" class="headerlink" title="Step2: 安装mpich"></a>Step2: 安装mpich</h4><p>下载<a href="https://www.microsoft.com/en-us/download/details.aspx?id=100593" target="_blank" rel="noopener">microsoft MPI</a>(SDK不需要)并安装；</p>
<h4 id="Step4-执行命令"><a href="#Step4-执行命令" class="headerlink" title="Step4: 执行命令"></a>Step4: 执行命令</h4><p> 在工作目录下打开命令行，执行  <code>mpiexec -n 4 SU2_CFD xxx.cfg</code>或者 <code>python %SU2_RUN%\parallel_computation.py -n 4 -f xxx.cfg</code></p>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>su2</tag>
      </tags>
  </entry>
  <entry>
    <title>配置Bash on Windows (WSL)并自定义安装位置</title>
    <url>/2019/10/22/%E9%85%8D%E7%BD%AEBash-on-Windows-(WSL)%E5%B9%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/3efd3b39277381bea6f52115ab4a749306ef511b.png_1320w_814h.jpg" alt=""></p>
<a id="more"></a>
<p>本文转自<a href="https://www.bilibili.com/read/cv1429071/" target="_blank" rel="noopener">B站</a></p>
<p>Windows 10<strong>专业版（其它版本不支持）</strong>中集成了Bash on Windows功能，可以在默认的命令行中直接使用Linux的命令来处理Windows的文件，对于仅支持Linux的软件也可以直接运行，此工具在编程和仿真方面都非常方便。那么如何配置Bash on Windows？本文将对此进行详细的说明。</p>
<ol>
<li>打开设置-&gt;安全和更新-&gt;开发者选项，选择为“开发人员模式”</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/9c61942273b0837f7600676a6d7baed7f791bb0f.png_818w_772h.jpg" alt=""></p>
<p>设置开发人员模式</p>
<ol>
<li>在设置中直接搜索“Windows功能”，选择“启用或关闭Windows功能”</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/01c4e65d9b6679e0194c7ae6784f5e188d3a09c0.png_782w_318h.jpg" alt=""></p>
<p>打开Windows功能设置对话框</p>
<ol>
<li>勾选“适用于Linux的Windows子系统”，并单击确定。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/e59a9492b6b4ef35a9da4d2318eeb20929828720.png_858w_850h.jpg" alt=""></p>
<p>启用功能</p>
<p>一般流程中，接下来需要在命令行中输入bash并按照提示走。但是，官方的方法会默认把Linux安装到系统盘，无法自定义位置。因此，这里使用开源工具，自定义安装。</p>
<ol>
<li><p>下载LxRunOffline: <a href="https://github.com/DDoSolitary/LxRunOffline/releases，下载文件LxRunOffline-vxxxx.zip" target="_blank" rel="noopener">https://github.com/DDoSolitary/LxRunOffline/releases，下载文件LxRunOffline-vxxxx.zip</a> (下载最新版本即可，笔者下载的是3.3.0）</p>
</li>
<li><p>将LxRunOffline解压到一个目录中，右击”此电脑“-&gt;属性-&gt;高级系统设置，在高级面板中选择环境变量。</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/086305ad5455cd5f8875af14d8b4400fa58d8d26.png_986w_1210h.jpg" alt=""></p>
<p>打开环境变量设置对话框</p>
<ol>
<li>选择系统变量中的Path变量，点击编辑按钮。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/3b65c73195e8b3e7e27e33264a28733f7eb50028.png_1264w_1332h.jpg" alt=""></p>
<ol>
<li>点击新建，并把刚刚LxRunOffline的解压地址粘贴到新的项目中。</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/9480dd1557b04cd017f34694c2821bc65bf063fc.png_1082w_1140h.jpg" alt=""></p>
<p>此处的目录中应该包含LxRunOffline.exe文件</p>
<ol>
<li><p>打开命令行，输入LxRunOffline，如果显示：[Error] No action is specified，并列出帮助列表，则表明安装成功。如果显示找不到此命令，则表明环境变量设置错误。</p>
</li>
<li><p>在Windows商店中搜索Linux，选择自己喜欢的发行版获取并运行，笔者安装的是Ubuntu 18.04 LTS。按照提示步骤，填好用户名和密码。</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/0ffc18d94d88815bde5c7513080eb12dee3f314a.png_628w_110h.jpg" alt=""></p>
<p>第一次执行的效果</p>
<ol>
<li><p>现在在命令行中输入bash，就可以打开一个Linux终端进行操作了。</p>
</li>
<li><p>退出bash，执行LxRunOffline move -n {version} -d {dir}，将Linux移动到指定的目录。其中，{version}是版本号，可以通过LxRunOffline list来查看，{dir}是目标目录。例如，笔者执行的是：LxRunOffline move -n Ubuntu-18.04 -d ./ubuntu</p>
</li>
<li><p>安装XServer：在<a href="https://sourceforge.net/projects/xming/中下载Xming软件。" target="_blank" rel="noopener">https://sourceforge.net/projects/xming/中下载Xming软件。</a></p>
</li>
<li><p>将下载好的软件正常安装即可，第一次打开软件时默认选项就好，后续打开也无需更改默认配置。</p>
</li>
<li><p>输入nano ~/.bashrc或者vi ~/.bashrc（如果不熟悉vi或者vim，建议使用nano，其中下方有操作说明，\^对应Ctrl，例如保存是\^O，就是Ctrl+O），在最后一行输入：export DISPLAY=:0，并保存。</p>
</li>
<li><p>输入source ~/.bashrc，将刚刚输入的命令激活。</p>
</li>
<li><p>安装一个图形软件进行测试：sudo apt-get install vim-gtk。</p>
</li>
<li><p>在XMing打开的情况下，执行：gvim，如果一切都配置成功的话，就可以看到图形界面的窗口了。</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-05/32d374366932ef508eeee7c150899980ae7a7ce1.jpg_1075w_602h.jpg" alt=""></p>
<p>题外话：Windows自带的CMD在Windows 10中有所加强，然而还是很不好用。因此，建议使用第三方的命令行，例如cmder或者hyper.js等。笔者一直用的cmder。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Win下必备神器之Cmder</title>
    <url>/2019/10/21/Win%E4%B8%8B%E5%BF%85%E5%A4%87%E7%A5%9E%E5%99%A8%E4%B9%8BCmder/</url>
    <content><![CDATA[<p>本文转自<a href="https://www.jeffjade.com/2016/01/13/2016-01-13-windows-software-cmder/" target="_blank" rel="noopener">晚晴幽草轩</a></p>
<p>诚言，对于开发码字者，Mac和Linux果断要比Windows更贴心;但只要折腾下，Windows下也是有不少利器的。之前就有在<a href="https://www.jeffjade.com/2015/10/19/2015-10-18-Efficacious-win-software/" target="_blank" rel="noopener">Windows下效率必备软件</a>一文中对此做了下记载；其虽没<code>oh-my-zsh</code>那么逆天的存在，却也甚是好用，至少要比Windows原生Cmd好出了天际。因为<strong>好用</strong>，所以<strong>“必备”</strong>。<a id="more"></a></p>
<hr>
<blockquote>
<p><strong>『有则推荐』</strong>: 自 2017 年初，就有开始利用闲余时光，打磨个人最新作品——<a href="https://nicelinks.site/?from=jeffjade-cmder" target="_blank" rel="noopener"><strong>「倾城之链」</strong></a> ，有意将其打造成优良开放型平台，旨在云集全球优秀网站，让您更为便捷地探索互联网中那更广阔的世界；在这里，您可以轻松<strong>发现</strong>、<strong>学习</strong>、<strong>分享</strong>更多<code>有用</code>或<code>有趣</code>的事物。目前仍在不断迭代、优化中，如果您对此感兴趣，不妨先尝试一下： <a href="https://nicelinks.site/?from=jeffjade-cmder" target="_blank" rel="noopener">「倾城之链」</a>；亦十分欢迎提出您宝贵意见或建议。 (Upade@2018-01-23 于深圳.南山)。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cmder.jpg" alt="">Cmder</p>
<h2 id="安裝-cmder"><a href="#安裝-cmder" class="headerlink" title="安裝 cmder"></a><strong>安裝 cmder</strong></h2><p><a href="http://cmder.net/" target="_blank" rel="noopener">Cmder官网</a><code>http://cmder.net/</code>（她把conemu，msysgit和clink打包在一起，让你无需配置就能使用一个真正干净的Linux终端！她甚至还附带了漂亮的monokai配色主题。）;作为一个压缩档的存在, 可即压即用。你甚至可以放到USB就可以虽时带着走，连调整过的设定都会放在这个目录下，不会用到系统机码(Registry)，所以也很适合放在Dropbox / Google Drive / OneDrive共享于多台电脑。</p>
<p>下载的时候，有两个版本，分别是mini与full版；唯一的差别在于有没有内建msysgit工具，这是Git for Windows的标准配备；全安装版 cmder 自带了 msysgit, 压缩包 23M, 除了 git 本身这个命令之外, 里面可以使用大量的 linux 命令；比如 grep, curl(没有 wget)； 像vim, grep, tar, unzip, ssh, ls, bash, perl 对于爱折腾的Coder更是痛点需求。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/msysgit-bin.png" alt="cmder强大自带命令"></p>
<h2 id="配置-Cmder"><a href="#配置-Cmder" class="headerlink" title="配置 Cmder"></a><strong>配置 Cmder</strong></h2><h3 id="启动Cmder"><a href="#启动Cmder" class="headerlink" title="启动Cmder"></a><strong>启动Cmder</strong></h3><p>因为她是即压即用的存在，所以点击<code>Cmder.exe</code>即可运行。很显然这般打开她，不怎么快捷，即便用<code>Listary</code>高效搜索到她，然后点击;我们可以这样做:</p>
<ol>
<li><p>把 <strong>cmder</strong> 加到环境变量<br>可以把<code>Cmder.exe</code>存放的目录添加到系统环境变量；加完之后,<code>Win+r</code>一下输入<code>cmder</code>,即可。</p>
</li>
<li><p><strong>添加 cmder 到右键菜单</strong><br>在某个文件夹中打开终端, 这个是一个(超级)痛点需求, 实际上上一步的把 <strong>cmder</strong> 加到环境变量就是为此服务的, 在管理员权限的终端输入以下语句即可:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Cmder.exe &#x2F;REGISTER ALL</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>打开一个管理员权限终端:</strong><br>输入 Ctrl + t, 或者点击下面控制条的绿色加号, 勾选 Run as administrator<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/cmderRunAdmin.jpg" alt="">Run as administrator<br>这就打开了一个管理员权限的终端, 在里面输入上述语句，就可在每个文件夹右键菜单中点击 <code>Cmder here</code>唤起Cmder，方便快捷。</p>
<p>不用打开文件夹就能打Cmder,并进入该目录;爽。</p>
<ol>
<li><p>借用Win下逆天神器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AutoHotKey</span><br></pre></td></tr></table></figure>
<p>（这个下篇要好好记载下）为Cmder配置自己喜欢的快捷键(个人用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Alt+r</span><br></pre></td></tr></table></figure>
<p>)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!r:: run, D:\**\cmder_mini\Cmder.exe</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>个人比较推崇使用<code>AutoHotKey</code>；高效简洁，才是王道。</p>
<h3 id="默认开启设置"><a href="#默认开启设置" class="headerlink" title="默认开启设置"></a><strong>默认开启设置</strong></h3><p>作为强大的存在，必然支持私人定制。输入<code>win + alt + p</code>或者 在底部右击点击 settings, 进入设置页面；可以根据自己的所需进行各种配置(字体，皮肤等等等等)。</p>
<p>目前游走在前端，<code>Gulp</code>已离不开，<code>Cmder+PowerShell</code>这个组合无疑是运行gulp的利器。如下图所示，可以设置<code>PowerShell</code>作为默认开启的选项；也可以更改默认开启是所在目录。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/CmderSeting.jpg" alt="">Cmder-Seting</p>
<h3 id="解决文字重叠问题"><a href="#解决文字重叠问题" class="headerlink" title="解决文字重叠问题"></a><strong>解决文字重叠问题</strong></h3><p>Win + ALT + P 唤出设置界面 &gt; mian &gt; font &gt; monospce,去掉那勾勾即可。</p>
<h3 id="修改命令提示符号·λ·"><a href="#修改命令提示符号·λ·" class="headerlink" title="修改命令提示符号·λ·"></a><strong>修改命令提示符号·λ·</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/CmderChange.jpg" alt="">Cmder修改命令提示符号<br>Cmder预设的命列列提示符号是<strong>λ</strong>;如果用着不习惯，可以将这个字元改成Mac / Linux环境下常见的<strong>$</strong>符号，具体操作如下：<br>编辑Cmder安装目录下的vendor\init.bat批处理文件(min版本15行)，把：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@prompt $E[1;32;40m$P$S&#123;git&#125;&#123;hg&#125;$S$_$E[1;30;40m &#123;lamb&#125; $S$E[0m</span><br></pre></td></tr></table></figure>
<p>修改成以下即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@prompt $E[1;32;40m$P$S&#123;git&#125;&#123;hg&#125;$S$_$E[1;30;40m $$ $S$E[0m</span><br></pre></td></tr></table></figure>
<p>这个亲测在<code>cmder.exe</code>可以，但在<code>PowerShell.exe</code>需要另行设置:<br>打开文件config/cmder.lua（prompt.lua也有版本是这个），将第二行中的<strong>λ</strong>修改为Linux下常用的<strong>$</strong>即可；亲测可行(2016-01-13)。</p>
<h2 id="常用功能介绍"><a href="#常用功能介绍" class="headerlink" title="常用功能介绍"></a><strong>常用功能介绍</strong></h2><p>cmder 功能极为强大，功能也非常多，但从视窗画面上看不太出其强大实力，这里就先说下其「看的见」的功能：<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/CmderFunction.png" alt="">Cmder强大功能图示<br>如上图示编号的部分说明如下：<br>1, Cmder常用快捷键<br>跟一般浏览器页签操作习惯一致:</p>
<blockquote>
<p>可以利用<code>Tab</code>，自动路径补全(爽,赞！)；<br>可以利用<strong>Ctrl+T</strong>建立新页签；<br>利用<strong>Ctrl+W</strong>关闭页签;<br>还可以透过<strong>Ctrl+Tab</strong>切换页签;<br><strong>Alt+F4</strong>：关闭所有页签<br><strong>Alt+Shift+1</strong>：开启cmd.exe<br><strong>Alt+Shift+2</strong>：开启powershell.exe<br><strong>Alt+Shift+3</strong>：开启powershell.exe (系统管理员权限)<br><strong>Ctrl+1</strong>：快速切换到第1个页签<br><strong>Ctrl+n</strong>：快速切换到第n个页签( n值无上限)<br><strong>Alt + enter</strong>： 切换到全屏状态；<br><strong>Ctr+r</strong> 历史命令搜索;<br><strong>End, Home, Ctrl</strong> : Traversing text with as usual on Windows</p>
</blockquote>
<p>2, 可在视窗内搜寻画面上出现过的任意关键字。<br>3, 新增页签按钮，可透过滑鼠新增页签。<br>4, 切换页签按钮，可透过滑鼠切换页签。<br>5, 锁定视窗，让视窗无法再输入。<br>6, 切换视窗是否提供卷轴功能，启动时可查询之前显示过的内容。<br>7, 按下滑鼠左键可开启系统选单，滑鼠右键可开启工具选项视窗。 Win+Alt+P ：开启工具选项视窗</p>
<h2 id="cmder元件组成"><a href="#cmder元件组成" class="headerlink" title="cmder元件组成"></a><strong>cmder元件组成</strong></h2><p>cmder其实结合了多套软体，其中包括<a href="https://github.com/msysgit/msysgit" target="_blank" rel="noopener">msysgit</a>与最重要的<a href="http://conemu.github.io/" target="_blank" rel="noopener">ConEmu</a>与<a href="http://mridgers.github.io/clink/" target="_blank" rel="noopener">Clink</a>软体，而ConEmu与Clink这两套软体就是cmder真正的核心元件。</p>
<ul>
<li><strong>msysgit</strong>除了提供Git for Windows 相关工具外，其实还提供了多套Unix/Linux 环境下常用的指令列工具，例如less, ls, tar, unzip, md5sum, grep, sed, … 等多套工具。<br>光是一个grep 就不知道比Windows 内建的findstr 强几百倍了！</li>
<li><strong>ConEmu</strong>也可以是单独一款软件存在，曾经一度迷恋于它，然而其体验并不如<strong>cmder</strong>，便放弃它了。</li>
<li><strong>Clink</strong> 将GNU Readline 函式库整合进原生的Windows 命令提示字元视窗，提供命令列模式下强大的编辑与输入能力，这也是用了cmder 之后会这么像在Linux 环境下使用的感觉。</li>
</ul>
<p>上述功能,目前没怎么用，根据<strong>学以致用</strong>原理，也就还没去了解去折腾。</p>
<h3 id="Chocolatey软件包管理系统"><a href="#Chocolatey软件包管理系统" class="headerlink" title="Chocolatey软件包管理系统"></a><strong>Chocolatey软件包管理系统</strong></h3><p>在 Linux 下，大家喜欢用 apt-get(mac下用brew) 来安装应用程序，如今在 windows 下，大家可以使用 Chocolatey 来快速下载搭建一个开发环境。<code>Chocolatey</code>的哲学就是完全用命令行来安装应用程序， 它更像一个包管理工具（背后使用 Nuget ）</p>
<p>另外需要说明的是， Chocolatey 只是把官方下载路径封装到了 Chocolatey 中，所以下载源都是其官方路径，所以下载的一定是合法的，但是如果原软件是需要 Licence 注册的话，那么 Chocolatey 下载安装好的软件还是需要你去购买注册。不过 Chocolatey 一般还是会选用免费 Licence 可用的软件。</p>
<p>安装chocolatey , 运行如下命令即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@powershell -NoProfile -ExecutionPolicy unrestricted -Command &quot;iex ((new-object net.webclient).DownloadString(&#39;https:&#x2F;&#x2F;chocolatey.org&#x2F;install.ps1&#39;))&quot; &amp;&amp; SET PATH&#x3D;%PATH%;%ALLUSERSPROFILE%\chocolatey\bin</span><br></pre></td></tr></table></figure>
<p>安装软件命令 <code>choco install softwareName</code>, 短写是 <code>cinst softwareName</code><br>可安装的应用程序，可以参见其 <a href="https://chocolatey.org/packages" target="_blank" rel="noopener">Package列表</a><br>以下是window下开发常用的开发环境应用:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">choco install autohotkey.portable    #安装 AutoHotkey (Portable)</span><br><span class="line">choco install nodejs.install  #安装 node</span><br><span class="line">choco install git.install     #安装 git</span><br><span class="line">choco install ruby            #安装 ruby</span><br><span class="line">choco install python          #安装 python</span><br><span class="line">choco install jdk8            #安装 JDK8</span><br><span class="line">choco install googlechrome    #安装 Chrome</span><br><span class="line">choco install google-chrome-x64 #Google Chrome (64-bit only)</span><br><span class="line">choco install firefox         #安装 firefox</span><br><span class="line">choco install notepadplusplus.install #安装 notepad++</span><br><span class="line">choco install Atom                    #安装 Atom</span><br><span class="line">choco install SublimeText3            #安装 SublimeText3</span><br></pre></td></tr></table></figure>
<h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a><strong>其他功能</strong></h2><ul>
<li><p>Cmder还增加了<strong>alias</strong>功能;他让你用短短的指令执行一些常见但指令超长又难以记忆的语法;比如 <code>ls</code> <code>cls</code>等等；在其控制台输入<code>alias</code>可以查看。</p>
</li>
<li><p>主控台文字自动放大缩小功能，你只要按<strong>下Ctrl+滑鼠滚轮</strong>就可以办到;果你用支援两点触控的笔电，也可以在触控板上用两指放大的手势调整文字大小。还有：<strong>up</strong>，向上翻历史命令;</p>
</li>
<li><p><strong>Cmder</strong>有极为简单的<strong>复制粘贴</strong>操作。<strong>Ctr+V</strong>直接粘贴;用鼠标选中你想拷贝的内容，自动就复制到剪切板；天神，这悉数的美感;点赞!</p>
</li>
<li><p><strong>自定义aliases</strong>:打开Cmder目录下的config文件夹，里面的aliases文件就是我们可以配置的别名文件，只需将里面ls命令的别名按下列方式修改就可以在ls命令下显示中文。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls&#x3D;ls --show-control-chars --color&#x3D;auto $*</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>当然，别名文件还可以有许多其他配置，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e.&#x3D;explorer .</span><br><span class="line">gcc&#x3D;cd D:\Document\gcc\</span><br><span class="line">gw&#x3D;cd D:\Document\GitHub\work</span><br><span class="line">gl&#x3D;git log --oneline --all --graph --decorate  $*</span><br><span class="line">ls&#x3D;ls --show-control-chars --color&#x3D;auto $*</span><br><span class="line">pwd&#x3D;cd</span><br><span class="line">clear&#x3D;cls</span><br></pre></td></tr></table></figure>
<p>这个在公司电脑上总不成功；问题<code>无效的宏定义。</code>;在写到这里时候，还未查明缘由【待探究，待更新】。</p>
<p>—2016-01-14 20:05更新:<br>感谢@V友(zongwan)可以修改Cmder目录下<code>vendor\profile.ps1</code>文件，Like This：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Set-Alias st &quot;C:\Program Files\Sublime Text 3\sublime_text.exe&quot;</span><br><span class="line"></span><br><span class="line">function Git-Status &#123; git status &#125;</span><br><span class="line">Set-Alias gs Git-Status</span><br><span class="line"></span><br><span class="line">function go-Work &#123;cd E:\work\web\cdn\&#125;</span><br><span class="line">Set-Alias gw go-Work</span><br></pre></td></tr></table></figure>
<p><code>st xxx</code>就用实现以sublimeText打开xxx文件；<code>gw</code>下就能进入所设置的目录;<code>gs</code>相当于在使用git文件目录下用<code>git status</code>;凡此种种,为常用命令设置下简短别名,真心不错。</p>
<p>Windows的cmd就是一个奇葩的存在…如果你愿意花时间去找，你能找到很多的可以替代它的软件，譬如：<code>Babun</code>, <code>Gow</code> ,<code>Conemu</code> , <code>clink</code>等等，任何一款都比原生Cmd来得快意。环境虽如是，体验却在你。</p>
<p>大概就这样，折腾让生活更美好，不止于编程码字。还是那句话，与君共勉：<br>“<strong>过一个平凡无趣的人生实在太容易了，你可以不读书，不冒险，不运动，不写作，不外出，不折腾……但是，人生最后悔的事情就是：我本可以。</strong>”——陈素封。</p>
<p>参考文章：<br><a href="http://cmder.net/" target="_blank" rel="noopener">Cmder官网</a><br><a href="https://phphub.org/topics/67" target="_blank" rel="noopener">利用 Chocolatey 快速在 Windows 下搭建一个开发环境</a><br><a href="http://blog.miniasp.com/post/2015/09/27/Useful-tool-Cmder.aspx" target="_blank" rel="noopener">介绍好用工具：Cmder ( 具有Linux 温度的Windows 命令提示字元工具 )</a></p>
<hr>
<h3 id="对您可能有用-感兴趣-的文章："><a href="#对您可能有用-感兴趣-的文章：" class="headerlink" title="对您可能有用(/感兴趣)的文章："></a>对您可能有用(/感兴趣)的文章：</h3><ul>
<li><a href="https://www.jeffjade.com/2015/12/15/2015-04-17-toss-sublime-text/" target="_blank" rel="noopener">如何优雅地使用Sublime Text</a></li>
<li><a href="http://www.cnblogs.com/jadeboy/p/4165449.html" target="_blank" rel="noopener">sublime text 下的Markdown写作</a></li>
<li><a href="https://www.jeffjade.com/2015/07/29/2015-07-29-mac-musthave-software/" target="_blank" rel="noopener">Mac必备软件渐集之ZSH－终极Shell</a></li>
<li><a href="https://www.jeffjade.com/2015/10/19/2015-10-18-chrome-vimium/" target="_blank" rel="noopener">Vimium~让您的Chrome起飞</a></li>
<li><a href="https://www.jeffjade.com/2015/08/28/2015-08-28-Write-Morkdown/" target="_blank" rel="noopener">SublimeText下写作利器之MarkdownEditing</a></li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>命令行</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10 环境 Windows Sub Linux 安装和使用</title>
    <url>/2019/10/21/Windows-10-%E7%8E%AF%E5%A2%83-Windows-Sub-Linux-%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然 WSL ( Windows Subsystem for Linux ) 可以直接访问 Windows 下的文件，但是因为文件权限的问题，把需要在 WSL 中使用的文件放在 WSL 的用户主目录是最好的解决方案没有之一。为了不撑爆系统盘，除了修改 Windows 应用安装位置，还可以把 WSL 整个安装目录进行转移，使用<code>wsl --export</code>和<code>wsl --import</code>这两个命令可以对 WSL 进行打包再自定义目录安装，就相当于转移。我以为这已经是相当完美的解决方案了，但最近发现了一款非常实用的 WSL 管理软件：<a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL0REb1NvbGl0YXJ5L0x4UnVuT2ZmbGluZQ==" target="_blank" rel="noopener">LxRunOffline</a>，它可以安装任意发行版到任意目录、转移已安装的 WSL 目录、备份 WSL、设置默认用户和修改环境变量等操作，完全碾压 <code>wsl</code>、<code>wslconfig</code> 这些简陋原生管理命令。<a id="more"></a></p>
<h2 id="安装-LxRunOffline"><a href="#安装-LxRunOffline" class="headerlink" title="安装 LxRunOffline"></a>安装 LxRunOffline</h2><ul>
<li>普通手动安装：下载解压 <a href="https://github.com/DDoSolitary/LxRunOffline/releases" target="_blank" rel="noopener">LxRunOffline</a> ，并设置环境变量。</li>
<li>使用 <a href="https://chocolatey.org/" target="_blank" rel="noopener">Chocolatey</a> 安装。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">choco install lxrunoffline</span><br></pre></td></tr></table></figure>
<ul>
<li>使用 <a href="https://scoop.sh/" target="_blank" rel="noopener">Scoop</a> 安装。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scoop bucket add extras</span><br><span class="line">scoop install lxrunoffline</span><br></pre></td></tr></table></figure>
<h2 id="LxRunOffline-选项及参数"><a href="#LxRunOffline-选项及参数" class="headerlink" title="LxRunOffline 选项及参数"></a>LxRunOffline 选项及参数</h2><p>开发者并没有在 GitHub 上给出任何选项参数说明，你需要在终端内直接输入<code>lxrunoffline</code>查看，这里列举一下当前版本(3.4.0)的选项说明。相关的参数可以直接输入选项查看，比如<code>lxrunoffline i</code>。</p>
<p><details style="display: block; color: rgb(68, 68, 68); font-family: system, -apple-system, BlinkMacSystemFont, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Segoe UI&quot;, &quot;Heiti SC&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Hiragino Sans GB&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 15.96px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: list-item;">点击查看选项说明</summary></details></p>
<h2 id="使用-LxRunOffline-安装-WSL"><a href="#使用-LxRunOffline-安装-WSL" class="headerlink" title="使用 LxRunOffline 安装 WSL"></a>使用 LxRunOffline 安装 WSL</h2><p>与微软商店的安装方式不同，LxRunOffline 安装 WSL 更灵活，它可以安装任意发行版到任意目录，还可以自定义 WSL 名称。</p>
<p>如果你没有使用过 WSL ，首先以管理员身份运行 PowerShell ( WIN+X , A )，输入下面的命令开启“适用于 Linux 的 Windows 子系统”功能，并重启。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure>
<p>下载 <a href="https://docs.microsoft.com/en-us/windows/wsl/install-manual" target="_blank" rel="noopener">WSL 官方离线包</a>，改后缀名为<code>.zip</code>，解压后可得到名为<code>install.tar.gz</code>的文件。或者在 <a href="https://github.com/DDoSolitary/LxRunOffline/wiki" target="_blank" rel="noopener">LxRunOffline WiKi</a> 中下载大佬们提供的镜像文件。</p>
<p>输入以下命令进行安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline i -n &lt;WSL名称&gt; -d &lt;安装路径&gt; -f &lt;安装包路径&gt;.tar.gz</span><br></pre></td></tr></table></figure>
<blockquote>
<p>加入<code>-s</code>参数可在桌面创建快捷方式。</p>
</blockquote>
<h2 id="使用-LxRunOffline-设置默认用户"><a href="#使用-LxRunOffline-设置默认用户" class="headerlink" title="使用 LxRunOffline 设置默认用户"></a>使用 LxRunOffline 设置默认用户</h2><p>当修改过 WSL 的名称或目录后就无法通过<a href="https://p3terx.com/go/aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93c2wvdXNlci1zdXBwb3J0" target="_blank" rel="noopener">微软官方提供的方法</a>设置默认用户。这时可以使用 LxRunOffline 进行设置。</p>
<h3 id="设置普通用户为默认用户"><a href="#设置普通用户为默认用户" class="headerlink" title="设置普通用户为默认用户"></a>设置普通用户为默认用户</h3><p>使用 LxRunOffline 新安装的 WSL 默认是以 root 用户登录，如果你需要默认以普通用户进行登录，就需要进行下面的操作。</p>
<p>首先运行 WSL ，输入以下命令创建用户：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">useradd -m -s &#x2F;bin&#x2F;bash &lt;用户名&gt;</span><br></pre></td></tr></table></figure>
<p>然后对该用户设置密码，输入命令后会提示输入两次密码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">passwd &lt;用户名&gt;</span><br></pre></td></tr></table></figure>
<p>授予该用户 sudo 权限。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usermod -aG sudo &lt;用户名&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>为了保持和微软商店安装的效果一致，这里提及的方法是把用户添加到 sudo 用户组。其他关于 sudo 权限的设置方法以及免密设置可参考《<a href="https://p3terx.com/archives/linux-grants-normal-user-sudo-permission.html" target="_blank" rel="noopener">Linux 中授予普通用户 sudo 权限的正确方法</a>》这篇文章。</p>
</blockquote>
<p>查看用户 UID ，一般是<code>1000</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id -u &lt;用户名&gt;</span><br></pre></td></tr></table></figure>
<p>按<code>Ctrl</code>+<code>D</code>退出 WSL ，在 PowerShell 中输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline su -n &lt;WSL名称&gt; -v 1000</span><br></pre></td></tr></table></figure>
<h3 id="设置-root-为默认用户"><a href="#设置-root-为默认用户" class="headerlink" title="设置 root 为默认用户"></a>设置 root 为默认用户</h3><p>root 用户的 UID 为<code>0</code>，所以可以直接在 PowerShell 输入以下命令进行设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline su -n &lt;WSL名称&gt; -v 0</span><br></pre></td></tr></table></figure>
<h2 id="使用-LxRunOffline-转移-WSL-安装目录"><a href="#使用-LxRunOffline-转移-WSL-安装目录" class="headerlink" title="使用 LxRunOffline 转移 WSL 安装目录"></a>使用 LxRunOffline 转移 WSL 安装目录</h2><p>LxRunOffline 可以对系统中已经安装的 WSL 进行目录转移操作，拯救爆满的C盘。</p>
<p>查看系统中已安装的 WSL 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline l</span><br></pre></td></tr></table></figure>
<blockquote>
<p>类似于<code>wsl -l</code>。LxRunOffline 不会显示默认 WSL ，查看默认 WSL 需要使用 <code>lxrunoffline gd</code>命令。</p>
</blockquote>
<p>输入命令对 WSL 的目录进行移动。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline m -n &lt;WSL名称&gt; -d &lt;路径&gt;</span><br></pre></td></tr></table></figure>
<p>最后查看路径，进行确认。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline di -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure>
<h2 id="使用-LxRunOffline-备份和恢复-WSL"><a href="#使用-LxRunOffline-备份和恢复-WSL" class="headerlink" title="使用 LxRunOffline 备份和恢复 WSL"></a>使用 LxRunOffline 备份和恢复 WSL</h2><p>使用 LxRunOffline 可以方便的对 WSL 进行备份和恢复，同样可以实现转移的操作，而且还可以在转移到其它电脑上。</p>
<h3 id="备份-WSL"><a href="#备份-WSL" class="headerlink" title="备份 WSL"></a>备份 WSL</h3><p>查看系统中已安装的 WSL 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wsl -l</span><br></pre></td></tr></table></figure>
<p>然后输入需要备份的 WSL 名称和备份的目标路径。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline e -n &lt;WSL名称&gt; -f &lt;压缩包路径&gt;.tar.gz</span><br></pre></td></tr></table></figure>
<blockquote>
<p>类似但不等同于<code>wsl --export &lt;WSL名称&gt; &lt;压缩包路径&gt;.tar</code>。LxRunOffline 备份完会生成一个<code>.xml</code>后缀的同名配置文件，比如<code>WSL.tar.gz.xml</code>。</p>
</blockquote>
<h3 id="恢复-WSL"><a href="#恢复-WSL" class="headerlink" title="恢复 WSL"></a>恢复 WSL</h3><p>输入以下命令可以恢复已备份的 WSL，和安装是相同的命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline i -n &lt;WSL名称&gt; -d &lt;安装路径&gt; -f &lt;压缩包路径&gt;.tar.gz</span><br></pre></td></tr></table></figure>
<blockquote>
<p>类似但不等同于<code>wsl --import &lt;WSL名称&gt; &lt;安装路径&gt; &lt;压缩包路径&gt;.tar</code>。LxRunOffline 会读取备份时生成的配置文件并写入配置，前提是同目录且同名。否则你需要加入<code>-c</code>参数指定配置文件。</p>
</blockquote>
<h2 id="使用-LxRunOffline-运行-WSL"><a href="#使用-LxRunOffline-运行-WSL" class="headerlink" title="使用 LxRunOffline 运行 WSL"></a>使用 LxRunOffline 运行 WSL</h2><p>和原生运行方式本质上是一样的。</p>
<h3 id="创建快捷方式"><a href="#创建快捷方式" class="headerlink" title="创建快捷方式"></a>创建快捷方式</h3><p>使用微软应用商店安装的 WSL 会在开始菜单添加应用图标（快捷方式），而使用 LxRunOffline 安装 WSL 时可以通过添加<code>-s</code>参数在桌面创建快捷方式。如果你安装时忘记添加参数，可以使用以下命令进行创建。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline s -n &lt;WSL名称&gt; -f &lt;快捷方式路径&gt;.lnk</span><br></pre></td></tr></table></figure>
<h3 id="使用命令运行指定-WSL"><a href="#使用命令运行指定-WSL" class="headerlink" title="使用命令运行指定 WSL"></a>使用命令运行指定 WSL</h3><p>在有多个 WSL 的情况下，可以指定运行某个发行版。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline r -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>等同于<code>wsl -d &lt;WSL名称&gt;</code></p>
</blockquote>
<h3 id="设置默认-WSL"><a href="#设置默认-WSL" class="headerlink" title="设置默认 WSL"></a>设置默认 WSL</h3><p>设置默认 WSL 后，可以在 <code>cmd</code>和 <code>powershell</code> 中输入 <code>wsl</code> 直接调用默认的 WSL 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline sd -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>等同于<code>wsl -s &lt;WSL名称&gt;</code></p>
</blockquote>
<h2 id="使用-LxRunOffline-修改-WSL-名称"><a href="#使用-LxRunOffline-修改-WSL-名称" class="headerlink" title="使用 LxRunOffline 修改 WSL 名称"></a>使用 LxRunOffline 修改 WSL 名称</h2><p>查看 WSL 名称。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wsl -l</span><br></pre></td></tr></table></figure>
<p>查看 WSL 安装目录。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline di -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure>
<p>导出指定的 WSL 配置文件到目标路径。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline ec -n &lt;WSL名称&gt; -f &lt;配置文件路径&gt;.xml</span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置信息可以输入<code>lxrunoffline sm -n &lt;WSL名称&gt;</code>查看</p>
</blockquote>
<p>取消注册（这个操作不会删除目录）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline ur -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure>
<p>使用新名称注册</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lxrunoffline rg -n &lt;WSL名称&gt; -d &lt;WSL路径&gt; -c &lt;配置文件路径&gt;.xml</span><br></pre></td></tr></table></figure>
<hr>
<p>推荐阅读：《<a href="https://p3terx.com/archives/the-strongest-terminal-solution-under-windows-10.html" target="_blank" rel="noopener">打造 Windows 10 下最强终端方案：WSL + Terminus + Oh My Zsh + The Fuck</a>》</p>
<p>了解更多 WSL 使用技巧<a href="https://p3terx.com/tag/WSL/" target="_blank" rel="noopener">点这里</a></p>
<p>本文转自：</p>
<p><strong>本文作者：</strong><a href="https://p3terx.com/" target="_blank" rel="noopener">P3TERX</a></p>
<p><strong>本文链接：</strong><a href="https://p3terx.com/archives/manage-wsl-with-lxrunoffline.html" target="_blank" rel="noopener">https://p3terx.com/archives/manage-wsl-with-lxrunoffline.html</a></p>
<p><strong>版权声明：</strong>本博客所有文章除特别声明外，均采用 <a href="https://p3terx.com/go/aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo" target="_blank" rel="noopener">CC BY-NC-SA 4.0</a> 许可协议。非商业转载及引用请注明出处（作者、原文链接），商业转载请联系作者获得授权。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10 + WSL + vscode编程环境配置</title>
    <url>/2019/10/21/Windows10-+-WSL-+-vscode%E7%BC%96%E7%A8%8B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>Windows Subsystem Linux是微软在Windows10平台推出的Linux子系统方案，可以实现VMware虚拟机安装Linux系统的大部分功能，并且运行效率更高。同时相较于模拟Linux开发环境的MinGW方案，WSL几乎就是原生的Linux系统，能够兼容大部分Linux版本的软件，因此作为开发环境配置也更加灵活。同时VScode官方推出了WSL远程开发套件，使得在Windows平台使用Linux开发环境变得十分容易。<a id="more"></a></p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li><p>Visual Studio Code</p>
<p>下载<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">vscode</a>安装</p>
</li>
<li><p>Windows Subsystem Linux</p>
<p>使用Windows商店或者LxRunOffline安装Ubuntu-18.04lts</p>
</li>
</ol>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>打开vsvode，选择extension，安装Remote Development，获得Remote WSL.</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g8647b8gh7j21hc0slwiy.jpg" alt="1.png"></p>
<p>此时左下角显示WSL字样，点击选择Remote-WSL:New Window，稍等片刻即连接到WSL</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g8649dvf3ij20lv08r74f.jpg" alt="2.png"></p>
<p>终端已切换至Linux命令行</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g864c1luu3j218q0cb3ym.jpg" alt="3.png"></p>
<p>在WSL中安装<strong>C/C++</strong>插件：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g864e77ldkj21hc0slwi3.jpg" alt="4.png"></p>
<p>打开终端安装编译器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get intall build-essential gdb</span><br></pre></td></tr></table></figure>
<h2 id="测试算例"><a href="#测试算例" class="headerlink" title="测试算例"></a>测试算例</h2><p>新建一个项目目录，项目根目录添加文件夹命名为<code>.vscode</code>,在<code>.vscode</code>下新建两个文件<code>launch.json</code>和<code>tasks.json</code>，文件内容如下</p>
<h3 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Use IntelliSense to learn about possible attributes.</span></span><br><span class="line">    <span class="comment">// Hover to view descriptions of existing attributes.</span></span><br><span class="line">    <span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"(gdb) Launch"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"program"</span>: <span class="string">"$&#123;workspaceFolder&#125;/$&#123;fileBasenameNoExtension&#125;"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [],</span><br><span class="line">            <span class="attr">"stopAtEntry"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">            <span class="attr">"environment"</span>: [],</span><br><span class="line">            <span class="attr">"externalConsole"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"MIMode"</span>: <span class="string">"gdb"</span>,</span><br><span class="line">            <span class="attr">"setupCommands"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"description"</span>: <span class="string">"Enable pretty-printing for gdb"</span>,</span><br><span class="line">                    <span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span><br><span class="line">                    <span class="attr">"ignoreFailures"</span>: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>注意：externalConsole的作用是调用外部终端显示结果，针对WSL需设为falese，否则在调试时会卡住并出现Wait for connection completion.的问题。在launch.json中可以添加 “logging”: { “engineLogging”: true, “trace”: true, “traceResponse”: true }显示详细信息。</em></p>
<h3 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks.json"></a>tasks.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"2.0.0"</span>,</span><br><span class="line">    <span class="attr">"tasks"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"shell"</span>,</span><br><span class="line">            <span class="attr">"label"</span>: <span class="string">"gcc build active file"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"/usr/bin/g++"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-g"</span>,</span><br><span class="line">                <span class="string">"$&#123;file&#125;"</span>,</span><br><span class="line">                <span class="string">"-o"</span>,</span><br><span class="line">                <span class="string">"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"options"</span>: &#123;</span><br><span class="line">                <span class="attr">"cwd"</span>: <span class="string">"/usr/bin"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"problemMatcher"</span>: [</span><br><span class="line">                <span class="string">"$gcc"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"group"</span>: <span class="string">"build"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"shell"</span>,</span><br><span class="line">            <span class="attr">"label"</span>: <span class="string">"g++ build active file"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"/usr/bin/g++"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-g"</span>,</span><br><span class="line">                <span class="string">"$&#123;file&#125;"</span>,</span><br><span class="line">                <span class="string">"-o"</span>,</span><br><span class="line">                <span class="string">"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"options"</span>: &#123;</span><br><span class="line">                <span class="attr">"cwd"</span>: <span class="string">"/usr/bin"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这两个文件也可以在Debug时根据自动生成的模板按实际情况修改。</p>
<h3 id="添加测试代码"><a href="#添加测试代码" class="headerlink" title="添加测试代码"></a>添加测试代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"hello world"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>添加断点，按F5进行调试</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g864ucusp1j21hc0sljty.jpg" alt="5.png"></p>
<h2 id="调用MKL函数库"><a href="#调用MKL函数库" class="headerlink" title="调用MKL函数库"></a>调用MKL函数库</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://software.intel.com/en-us/mkl" target="_blank" rel="noopener">https://software.intel.com/en-us/mkl</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol>
<li><p>解压至任意目录（安装后可删除）</p>
</li>
<li><p>执行 <code>sudo sh ./install.sh</code> 默认安装至 /opt/, 可配置安装路径。</p>
</li>
<li><p>在 /etc/ld.so.conf.d 下创建名为 intel-mkl.conf 的文件，内容为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/opt/intel/mkl/lib/intel64</span><br><span class="line">/opt/intel/lib/intel64</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ldconfig -v</span><br><span class="line">/opt/intel/mkl/bin/mklvars.sh intel64 mod</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>具体可参考<a href="https://software.intel.com/en-us/mkl-linux-developer-guide-scripts-to-set-environment-variables" target="_blank" rel="noopener">官方说明</a></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>测试代码<a href="https://software.intel.com/en-us/product-code-samples" target="_blank" rel="noopener">下载地址</a>，以dgemm_example.c为例</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> min(x,y) (((x) &lt; (y)) ? (x) : (y))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mkl.h"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *A, *B, *C;</span><br><span class="line">    <span class="keyword">int</span> m, n, p, i, j;</span><br><span class="line">    <span class="keyword">double</span> alpha, beta;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"\n This example computes real matrix C=alpha*A*B+beta*C using \n"</span></span><br><span class="line">            <span class="string">" Intel(R) MKL function dgemm, where A, B, and  C are matrices and \n"</span></span><br><span class="line">            <span class="string">" alpha and beta are double precision scalars\n\n"</span>);</span><br><span class="line"> </span><br><span class="line">    m = <span class="number">2000</span>, p = <span class="number">200</span>, n = <span class="number">1000</span>;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">" Initializing data for matrix multiplication C=A*B for matrix \n"</span></span><br><span class="line">            <span class="string">" A(%ix%i) and matrix B(%ix%i)\n\n"</span>, m, p, p, n);</span><br><span class="line">    alpha = <span class="number">1.0</span>; beta = <span class="number">0.0</span>;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">" Allocating memory for matrices aligned on 64-byte boundary for better \n"</span></span><br><span class="line">            <span class="string">" performance \n\n"</span>);</span><br><span class="line">    A = (<span class="keyword">double</span> *)mkl_malloc( m*p*<span class="keyword">sizeof</span>( <span class="keyword">double</span> ), <span class="number">64</span> );</span><br><span class="line">    B = (<span class="keyword">double</span> *)mkl_malloc( p*n*<span class="keyword">sizeof</span>( <span class="keyword">double</span> ), <span class="number">64</span> );</span><br><span class="line">    C = (<span class="keyword">double</span> *)mkl_malloc( m*n*<span class="keyword">sizeof</span>( <span class="keyword">double</span> ), <span class="number">64</span> );</span><br><span class="line">    <span class="keyword">if</span> (A == <span class="literal">NULL</span> || B == <span class="literal">NULL</span> || C == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">"\n ERROR: Can't allocate memory for matrices. Aborting... \n\n"</span>);</span><br><span class="line">        mkl_free(A);</span><br><span class="line">        mkl_free(B);</span><br><span class="line">        mkl_free(C);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">" Intializing matrix data \n\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (m*p); i++) &#123;</span><br><span class="line">        A[i] = (<span class="keyword">double</span>)(i+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (p*n); i++) &#123;</span><br><span class="line">        B[i] = (<span class="keyword">double</span>)(-i<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (m*n); i++) &#123;</span><br><span class="line">        C[i] = <span class="number">0.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">" Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface \n\n"</span>);</span><br><span class="line">    cblas_dgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, </span><br><span class="line">                m, n, p, alpha, A, p, B, n, beta, C, n);</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"\n Computations completed.\n\n"</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">" Top left corner of matrix A: \n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;min(m,<span class="number">6</span>); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;min(p,<span class="number">6</span>); j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span> (<span class="string">"%12.0f"</span>, A[j+i*p]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"\n Top left corner of matrix B: \n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;min(p,<span class="number">6</span>); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;min(n,<span class="number">6</span>); j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span> (<span class="string">"%12.0f"</span>, B[j+i*n]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"\n Top left corner of matrix C: \n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;min(m,<span class="number">6</span>); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;min(n,<span class="number">6</span>); j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span> (<span class="string">"%12.5G"</span>, C[j+i*n]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">"\n Deallocating memory \n\n"</span>);</span><br><span class="line">    mkl_free(A);</span><br><span class="line">    mkl_free(B);</span><br><span class="line">    mkl_free(C);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">" Example completed. \n\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译链接命令可参考Intel官方工具<a href="https://software.intel.com/en-us/articles/intel-mkl-link-line-advisor/" target="_blank" rel="noopener">Intel® Math Kernel Library Link Line Advisor | Intel® Software</a></p>
<p>在环境变量中设置MKLROOT变量为MKL安装目录，并source生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> MKLROOT=<span class="string">"/opt/intel/mkl"</span></span><br></pre></td></tr></table></figure>
<p>编译命令</p>
<blockquote>
<p>g++ -c dgemm_example.c -fdefault-integer-8 -m64 -I${MKLROOT}/include</p>
</blockquote>
<p>链接命令</p>
<blockquote>
<p>g++ -o mkl_first.out dgemm_example.o  -L${MKLROOT}/lib/intel64 -Wl,—no-as-needed -lmkl_gf_ilp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl </p>
</blockquote>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p>.<br>├── .vscode<br>│   ├── launch.json<br>│   └── tasks.json<br>├── Makefile<br>├── release<br>│   ├── dgemm_example<br>│   └── dgemm_example.o<br>└── src<br>​    └── dgemm_example.f</p>
<p>可由tree生成结构树，在wsl中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install tree</span><br></pre></td></tr></table></figure>
<ul>
<li>tree -a 显示包括隐藏文件的所有文件</li>
<li>tree -d 只显示文件夹；</li>
<li>tree -L n 显示项目的层级。n表示层级数。比如想要显示项目三层结构，可以用tree -l 3；</li>
<li>tree -I pattern 用于过滤不想要显示的文件或者文件夹。比如你想要过滤项目中的node_modules文件夹，可以使用tree -I “node_modules”；</li>
<li>tree &gt; tree.md 将项目结构输出到tree.md这个文件。</li>
</ul>
<h3 id="makefile"><a href="#makefile" class="headerlink" title="makefile"></a>makefile</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># SAMPLE SOURCE CODE - SUBJECT TO THE TERMS OF SAMPLE CODE LICENSE AGREEMENT,</span></span><br><span class="line"><span class="comment"># http://software.intel.com/en-us/articles/intel-sample-source-code-license-agreement/</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright 2005-2018 Intel Corporation</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># THIS FILE IS PROVIDED "AS IS" WITH NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT</span></span><br><span class="line"><span class="comment"># NOT LIMITED TO ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR</span></span><br><span class="line"><span class="comment"># PURPOSE, NON-INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># =============================================================</span></span><br><span class="line"></span><br><span class="line">FC := gfortran</span><br><span class="line">SRCDIR := src</span><br><span class="line">BUILDDIR := release</span><br><span class="line">LIBFLAGS_LINK :=  -L$&#123;MKLROOT&#125;/lib/intel64 -Wl,--no-as-needed -lmkl_gf_ilp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl</span><br><span class="line">LIBFLAGS_COMPILER :=  -fdefault-integer-8 -m64 -I$&#123;MKLROOT&#125;/<span class="keyword">include</span></span><br><span class="line"></span><br><span class="line"><span class="section">all: <span class="variable">$(BUILDDIR)</span>/dgemm_example</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(BUILDDIR)</span>/%: <span class="variable">$(BUILDDIR)</span>/%.o</span><br><span class="line">	<span class="variable">$(FC)</span> -g <span class="variable">$&lt;</span> <span class="variable">$(LIBFLAGS_LINK)</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(BUILDDIR)</span>/%.o: <span class="variable">$(SRCDIR)</span>/%.f</span><br><span class="line">	@mkdir -p <span class="variable">$(BUILDDIR)</span></span><br><span class="line">	<span class="variable">$(FC)</span> -g -c <span class="variable">$&lt;</span> <span class="variable">$(LIBFLAGS_COMPILER)</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="section">run_dgemm_example: <span class="variable">$(BUILDDIR)</span>/dgemm_example</span></span><br><span class="line">	./<span class="variable">$(BUILDDIR)</span>/dgemm_example</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	@echo <span class="string">" Cleaning..."</span></span><br><span class="line">	@rm -fr <span class="variable">$(BUILDDIR)</span> 2&gt;/dev/null || true</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: clean</span></span><br><span class="line"><span class="section">.PRECIOUS: <span class="variable">$(BUILDDIR)</span>/%.o</span></span><br></pre></td></tr></table></figure>
<p>dgemm_example.f</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!==============================================================</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">! SAMPLE SOURCE CODE - SUBJECT TO THE TERMS OF SAMPLE CODE LICENSE AGREEMENT,</span></span><br><span class="line"><span class="comment">! http://software.intel.com/en-us/articles/intel-sample-source-code-license-agreement/</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">! Copyright 2016-2018 Intel Corporation</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">! THIS FILE IS PROVIDED "AS IS" WITH NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT</span></span><br><span class="line"><span class="comment">! NOT LIMITED TO ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR</span></span><br><span class="line"><span class="comment">! PURPOSE, NON-INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS.</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">! =============================================================</span></span><br><span class="line"><span class="comment">!*******************************************************************************</span></span><br><span class="line"><span class="comment">!   This example computes real matrix C=alpha*A*B+beta*C using Intel(R) MKL </span></span><br><span class="line"><span class="comment">!   subroutine DGEMM, where A,B, and C are matrices and alpha and beta are </span></span><br><span class="line"><span class="comment">!   double precision scalars. </span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!   In this simple example, practices such as memory management, data alignment, </span></span><br><span class="line"><span class="comment">!   and I/O that are necessary for good programming style and high Intel(R) MKL </span></span><br><span class="line"><span class="comment">!   performance are omitted to improve readability.</span></span><br><span class="line"><span class="comment">!*******************************************************************************</span></span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">PROGRAM</span></span>   MAIN</span><br><span class="line"></span><br><span class="line">      <span class="keyword">IMPLICIT</span> <span class="keyword">NONE</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">DOUBLE</span> <span class="keyword">PRECISION</span> ALPHA, BETA</span><br><span class="line">      <span class="keyword">INTEGER</span>          M, P, N, I, J</span><br><span class="line">      <span class="keyword">PARAMETER</span>        (M=<span class="number">2000</span>, P=<span class="number">200</span>, N=<span class="number">1000</span>)</span><br><span class="line">      <span class="keyword">DOUBLE</span> <span class="keyword">PRECISION</span> A(M,P), B(P,N), C(M,N)</span><br><span class="line"></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"This example computes real matrix C=alpha*A*B+beta*C"</span></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"using Intel(R) MKL function dgemm, where A, B, and C"</span></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"are matrices and alpha and beta are double precision "</span></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"scalars"</span></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">""</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"Initializing data for matrix multiplication C=A*B for "</span></span><br><span class="line">      <span class="built_in">PRINT</span> <span class="number">10</span>, <span class="string">" matrix A("</span>,M,<span class="string">" x"</span>,P, <span class="string">") and matrix B("</span>, P,<span class="string">" x"</span>, N, <span class="string">")"</span></span><br><span class="line"><span class="number">10</span>    <span class="keyword">FORMAT</span>(a,I5,a,I5,a,I5,a,I5,a)</span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">""</span></span><br><span class="line">      ALPHA = <span class="number">1.0</span> </span><br><span class="line">      BETA = <span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"Intializing matrix data"</span></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">""</span></span><br><span class="line">      <span class="keyword">DO</span> I = <span class="number">1</span>, M</span><br><span class="line">          <span class="keyword">DO</span> J = <span class="number">1</span>, P</span><br><span class="line">              A(I,J) = (I-<span class="number">1</span>) * P + J</span><br><span class="line">          <span class="keyword">END</span> <span class="keyword">DO</span></span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">DO</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">DO</span> I = <span class="number">1</span>, P</span><br><span class="line">          <span class="keyword">DO</span> J = <span class="number">1</span>, N</span><br><span class="line">              B(I,J) = -((I-<span class="number">1</span>) * N + J)</span><br><span class="line">          <span class="keyword">END</span> <span class="keyword">DO</span></span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">DO</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">DO</span> I = <span class="number">1</span>, M</span><br><span class="line">          <span class="keyword">DO</span> J = <span class="number">1</span>, N</span><br><span class="line">              C(I,J) = <span class="number">0.0</span></span><br><span class="line">          <span class="keyword">END</span> <span class="keyword">DO</span></span><br><span class="line">      <span class="keyword">END</span> <span class="keyword">DO</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"Computing matrix product using Intel(R) MKL DGEMM "</span></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"subroutine"</span></span><br><span class="line">      <span class="keyword">CALL</span> DGEMM(<span class="string">'N'</span>,<span class="string">'N'</span>,M,N,P,ALPHA,A,M,B,P,BETA,C,M)</span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"Computations completed."</span></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">""</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"Top left corner of matrix A:"</span></span><br><span class="line">      <span class="built_in">PRINT</span> <span class="number">20</span>, ((A(I,J), J = <span class="number">1</span>,<span class="built_in">MIN</span>(P,<span class="number">6</span>)), I = <span class="number">1</span>,<span class="built_in">MIN</span>(M,<span class="number">6</span>))</span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">""</span></span><br><span class="line"></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"Top left corner of matrix B:"</span></span><br><span class="line">      <span class="built_in">PRINT</span> <span class="number">20</span>, ((B(I,J),J = <span class="number">1</span>,<span class="built_in">MIN</span>(N,<span class="number">6</span>)), I = <span class="number">1</span>,<span class="built_in">MIN</span>(P,<span class="number">6</span>))</span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">""</span></span><br><span class="line"></span><br><span class="line"> <span class="number">20</span>   <span class="keyword">FORMAT</span>(<span class="number">6</span>(F12<span class="number">.0</span>,<span class="number">1</span>x))</span><br><span class="line"></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"Top left corner of matrix C:"</span></span><br><span class="line">      <span class="built_in">PRINT</span> <span class="number">30</span>, ((C(I,J), J = <span class="number">1</span>,<span class="built_in">MIN</span>(N,<span class="number">6</span>)), I = <span class="number">1</span>,<span class="built_in">MIN</span>(M,<span class="number">6</span>))</span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">""</span></span><br><span class="line"></span><br><span class="line"> <span class="number">30</span>   <span class="keyword">FORMAT</span>(<span class="number">6</span>(ES12<span class="number">.4</span>,<span class="number">1</span>x))</span><br><span class="line"></span><br><span class="line">      <span class="built_in">PRINT</span> *, <span class="string">"Example completed."</span></span><br><span class="line">      <span class="keyword">STOP</span> </span><br><span class="line"></span><br><span class="line">      <span class="keyword">END</span></span><br></pre></td></tr></table></figure>
<h3 id="launch-json-1"><a href="#launch-json-1" class="headerlink" title="launch.json"></a>launch.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Use IntelliSense to learn about possible attributes.</span></span><br><span class="line">    <span class="comment">// Hover to view descriptions of existing attributes.</span></span><br><span class="line">    <span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"(gdb) Launch"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"program"</span>: <span class="string">"$&#123;workspaceFolder&#125;/release/dgemm_example"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [],</span><br><span class="line">            <span class="attr">"stopAtEntry"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">            <span class="attr">"environment"</span>: [],</span><br><span class="line">            <span class="attr">"externalConsole"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"MIMode"</span>: <span class="string">"gdb"</span>,</span><br><span class="line">            <span class="attr">"preLaunchTask"</span>: <span class="string">"shell"</span>,</span><br><span class="line">            <span class="attr">"setupCommands"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"description"</span>: <span class="string">"Enable pretty-printing for gdb"</span>,</span><br><span class="line">                    <span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span><br><span class="line">                    <span class="attr">"ignoreFailures"</span>: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="tasks-json-1"><a href="#tasks-json-1" class="headerlink" title="tasks.json"></a>tasks.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"2.0.0"</span>,</span><br><span class="line">    <span class="attr">"tasks"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"label"</span>: <span class="string">"shell"</span>, <span class="comment">// 任务名称，与launch.json的preLaunchTask相对应</span></span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"make"</span>, <span class="comment">// 在shell中使用命令，如需加参数，可再添加args属性</span></span><br><span class="line">            <span class="attr">"type"</span>:<span class="string">"shell"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>打开makefile，F5调试</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g867pmwpz2j21hc0sl0xj.jpg" alt="6.png"></p>
<h2 id="Python环境搭建"><a href="#Python环境搭建" class="headerlink" title="Python环境搭建"></a>Python环境搭建</h2><ol>
<li><p>首先在WSL下安装Anaconda</p>
</li>
<li><p>在vscode扩展插件商店里搜索python并安装至WSL</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g9l7ysuyl9j21af0kvwgx.jpg" alt="1.JPG"></p>
</li>
<li><p>Ctrl+Shift+P打开搜索栏，输入Remote Settings</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g9l7ysp93bj20gx0dkzkv.jpg" alt="2.JPG"></p>
</li>
<li><p>配置pylint和python路径pylintPath和pythonPath</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g9l7yslgtaj20k009oq3c.jpg" alt="3.JPG"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu系统Visual Studio Code搭建Fortran调试环境</title>
    <url>/2019/10/19/Ubuntu%E7%B3%BB%E7%BB%9FVisual-Studio-Code%E6%90%AD%E5%BB%BAFortran%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>Windows平台除了商业IDE例如微软的Visual Studio以外，还可以利用免费版VS code自行搭建多种语言的开发环境。VS code拥有大量的插件库，可以灵活适配各种语言的开发需要。本文介绍如何利用Vscode搭建Fortran的开发环境。<a id="more"></a></p>
<h1 id="安装-Visual-Studio-Code-扩展"><a href="#安装-Visual-Studio-Code-扩展" class="headerlink" title="安装 Visual Studio Code 扩展"></a>安装 Visual Studio Code 扩展</h1><p>查看&gt;扩展，搜索安装以下扩展</p>
<ul>
<li><a href="https://link.jianshu.com/?t=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DGimly81.fortran" target="_blank" rel="noopener">Gimly81.fortran</a><br>fortran 语言支持及 fortran 文件代码高亮</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g85fpsh28qj20p009w0t4.jpg" alt="1.jpg"></p>
<p>Gimly81.fortran</p>
<ul>
<li><a href="https://link.jianshu.com/?t=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Dms-vscode.cpptools" target="_blank" rel="noopener">ms-vscode.cpptools</a><br>微软官方的C/C++的gdb debugger，也可以用来调试fortran</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g85fpsl835j20p0097gly.jpg" alt="2.jpg"></p>
<p>ms-vscode.cpptools</p>
<ul>
<li><a href="https://link.jianshu.com/?t=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Dekibun.fortranbreaker" target="_blank" rel="noopener">ekibun.fortranbreaker</a><br>为 fortran 文件增加调试断点支持</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g85fpsl5w5j20pm09s3yv.jpg" alt="3.jpg"></p>
<p>ekibun.fortranbreaker</p>
<h1 id="配置-Fortran-调试环境"><a href="#配置-Fortran-调试环境" class="headerlink" title="配置 Fortran 调试环境"></a>配置 Fortran 调试环境</h1><ol>
<li>文件&gt;打开文件夹，选择项目路径</li>
<li>新建<code>.vscode</code>文件夹</li>
<li>创建<code>launch.json</code>启动配置文件</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"Fortran Launch (GDB)"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"cppdbg"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"targetArchitecture"</span>: <span class="string">"x64"</span>,</span><br><span class="line">            <span class="attr">"program"</span>: <span class="string">"$&#123;workspaceRoot&#125;/$&#123;fileBasenameNoExtension&#125;.out"</span>,</span><br><span class="line">            <span class="attr">"miDebuggerPath"</span>: <span class="string">"gdb"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [],</span><br><span class="line">            <span class="attr">"stopAtEntry"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"cwd"</span>: <span class="string">"$&#123;workspaceRoot&#125;"</span>,</span><br><span class="line">            <span class="attr">"externalConsole"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">"preLaunchTask"</span>: <span class="string">"gfortran"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>创建<code>tasks.json</code>配置文件</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"2.0.0"</span>,</span><br><span class="line">    <span class="attr">"command"</span>: <span class="string">"gfortran"</span>,</span><br><span class="line">    <span class="attr">"args"</span>: [</span><br><span class="line">        <span class="string">"-g"</span>,</span><br><span class="line">        <span class="string">"$&#123;file&#125;"</span>,</span><br><span class="line">        <span class="string">"-o"</span>,</span><br><span class="line">        <span class="string">"$&#123;workspaceRoot&#125;/$&#123;fileBasenameNoExtension&#125;.out"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>在项目根目录新建<code>.for</code>文件，至此文件目录如下</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g85fstv5oij20p008vwfy.jpg" alt="11246265-9ff8e4cbc876ed96.png"></p>
<p>文件目录</p>
<ol>
<li>编写代码，调试&gt;启动调试</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g85fpswsi6j20xc0gydh1.jpg" alt="4.jpg"></p>
<p>调试</p>
<p>以上</p>
<p>转自<a href="https://www.jianshu.com/p/98e16631c852" target="_blank" rel="noopener">简书</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>fortran</tag>
      </tags>
  </entry>
  <entry>
    <title>ConvergenceWarning：Liblinear failed to converge, increase the number of iterations</title>
    <url>/2019/10/14/ConvergenceWarning-Liblinear-failed-to-converge,-increase-the-number-of-iterations/</url>
    <content><![CDATA[<h3 id="Q"><a href="#Q" class="headerlink" title="Q:"></a>Q:</h3><p>Running the code of linear binary pattern for Adrian. This program runs but gives the following warning:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Python27\lib\site-packages\sklearn\svm\base.py:<span class="number">922</span>: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.</span><br><span class="line"> <span class="string">"the number of iterations."</span>, ConvergenceWarning</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="A"><a href="#A" class="headerlink" title="A:"></a>A:</h3><p>Normally when an optimization algorithm does not converge, it is usually because the problem is not well-conditioned, perhaps due to a poor scaling of the decision variables. There are a few things you can try.</p>
<ol>
<li>Normalize your training data so that the problem hopefully becomes more well conditioned, which in turn can speed up convergence. One possibility is to scale your data to 0 mean, unit standard deviation using <a href="http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html" target="_blank" rel="noopener">Scikit-Learn’s StandardScaler</a> for an example. Note that you have to apply the StandardScaler fitted on the training data to the test data.</li>
<li>Related to 1), make sure the other arguments such as regularization weight, <code>C</code>, is set appropriately.</li>
<li>Set <code>max_iter</code> to a larger value. The default is 1000.</li>
</ol>
<h4 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h4><p>I am seeing that warning in this notebook: <a href="https://www.kaggle.com/ninovanhooff/svm-for-fraud-detection" target="_blank" rel="noopener">kaggle.com/ninovanhooff/svm-for-fraud-detection</a> Note that it seems to be that all variables used for train and test are normalized I did not set any classifier parameters though, but unsure of what values of C to use. Should I set C based on my investigation of the coefficients? (See the bar plot in that notebook) – <a href="https://stackoverflow.com/users/923557/nino-van-hooff" target="_blank" rel="noopener">Nino van Hooff</a> <a href="https://stackoverflow.com/questions/52670012/convergencewarning-liblinear-failed-to-converge-increase-the-number-of-iterati#comment93528349_52828900" target="_blank" rel="noopener">Nov 15 ‘18 at 16:32</a></p>
<p>Answer to my previous comment: <strong>As suggested by the scikit docs, I set dual to false.</strong> This removed the warning and seemed to have no influence on classification performance – <a href="https://stackoverflow.com/users/923557/nino-van-hooff" target="_blank" rel="noopener">Nino van Hooff</a> <a href="https://stackoverflow.com/questions/52670012/convergencewarning-liblinear-failed-to-converge-increase-the-number-of-iterati#comment93551597_52828900" target="_blank" rel="noopener">Nov 16 ‘18 at 10:55</a> </p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>svm</tag>
      </tags>
  </entry>
  <entry>
    <title>使用EasyConnect访问校园网段资源</title>
    <url>/2019/10/02/%E4%BD%BF%E7%94%A8EasyConnect%E8%AE%BF%E9%97%AE%E6%A0%A1%E5%9B%AD%E7%BD%91%E6%AE%B5%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<p>外网访问瓜大局域网服务器的方法。<a id="more"></a></p>
<p>下载EasyConnect客户端，服务器地址为vpn.nwpu.edu.cn，选择账号登录，账号为学号，登录后即可使用10网段局域网地址访问校园网内自建服务器。</p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>Shadowsocks改IPv6上谷歌学术</title>
    <url>/2019/09/27/Shadowsocks%E6%94%B9IPv6%E4%B8%8A%E8%B0%B7%E6%AD%8C%E5%AD%A6%E6%9C%AF/</url>
    <content><![CDATA[<p>使用IPv6范围谷歌学术绕开谷歌对VPS的反爬虫检测。<a id="more"></a></p>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Vultr的vps从买来就上不了谷歌学术，一直很郁闷，前段日子也是蹭着同学的才能上上谷歌学术。</p>
<p>这几天发现一种好办法，改IPv6，很简单。</p>
<ul>
<li><a href="http://www.tjuyy.com/2018/02/27/google-scholar-ipv6hosts/" target="_blank" rel="noopener">解决vps ip 被Google Scholar屏蔽的问题</a></li>
</ul>
<p>改完就舒服了。</p>
<h3 id="修改hosts"><a href="#修改hosts" class="headerlink" title="修改hosts"></a>修改hosts</h3><ol>
<li><p>在vps中添加ipv6 hosts；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim &#x2F;etc&#x2F;hosts</span><br><span class="line"></span><br><span class="line">## Scholar 学术搜索</span><br><span class="line">2404:6800:4008:c06::be scholar.google.com</span><br><span class="line">2404:6800:4008:c06::be scholar.google.com.hk</span><br><span class="line">2404:6800:4008:c06::be scholar.google.com.tw</span><br><span class="line">2401:3800:4001:10::101f scholar.google.cn #www.google.cn</span><br><span class="line">2404:6800:4008:c06::be scholar.google.com.sg</span><br><span class="line">2404:6800:4008:c06::be scholar.l.google.com</span><br><span class="line">2404:6800:4008:803::2001 scholar.googleusercontent.com</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存hosts后，重启ss就可以了（shadowsocks会缓存IP，不重启ss还是通过IPv4访问scholar）；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssserver -c &#x2F;etc&#x2F;shadowsocks.json -d stop</span><br><span class="line">ssserver -c &#x2F;etc&#x2F;shadowsocks.json -d start</span><br></pre></td></tr></table></figure>
<p>（注意：这里是3个s，一开始没注意还以为哪里出错了。）</p>
</li>
</ol>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>Viewing Fortran Data Types in the Microsoft Debugger</title>
    <url>/2019/07/22/Viewing-Fortran-Data-Types-in-the-Microsoft-Debugger/</url>
    <content><![CDATA[<p><strong>view variables from modules in watch window</strong></p>
<p>This topic applies to Fortran applications for Windows* only. <a id="more"></a></p>
<p>The following general suggestions apply to different types of Fortran data:</p>
<ul>
<li>For scalar (nonarray) data, use the data tips (leave pointer on a variable name) feature or use the <strong>Locals</strong> window or a <strong>Watch</strong> window. Intel® Fortran does not support the <strong>Autos</strong> window.</li>
<li>For single-dimension array data, derived-type data, record structure data, and COMPLEX data, use the <strong>Locals</strong> window or a <strong>Watch</strong> window.</li>
<li>For common blocks exported from a DLL, enter the name of the common block in a <strong>Watch</strong> window. You will be able to view the common block variables like any other structure.</li>
<li>By default, values of named constants (parameters) are not visible in the debugger. To make these visible, add the /debug-parameteres:used option or /debug-parameters:all option when compiling the sources.</li>
</ul>
<p>For information on using Data Tips, the <strong>Locals</strong> window, or a <strong>Watch</strong> window, see <a href="https://scc.ustc.edu.cn/zlsc/tc4600/intel/2017.0.098/compiler_f/common/core/GUID-9284118A-1D27-4C31-B729-45DBFA2106AC.html#GUID-9284118A-1D27-4C31-B729-45DBFA2106AC" target="_blank" rel="noopener">Debugging the Squares Example Program</a>.</p>
<p>The following sections apply to using a <strong>Watch</strong> window:</p>
<ul>
<li><a href="https://scc.ustc.edu.cn/zlsc/tc4600/intel/2017.0.098/compiler_f/common/core/GUID-FBB147E1-8323-48F9-A0DE-1DBC32EAB22B.html#ARRAYSEC" target="_blank" rel="noopener">Specifying Array Sections</a></li>
<li><a href="https://scc.ustc.edu.cn/zlsc/tc4600/intel/2017.0.098/compiler_f/common/core/GUID-FBB147E1-8323-48F9-A0DE-1DBC32EAB22B.html#MODULE" target="_blank" rel="noopener">Specifying Module Variables</a></li>
<li><a href="https://scc.ustc.edu.cn/zlsc/tc4600/intel/2017.0.098/compiler_f/common/core/GUID-FBB147E1-8323-48F9-A0DE-1DBC32EAB22B.html#FORMAT" target="_blank" rel="noopener">Specifying Format Specifiers</a></li>
</ul>
<p>To display a <strong>Watch</strong> window:</p>
<ol>
<li>In the <strong>Debug</strong> menu, select <strong>Windows</strong> &gt; <strong>Watch</strong>.</li>
<li>In the submenu, click Watch 1, 2, 3, or 4.</li>
</ol>
<h2 id="Specifying-Array-Sections"><a href="#Specifying-Array-Sections" class="headerlink" title="Specifying Array Sections"></a>Specifying Array Sections</h2><p>You can specify array sections in a <strong>Watch</strong> window. For example, consider an array declared as:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">integer</span> foo(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<p>You can specify the following statement in a <strong>Watch</strong> window to see the 2nd, 5th, and 8th elements:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">foo(<span class="number">2</span>:<span class="number">10</span>:<span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p>When working with character arrays, this syntax may be combined with a substring specification. Consider the following array declaration:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">character</span>*<span class="number">8</span> chr_arr(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<p>You can specify the following statement in a <strong>Watch</strong> window to display the substring made up of character 3 through 8 of array elements 2 through 5:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">chr_arr(<span class="number">2</span>:<span class="number">5</span>)(<span class="number">3</span>:<span class="number">8</span>)</span><br></pre></td></tr></table></figure>
<p>This support is available for arrays of any type, including array pointers, assumed-shape, allocatable, and assumed-size arrays.</p>
<p>Any valid integer expression can be used when specifying lower bound, upper bound, or stride. If the lower bound is omitted, the array lower bound is used. If the upper bound is omitted, the array upper bound is used. For example, consider the following declaration:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">integer</span> foo(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<p>To display:</p>
<ul>
<li>Elements 1 through 8, specify foo(:8)</li>
<li>Elements 5 through 10, specify foo(5:)</li>
<li>All 10 elements, specify foo(:)</li>
</ul>
<h2 id="Specifying-Module-Variables"><a href="#Specifying-Module-Variables" class="headerlink" title="Specifying Module Variables"></a>Specifying Module Variables</h2><p>To view a module variable in a Watch window, specify the module name, followed by “::”, followed by the variable name.</p>
<p>For example, to watch variable “bar” of module “foo”, specify the following expression:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">foo::bar</span><br></pre></td></tr></table></figure>
<h2 id="Specifying-Format-Specifiers"><a href="#Specifying-Format-Specifiers" class="headerlink" title="Specifying Format Specifiers"></a>Specifying Format Specifiers</h2><p>You can use format specifiers in <strong>Watch</strong> windows to display variables in different data formats.</p>
<p>For example, given a REAL variable ‘foo’ in a program, it is now possible to see ‘foo’ in different floating point notation (by typing “foo,f” “foo,g” or “foo,e” in a <strong>Watch</strong> window) or as an integer (“foo,i” or “foo,d”), a hexadecimal value (“foo,x”), an an octal value (“foo,o”), and so on.</p>
<p>You can change the display format of variables in a <strong>Watch</strong> window using the formatting symbols in the following table:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Symbol</th>
<th>Format</th>
<th>Value</th>
<th>Displays</th>
</tr>
</thead>
<tbody>
<tr>
<td>d,i</td>
<td>signed decimal integer</td>
<td>0xF000F065</td>
<td>-268373915</td>
</tr>
<tr>
<td>o</td>
<td>unsigned octal integer</td>
<td>0xF065</td>
<td>0170145</td>
</tr>
<tr>
<td>x,X</td>
<td>Hexadecimal integer</td>
<td>61541 (decimal)</td>
<td>#0000F065</td>
</tr>
<tr>
<td>f</td>
<td>signed floating-point</td>
<td>3./2.</td>
<td>1.5000000</td>
</tr>
<tr>
<td>e</td>
<td>signed scientific notation</td>
<td>3./2.</td>
<td>0.1500000E+01</td>
</tr>
<tr>
<td>g</td>
<td>signed floating-point or signed scientific notation, whichever is shorter</td>
<td>3./2.</td>
<td>1.500000</td>
</tr>
<tr>
<td>c</td>
<td>Single character</td>
<td>0x0065</td>
<td>‘e’</td>
</tr>
<tr>
<td>s</td>
<td>String</td>
<td>0x0012fde8</td>
<td>“Hello world”</td>
</tr>
</tbody>
</table>
</div>
<p>To use a formatting symbol, type the variable name, followed by a comma and the appropriate symbol. For example, if var has a value of 0x0065, and you want to see the value in character form, type var,c in the<strong>Name</strong> column on the tab of the <strong>Watch</strong> window. When you press ENTER, the character-format value appears:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">var,c = <span class="string">'e'</span></span><br></pre></td></tr></table></figure>
<p>You can use the formatting symbols shown in the following table to format the contents of memory locations:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Symbol</th>
<th>Format</th>
<th>Displays</th>
</tr>
</thead>
<tbody>
<tr>
<td>ma</td>
<td>64 ASCII characters</td>
<td>0x0012ffac .4…0…”.0W&amp;…….1W&amp;.0.:W..1….”..1.JO&amp;.1.2..”..1…0y….1</td>
</tr>
<tr>
<td>m</td>
<td>16 bytes in hexadecimal, followed by 16 ASCII characters</td>
<td>0x0012ffac B3 34 CB 00 84 30 94 80 FF 22 8A 30 57 26 00 00 .4…0…”.0W&amp;..</td>
</tr>
<tr>
<td>mb</td>
<td>16 bytes in hexadecimal, followed by 16 ASCII characters</td>
<td>0x0012ffac B3 34 CB 00 84 30 94 80 FF 22 8A 30 57 26 00 00 .4…0…”.0W&amp;..</td>
</tr>
<tr>
<td>mw</td>
<td>8 words</td>
<td>0x0012ffac 34B3 00CB 3084 8094 22FF 308A 2657 0000</td>
</tr>
<tr>
<td>md</td>
<td>4 doublewords</td>
<td>0x0012ffac 00CB34B3 80943084 308A22FF 00002657</td>
</tr>
</tbody>
</table>
</div>
<p>With the memory location formatting symbols, you can type any value or expression that evaluates to a location.</p>
<p>A formatting character can also follow an expression:</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">rep+<span class="number">1</span>,x</span><br><span class="line">xloc,g</span><br><span class="line"><span class="built_in">count</span>,d</span><br></pre></td></tr></table></figure>
<h3 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h3><p>You can apply formatting symbols to structures, arrays, pointers, and objects as unexpanded variables only. If you expand the variable, the specified formatting affects all members. You cannot apply formatting symbols to individual members.</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>fortran</tag>
      </tags>
  </entry>
  <entry>
    <title>Configuration forpy on Windows with Intel visual fortran complier</title>
    <url>/2019/07/18/Configuration-forpy-on-Windows-with-Intel-visual-fortran-complier/</url>
    <content><![CDATA[<p>forpy is a  library to use Python features in Fortran  (“embedding Python in Fortran”) as this <a href="https://github.com/ylikx/forpy" target="_blank" rel="noopener">Link</a>, configuration of it on Visual Studio, Intel Visual Fortran compiler on Windows 10 follows steps as:<a id="more"></a></p>
<h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol>
<li>switch debug to x64 mode if anaconda is x64</li>
<li>tools-settings-Intel Composer XE-Visual Fortran-Compilers-x64<br> add “C:\ProgramData\Anaconda3\include” to Includes<br> add “C:\ProgramData\Anaconda3\libs” to Libraries<br> where “C:\ProgramData\Anaconda3\” is root path of python.exe</li>
<li>project properties-Fortran-Preprocessor-Preprocess Source File Yes(/fpp)<br> Linker-Input-Additional Dependencies python36.lib (depends on libs)</li>
<li>If step 2 is skipped, “include” path to Fortran-General-Additional Include Directories and “libs” path to Linker-General-Additional Library Directories</li>
</ol>
<h2 id="Notice"><a href="#Notice" class="headerlink" title="Notice:"></a>Notice:</h2><p>If I set PYTHONHOME variable on Windows (my anaconda version 3.6.3) an error like “Fatal Python error: Py_Initialize: unable to load the file system codec ModuleNotFoundError: No module named ‘encodings’  “ will be induced like <a href="https://bugs.python.org/issue27054" target="_blank" rel="noopener">https://bugs.python.org/issue27054</a>. “intro_to_forpy” works well without PYTHONHOME.</p>
<h2 id="update"><a href="#update" class="headerlink" title="update:"></a>update:</h2><p>works with PYTHONHOME too. Configure PYTHONHOME to “C:\ProgramData\Anaconda3\” at first then open VS compiler</p>
<p>use errcheck to check ierror and print error messages.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> errcheck <span class="meta-keyword">if</span>(ierror/=0) then;call err_print;stop;<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>if ierror = -1 and show message about <u>“ImportError: DLL load failed: 找不到指定的模块”</u> when use import_py to import some python module,  reinstall this module with pip may solve this problem.</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>fortran</tag>
      </tags>
  </entry>
  <entry>
    <title>有限元法、有限差分法和有限体积法的区别（转载）</title>
    <url>/2019/06/18/%E6%9C%89%E9%99%90%E5%85%83%E6%B3%95%E3%80%81%E6%9C%89%E9%99%90%E5%B7%AE%E5%88%86%E6%B3%95%E5%92%8C%E6%9C%89%E9%99%90%E4%BD%93%E7%A7%AF%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/</url>
    <content><![CDATA[<p>FDM，FVM和FEM的概念和区别。<a id="more"></a></p>
<p>有限差分方法(FDM)**是计算机数值模拟最早采用的方法，至今仍被广泛运用。该方法将求解域划分为差分网格，用有限个网格节点代替连续的求解域。有限差分法以Taylor级数展开等方法，把控制方程中的导数用网格节点上的函数值的差商代替进行离散，从而建立以网格节点上的值为未知数的代数方程组。该方法是一种直接将微分问题变为代数问题的近似数值解法，数学概念直观，表达简单，是发展较早且比较成熟的数值方法。</p>
<p>对于有限差分格式，从格式的精度来划分，有一阶格式、二阶格式和高阶格式。从差分的空间形式来考虑，可分为中心格式和逆风格式。考虑时间因子的影响，差分格式还可以分为显格式、隐格式、显隐交替格式等。目前常见的差分格式，主要是上述几种形式的组合，不同的组合构成不同的差分格式。差分方法主要适用于有结构网格，网格的步长一般根据实际地形的情况和柯朗稳定条件来决定。</p>
<p>构造差分的方法有多种形式，目前主要采用的是泰勒级数展开方法。其基本的差分表达式主要有三种形式：一阶向前差分、一阶向后差分、一阶中心差分和二阶中心差分等，其中前两种格式为一阶计算精度，后两种格式为二阶计算精度。通过对时间和空间这几种不同差分格式的组合，可以组合成不同的差分计算格式。</p>
<p>有限差分法的主要内容包括：如何根据问题的特点将定解区域作网格剖分；如何把原微分方程离散化为差分方程组以及如何解此代数方程组。此外为了保证计算过程的可行和计算结果的正确，还需从理论上分析差分方程组的性态，包括解的唯一性、存在性和差分格式的相容性、收敛性和稳定性。对于一个微分方程建立的各种差分格式，为了有实用意义，一个基本要求是它们能够任意逼近微分方程，这就是相容性要求。另外，一个差分格式是否有用，最终要看差分方程的精确解能否任意逼近微分方程的解，这就是收敛性的概念。此外，还有一个重要的概念必须考虑，即差分格式的稳定性。因为差分格式的计算过程是逐层推进的，在计算第n＋1层的近似值时要用到第n层的近似值，直到与初始值有关。前面各层若有舍入误差，必然影响到后面各层的值，如果误差的影响越来越大，以致差分格式的精确解的面貌完全被掩盖，这种格式是不稳定的，相反如果误差的传播是可以控制的，就认为格式是稳定的。只有在这种情形，差分格式在实际计算中的近似解才可能任意逼近差分方程的精确解。关于差分格式的构造一般有以下3种方法。最常用的方法是数值微分法，比如用差商代替微商等。另一方法叫积分插值法，因为在实际问题中得出的微分方程常常反映物理上的某种守恒原理，一般可以通过积分形式来表示。此外还可以用待定系数法构造一些精度较高的差分格式。</p>
<p><strong>有限元方法</strong>的基础是变分原理和加权余量法，其基本求解思想是把计算域划分为有限个互不重叠的单元，在每个单元内，选择一些合适的节点作为求解函数的插值点，将微分方程中的变量改写成由各变量或其导数的节点值与所选用的插值函数组成的线性表达式，借助于变分原理或加权余量法，将微分方程离散求解。采用不同的权函数和插值函数形式，便构成不同的有限元方法。</p>
<p>有限元方法最早应用于结构力学，后来随着计算机的发展慢慢用于流体力学的数值模拟。在有限元方法中，把计算域离散剖分为有限个互不重叠且相互连接的单元，在每个单元内选择基函数，用单元基函数的线形组合来逼近单元中的真解，整个计算域上总体的基函数可以看为由每个单元基函数组成的，则整个计算域内的解可以看作是由所有单元上的近似解构成。</p>
<p>常见的有限元计算方法是由变分法和加权余量法发展而来的里兹法和伽辽金法、最小二乘法等。根据所采用的权函数和插值函数的不同，有限元方法也分为多种计算格式。从权函数的选择来说，有配置法、矩量法、最小二乘法和伽辽金法，从计算单元网格的形状来划分，有三角形网格、四边形网格和多边形网格，从插值函数的精度来划分，又分为线性插值函数和高次插值函数等。不同的组合同样构成不同的有限元计算格式。对于权函数，伽辽金(Galerkin)法是将权函数取为逼近函数中的基函数；最小二乘法是令权函数等于余量本身，而内积的极小值则为对代求系数的平方误差最小；在配置法中，先在计算域内选取N个配置点。令近似解在选定的N个配置点上严格满足微分方程，即在配置点上令方程余量为0。插值函数一般由不同次幂的多项式组成，但也有采用三角函数或指数函数组成的乘积表示，但最常用的多项式插值函数。有限元插值函数分为两大类，一类只要求插值多项式本身在插值点取已知值，称为拉格朗日(Lagrange)多项式插值；另一种不仅要求插值多项式本身，还要求它的导数值在插值点取已知值，称为哈密特(Hermite)多项式插值。单元坐标有笛卡尔直角坐标系和无因次自然坐标，有对称和不对称等。常采用的无因次坐标是一种局部坐标系，它的定义取决于单元的几何形状，一维看作长度比，二维看作面积比，三维看作体积比。在二维有限元中，三角形单元应用的最早，近来四边形等参元的应用也越来越广。对于二维三角形和四边形电源单元，常采用的插值函数为有Lagrange插值直角坐标系中的线性插值函数及二阶或更高阶插值函数、面积坐标系中的线性插值函数、二阶或更高阶插值函数等。</p>
<p>对于有限元方法，其基本思路和解题步骤可归纳为：</p>
<p><strong>(1)</strong>建立积分方程，根据变分原理或方程余量与权函数正交化原理，建立与微分方程初边值问题等价的积分表达式，这是有限元法的出发点。</p>
<p><strong>(2)</strong>区域单元剖分，根据求解区域的形状及实际问题的物理特点，将区域剖分为若干相互连接、不重叠的单元。区域单元划分是采用有限元方法的前期准备工作，这部分工作量比较大，除了给计算单元和节点进行编号和确定相互之间的关系之外，还要表示节点的位置坐标，同时还需要列出自然边界和本质边界的节点序号和相应的边界值。</p>
<p><strong>(3)</strong>确定单元基函数，根据单元中节点数目及对近似解精度的要求，选择满足一定插值条件的插值函数作为单元基函数。有限元方法中的基函数是在单元中选取的，由于各单元具有规则的几何形状，在选取基函数时可遵循一定的法则。</p>
<p><strong>(4)</strong>单元分析：将各个单元中的求解函数用单元基函数的线性组合表达式进行逼近；再将近似函数代入积分方程，并对单元区域进行积分，可获得含有待定系数(即单元中各节点的参数值)的代数方程组，称为单元有限元方程。</p>
<p><strong>(5)</strong>总体合成：在得出单元有限元方程之后，将区域中所有单元有限元方程按一定法则进行累加，形成总体有限元方程。</p>
<p><strong>(6)</strong>边界条件的处理：一般边界条件有三种形式，分为本质边界条件(狄里克雷边界条件 )、自然边界条件(黎曼边界条件)、混合边界条件(柯西边界条件)。对于自然边界条件，一般在积分表达式中可自动得到满足。对于本质边界条件和混合边界条件，需按一定法则对总体有限元方程进行修正满足。</p>
<p><strong>(7)</strong>解有限元方程：根据边界条件修正的总体有限元方程组，是含所有待定未知量的封闭方程组，采用适当的数值计算方法求解，可求得各节点的函数值。</p>
<p><strong>有限体积法（Finite Volume Method）</strong>又称为控制体积法。其基本思路是：将计算区域划分为一系列不重复的控制体积，并使每个网格点周围有一个控制体积；将待解的微分方程对每一个控制体积积分，便得出一组离散方程。其中的未知数是网格点上的因变量的数值。为了求出控制体积的积分，必须假定值在网格点之间的变化规律，即假设值的分段的分布的分布剖面。从积分区域的选取方法看来，有限体积法属于加权剩余法中的子区域法；从未知解的近似方法看来，有限体积法属于采用局部近似的离散方法。简言之，子区域法属于有限体积发的基本方法。</p>
<p>有限体积法的基本思路易于理解，并能得出直接的物理解释。离散方程的物理意义，就是因变量在有限大小的控制体积中的守恒原理，如同微分方程表示因变量在无限小的控制体积中的守恒原理一样。限体积法得出的离散方程，要求因变量的积分守恒对任意一组控制体积都得到满足，对整个计算区域，自然也得到满足。这是有限体积法吸引人的优点。有一些离散方法，例如有限差分法，仅当网格极其细密时，离散方程才满足积分守恒；而有限体积法即使在粗网格情况下，也显示出准确的积分守恒。就离散方法而言，有限体积法可视作有限单元法和有限差分法的中间物。有限单元法必须假定值在网格点之间的变化规律（既插值函数），并将其作为近似解。有限差分法只考虑网格点上的数值而不考虑值在网格点之间如何变化。有限体积法只寻求的结点值，这与有限差分法相类似；但有限体积法在寻求控制体积的积分时，必须假定值在网格点之间的分布，这又与有限单元法相类似。在有限体积法中，插值函数只用于计算控制体积的积分，得出离散方程之后，便可忘掉插值函数；如果需要的话，可以对微分方程中不同的项采取不同的插值函数。</p>
<p><strong>三者各有所长：</strong></p>
<p>有限差分法：直观，理论成熟，精度可选。但是不规则区域处理繁琐，虽然网格生成可以使FDM应用于不规则区域，但是对区域的连续性等要求较严。使用FDM的好处在于易于编程，易于并行。</p>
<p>有限元方法：适合处理复杂区域，精度可选。缺憾在于内存和计算量巨大。并行不如FDM和FVM直观。不过FEM的并行是当前和将来应用的一个不错的方向。</p>
<p>有限容积法：适于流体计算，可以应用于不规则网格，适于并行。但是精度基本上只能是二阶了。FVM的优势正逐渐显现出来，FVM在应力应变，高频电磁场方面的特殊的优点正在被人重视。</p>
<p><strong>比较一下：</strong></p>
<p>有限容积法和有限差分法：一个区别就是有限容积法的截差是不定的（跟取的相邻点有关，积分方法离散方程），而有限差分就可以直接知道截差（微分方法离散方程）。 有限容积法和有限差分法最本质的区别是，前者是根据积分方程推导出来的（即对每个控制体积分），后者直接根据微分方程推导出来，所以前者的精度不但取决于积分时的精度，还取决与对导数处理的精度，一般有限容积法总体的精度为二阶，因为积分的精度限制，当然有限容积法对于守恒型方程导出的离散方程可以保持守恒型；而后者直接由微分方程导出，不涉及积分过程，各种导数的微分借助Taylor展开，直接写出离散方程，当然不一定有守恒性，精度也和有限容积法不一样，一般有限差分法可以使精度更高一些。</p>
<p>当然二者有联系，有时导出的形式一样，但是概念上是不一样的。</p>
<p>至于有限容积法和有限元相比，有限元在复杂区域的适应性对有限容积是毫无优势可言的，至于有限容积的守恒性，物理概念明显的这些特点，有限元是没有的。目前有限容积在精度方面与有限元法有些差距。</p>
<p>有限元方法比有限差分优越的方面主要在能适应不规则区域，但是这只是指的是传统意义上的有限差分，现在发展的一些有限差分已经能适应不规则区域。对于椭圆型方程，如果区域规则，传统有限差分和有限元都能解，在求解效率，这里主要指编程负责度和收敛快慢、内存需要，肯定有限差分有优势。</p>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>偏微分方程离散</tag>
      </tags>
  </entry>
  <entry>
    <title>克里金(Kriging)插值的原理与公式推导</title>
    <url>/2019/06/13/%E5%85%8B%E9%87%8C%E9%87%91(Kriging)%E6%8F%92%E5%80%BC%E7%9A%84%E5%8E%9F%E7%90%86%E4%B8%8E%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/</url>
    <content><![CDATA[<p><strong>转自</strong><a href="https://xg1990.com/blog/archives/222" target="_blank" rel="noopener">xg1990</a></p>
<p>学过空间插值的人都知道克里金插值，但是它的变种繁多、公式复杂，还有个半方差函数让人不知所云。<a id="more"></a></p>
<p>本文讲简单介绍基本克里金插值的原理，及其推理过程，全文分为九个部分：</p>
<p>0.引言－从反距离插值说起<br>1.克里金插值的定义<br>2.假设条件<br>3.无偏约束条件<br>4.优化目标／代价函数<br>5.代价函数的最优解<br>6.半方差函数<br>7.普通克里金与简单克里金<br>8.小结</p>
<h1 id="0-引言——从反距离插值-IDW-说起"><a href="#0-引言——从反距离插值-IDW-说起" class="headerlink" title="0.引言——从反距离插值(IDW)说起"></a>0.引言——从反距离插值(IDW)说起</h1><p>空间插值问题，就是在已知空间上若干离散点 $(x_i,y_i)$ 的某一属性(如气温，海拔)的观测值$z_i=z(x_i,y_i)$的条件下，估计空间上任意一点$(x,y)$的属性值的问题。</p>
<p>直观来讲，根据地理学第一定律，</p>
<blockquote>
<p>All attribute values on a geographic surface are related to each other, but closer values are more strongly related than are more distant ones.</p>
</blockquote>
<p>大意就是，地理属性有空间相关性，相近的事物会更相似。由此人们发明了反距离插值，对于空间上任意一点$(x,y)$的属性$z=z(x,y)$，定义反距离插值公式估计量</p>
<script type="math/tex; mode=display">
\hat{z} = \sum^{n}_{i=0}{\frac{1}{d^\alpha}z_i}</script><p>其中$\alpha$通常取1或者2。</p>
<p>即，用空间上所有已知点的数据加权求和来估计未知点的值，权重取决于距离的倒数（或者倒数的平方）。那么，距离近的点，权重就大；距离远的点，权重就小。</p>
<p>反距离插值可以有效的基于地理学第一定律估计属性值空间分布，但仍然存在很多问题：</p>
<ul>
<li>$\alpha$的值不确定</li>
<li>用倒数函数来描述空间关联程度不够准确</li>
</ul>
<p>因此更加准确的克里金插值方法被提出来了</p>
<h1 id="1-克里金插值的定义"><a href="#1-克里金插值的定义" class="headerlink" title="1.克里金插值的定义"></a>1.克里金插值的定义</h1><p>相比反距离插值，克里金插值公式更加抽象</p>
<script type="math/tex; mode=display">
\hat{z_o} = \sum^{n}_{i=0}{\lambda_iz_i}</script><p>其中$\hat{z_o}$是点$(x_o,y_o)$处的估计值，即$z_o=z(x_o,y_o)$ 。</p>
<p>这里的$\lambda_i$是权重系数。它同样是用空间上所有已知点的数据加权求和来估计未知点的值。但权重系数并非距离的倒数，而是能够满足点$(x_o,y_o)$处的估计值$\hat{z_o}$与真实值$z_o$的差最小的一套最优系数，即</p>
<script type="math/tex; mode=display">
\min_{\lambda_i} Var(\hat{z_o}-z_o)</script><p>同时满足无偏估计的条件</p>
<script type="math/tex; mode=display">
E(\hat{z_o}-z_o)=0</script><h1 id="2-假设条件"><a href="#2-假设条件" class="headerlink" title="2.假设条件"></a>2.假设条件</h1><p>不同的克里金插值方法的主要差异就是假设条件不同。本文仅介绍普通克里金插值的假设条件与应用。</p>
<p>普通克里金插值的假设条件为，空间属性z是均一的。对于空间任意一点$(x,y)$，都有同样的期望$c$与方差$\sigma^2$。</p>
<p>即对任意点$(x,y)$都有</p>
<script type="math/tex; mode=display">
E[z(x,y)] = E[z] = c</script><script type="math/tex; mode=display">
Var[z(x,y)] = \sigma^2</script><p>换一种说法：任意一点处的值z(x,y)，都由区域平均值c和该点的随机偏差R(x,y)组成，即</p>
<script type="math/tex; mode=display">
z(x,y)=E[z(x,y)] + R(x,y)] = c + R(x,y)</script><p>其中$R(x,y)$表示点$(x,y)$处的偏差，其方差均为常数</p>
<script type="math/tex; mode=display">
Var[R(x,y)] = \sigma^2</script><h1 id="3-无偏约束条件"><a href="#3-无偏约束条件" class="headerlink" title="3.无偏约束条件"></a>3.无偏约束条件</h1><p>先分析无偏估计条件$E(\hat{z_o}-z_o)=0$，将$\hat{z_o} = \sum^{n}_{i=0}{\lambda_iz_i}$带入则有</p>
<script type="math/tex; mode=display">
E(\sum^{n}_{i=0}{\lambda_iz_i}- z_o)=0</script><p>又因为对任意的$z$都有$E[z] = c$，则</p>
<script type="math/tex; mode=display">
c \sum^{n}_{i=0}{\lambda_i}- c=0</script><p>即</p>
<script type="math/tex; mode=display">
\sum^{n}_{i=0}{\lambda_i} = 1</script><p>这是$\lambda_i$的约束条件之一。</p>
<h1 id="4-优化目标-代价函数J"><a href="#4-优化目标-代价函数J" class="headerlink" title="4.优化目标/代价函数J"></a>4.优化目标/代价函数J</h1><p>再分析估计误差$Var(\hat{z_o}-z_o)$。为方便公式推理，用符号J表示，即</p>
<script type="math/tex; mode=display">
J = Var(\hat{z_o}-z_o)</script><p>则有</p>
<script type="math/tex; mode=display">
\begin{array}{r@{\;=\;}l} J &= Var(\sum^{n}_{i=0}{\lambda_iz_i} - z_o) \\&= Var(\sum^{n}_{i=0}{\lambda_iz_i}) - 2 Cov(\sum^{n}_{i=0}{\lambda_iz_i}, z_o) + Cov(z_o, z_o) \\&= \sum^{n}_{i=0}\sum^{n}_{j=0}{\lambda_i\lambda_jCov( z_i, z_j)} - 2 \sum^{n}_{i=0}{\lambda_iCov(z_i, z_o)} + Cov(z_o, z_o) \end{array}</script><p>为简化描述，定义符号 $C_{ij} = Cov(z_i,z_j) =Cov(R_i,R_j)$，这里$R_i = z_i - c$，即点$(x_i,y_i)$处的属性值相对于区域平均属性值的偏差。</p>
<p>则有</p>
<script type="math/tex; mode=display">
J = \sum^{n}_{i=0}\sum^{n}_{j}{\lambda_i\lambda_jC_{ij}} - 2 \sum^{n}_{i=0}{\lambda_iC_{io}} + C_{oo}</script><h1 id="5-代价函数的最优解"><a href="#5-代价函数的最优解" class="headerlink" title="5.代价函数的最优解"></a>5.代价函数的最优解</h1><p>再定义半方差函数 $r_{ij} = \sigma^2 -C_{ij}$，带入$J$中，有</p>
<script type="math/tex; mode=display">
\begin{array}{r@{\;=\;}l}J & = \sum^{n}_{i=0}\sum^{n}_{j=0}{\lambda_i\lambda_j(\sigma^2 - r_{ij})} - 2 \sum^{n}_{i=0}{\lambda_i(\sigma^2 - r_{io})} + \sigma^2 - r_{oo} \\ &=\sum^{n}_{i=0}\sum^{n}_{j=0}{\lambda_i\lambda_j(\sigma^2)} -\sum^{n}_{i=0}\sum^{n}_{j=0}{\lambda_i\lambda_j( r_{ij})}-2\sum^{n}_{i=0}{\lambda_i(\sigma^2)}+2 \sum^{n}_{i=0}{\lambda_i(r_{io})}+\sigma^2 - r_{oo} \end{array}</script><p>考虑到$\sum^{n}_{i=0}{\lambda_i} = 1$</p>
<script type="math/tex; mode=display">
\begin{array}{r@{\;=\;}l}J &= \sigma^2-\sum^{n}_{i=0}\sum^{n}_{j}{\lambda_i\lambda_j(r_{ij})}-2 \sigma^2 +2 \sum^{n}_{i=0}{\lambda_i(r_{io})}+ \sigma^2 - r_{oo}\\&=2 \sum^{n}_{i=0}{\lambda_i(r_{io})} -\sum^{n}_{i=0}\sum^{n}_{j=0}{\lambda_i\lambda_j(r_{ij})} - r_{oo} \end{array}</script><p>我们的目标是寻找使J最小的一组 $\lambda_i$，且$J$是$\lambda_i$的函数，因此直接将J对$\lambda_i$求偏导数令其为0即可。即</p>
<script type="math/tex; mode=display">
\frac{\partial J}{\partial \lambda_i}= 0;i=1,2,\cdots,n</script><p>但是要注意的是，我们要保证求解出来的最优 $\lambda_i$ 满足公式$\sum^{n}_{i=0}{\lambda_i} = 1$，这是一个带约束条件的最优化问题。使用拉格朗日乘数法求解，求解方法为构造一个新的目标函数</p>
<script type="math/tex; mode=display">
J + \phi(\sum^{n}_{i=0}{\lambda_i}-1)</script><p>其中$\phi$是拉格朗日乘数。求解使这个代价函数最小的参数集${\phi,\lambda_1,\lambda_2,\cdots,\lambda_n}$，则能满足其在$\sum^{n}_{i=0}{\lambda_i} = 1$约束下最小化$J$。即</p>
<script type="math/tex; mode=display">
\left\{\begin{array}{r@{\;=\;}l}\frac{\partial(J + \phi(\sum^{n}_{i=0}{\lambda_i}-1))}{\partial \lambda_i} &= 0;i=1,2,\cdots,n\\ \frac{\partial(J + \phi(\sum^{n}_{i=0}{\lambda_i}-1))}{\partial \phi} &= 0 \end{array} \right.</script><script type="math/tex; mode=display">
\left\{\begin{array}{r@{\;=\;}l} \frac{\partial (2 \sum^{n}_{i=0}{\lambda_i(r_{io})} - \sum^{n}_{i=0}\sum^{n}_{j}{\lambda_i\lambda_j(r_{ij})} - r_{oo})}{\partial \lambda_i}&= 0;i=1,2,\cdots,n\\ \frac{\partial (\partial 2 \sum^{n}_{i=0}{\lambda_i(r_{io})} - \sum^{n}_{i=0}\sum^{n}_{j}{\lambda_i\lambda_j(r_{ij})} - r_{oo})}{\partial \phi} &= 0 \end{array} \right.</script><script type="math/tex; mode=display">
\left\{\begin{array}{r@{\;=\;}l} 2r_{io} - \sum^{n}_{j=1}{(r_{ij}+r_{ji})\lambda_j}&=0;i=1,2,\cdots,n\\ \sum^{n}_{i=0}{\lambda_i} &= 1 \end{array} \right.</script><p>由于$C_{ij}=Cov(z_i,z_j)=C_{ji}$，因此同样地$r_{ij}=r_{ji}$，那么有</p>
<script type="math/tex; mode=display">
\left\{\begin{array}{r@{\;=\;}l} r_{io} - \sum^{n}_{j=1}{r_{ij}\lambda_j} &= 0;i=1,2,\cdots,n\\ \sum^{n}_{i=0}{\lambda_i} &= 1 \end{array} \right.</script><p>式子中半方差函数$r_{ij}$十分重要，最后会详细解释其计算与定义</p>
<p>在以上计算中我们得到了对于求解权重系数$\lambda_j$的方程组。写成线性方程组的形式就是：</p>
<script type="math/tex; mode=display">
\begin{equation}\left\{\begin{array}{r@{\;=\;}l} r_{11}\lambda_1 + r_{12}\lambda_2 + \cdots + r_{1n}\lambda_n + \phi&= r_{1o}\\r_{21}\lambda_1 + r_{22}\lambda_2 + \cdots + r_{2n}\lambda_n + \phi&= r_{2o}\\&\cdots\\ r_{n1}\lambda_1 + r_{n2}\lambda_2 + \cdots + r_{nn}\lambda_n + \phi&= r_{no}\\ \lambda_1 + \lambda_2 + \cdots + \lambda_n &= 1\\ \end{array} \right.\end{equation}</script><p>写成矩阵形式即为</p>
<script type="math/tex; mode=display">
\begin{bmatrix}r_{11}&r_{12}&\cdots&r_{1n}&1\\ r_{21}&r_{22}&\cdots&r_{2n}&1\\\cdots&\cdots&\cdots&\cdots&\cdots\\r_{n1}&r_{n2}&\cdots&r_{nn}&1\\1&1&\cdots&1&0\end{bmatrix}\begin{bmatrix} \lambda_1\\ \lambda_2\\\cdots\\\lambda_n\\0\end{bmatrix}=\begin{bmatrix} r_{1o}\\ r_{2o}\\\cdots\\r_{no}\\1\end{bmatrix}</script><p>对矩阵求逆即可求解。</p>
<p>唯一未知的就是上文中定义的半方差函数$r_{ij}$，接下来将详细讨论</p>
<h1 id="6-半方差函数"><a href="#6-半方差函数" class="headerlink" title="6.半方差函数"></a>6.半方差函数</h1><p>上文中对半方差函数的定义为</p>
<script type="math/tex; mode=display">
r_{ij} = \sigma^2 -C_{ij}</script><p>其等价形式为</p>
<script type="math/tex; mode=display">
r_{ij} = \frac{1}{2}E[(z_i-z_j)^2]</script><p>这也是半方差函数名称的来由，接下来证明这二者是等价的：</p>
<p>根据上文定义 $R_i = z_i - c$，有$z_i-z_j = R_i - R_j$，则</p>
<script type="math/tex; mode=display">
\begin{array}{r@{\;=\;}l} r_{ij} &= \frac{1}{2}E[(R_i-R_j)^2]\\&= \frac{1}{2}E[R_i^2-2R_iR_j+R_j^2]\\&= \frac{1}{2}E[R_i^2]+\frac{1}{2}E[R_j^2]-E[R_iR_j] \end{array}</script><p>又因为：</p>
<script type="math/tex; mode=display">
E[R_i^2] =E[R_j^2] = E[(z_i - c)^2] = Var(z_i) = \sigma^2</script><script type="math/tex; mode=display">
E[R_iR_j] = E[(z_i - c)(z_j-c)] = Cov(z_i,z_j) = C_{ij}</script><p>于是有</p>
<script type="math/tex; mode=display">
\begin{array}{r@{\;=\;}l} r_{ij} &= \frac{1}{2}E[(z_i-z_j)^2]\\&= \frac{1}{2}E[R_i^2]+\frac{1}{2}E[R_j^2]-E[R_iR_j]\\&= \frac{1}{2}\sigma^2+\frac{1}{2}\sigma^2- C_{ij}\\&=\sigma^2 -C_{ij}\end{array}</script><p> $\sigma^2 -C_{ij} = \frac{1}{2}E[(z_i-z_j)^2]$得证，现在的问题就是如何计算</p>
<script type="math/tex; mode=display">
r_{ij} = \frac{1}{2}E[(z_i-z_j)^2]</script><p>这时需要用到地理学第一定律，空间上相近的属性相近。$r_{ij} = \frac{1}{2}(z_i-z_j)^2$表达了属性的相似度；空间的相似度就用距离来表达，定义i与j之间的几何距离</p>
<script type="math/tex; mode=display">
d_{ij} = d(z_i,z_j) = d( (x_i,y_i), (x_j,y_j)) = \sqrt{(x_i-x_j)^2 + (y_i - y_j)^2}</script><p>克里金插值假设$r_{ij}$与$d_{ij}$存在着函数关系，这种函数关系可以是线性、二次函数、指数、对数关系。为了确认这种关系，我们需要首先对观测数据集</p>
<script type="math/tex; mode=display">
\{z(x_1,y_1),z(x_2,y_2),z(x_3,y_3),\cdots,z(x_{n-1},y_{n-1}),z(x_n,y_n)\}</script><p>计算任意两个点的 距离$d_{ij}= \sqrt{(x_i-x_j)^2 + (y_i - y_j)^2}$和 半方差 $\sigma^2 -C_{ij} =\frac{1}{2}E[(z_i-z_j)^2]$，这时会得到$n^2$个$(d_{ij}, r_{ij})$的数据对。</p>
<p>将所有的$d$和$r$绘制成散点图，寻找一个最优的拟合曲线拟合d与r的关系，得到函数关系式</p>
<script type="math/tex; mode=display">
r = r(d)</script><p>那么对于任意两点$(x_i,y_i), (x_j,y_j)$，先计算其距离$d_{ij}$，然后根据得到的函数关系就可以得到这两点的半方差$r_{ij}$</p>
<h1 id="7-简单克里金（simple-kriging）与普通克里金（ordinary-kriging）的区别"><a href="#7-简单克里金（simple-kriging）与普通克里金（ordinary-kriging）的区别" class="headerlink" title="7. 简单克里金（simple kriging）与普通克里金（ordinary kriging）的区别"></a>7. 简单克里金（simple kriging）与普通克里金（ordinary kriging）的区别</h1><p>以上介绍的均为普通克里金（ordinary kriging）的公式与推理。</p>
<p>事实上普通克里金插值还有简化版，即简单克里金（simple kriging）插值。二者的差异就在于如何定义插值形式：</p>
<p>上文讲到，普通克里金插值形式为</p>
<script type="math/tex; mode=display">
\hat{z_o} = \sum^{n}_{i=0}{\lambda_iz_i}</script><p>而简单克里金的形式则为</p>
<script type="math/tex; mode=display">
\hat{z_o} - c= \sum^{n}_{i=0}{\lambda_i(z_i-c)}</script><p>这里的符号c在上文介绍过了，是属性值的数学期望，即E[z] = c。也就是说，在普通克里金插值中，认为未知点的属性值是已知点的属性值的加权求和；而在简单克里金插值中，假设未知点的属性值相对于平均值的偏差是已知点的属性值相对于平均值的偏差的加权求和，用公式表达即为：</p>
<script type="math/tex; mode=display">
\hat{R_o} = \sum^{n}_{i=0}{\lambda_iR_i}</script><p>这里的R_i在上文定义过了：$R_i = z_i - c$。</p>
<p>但是为什么这样的克里金插值称为“简单克里金”呢？由于有假设$E[z] = c$，也就是说$E(R_i + c) = c$，即$E(R_i) = 0$。那么上面的公式$\hat{R_o} = \sum^{n}_{i=0}{\lambda_iR_i}$两边的期望一定相同，那么在求解未知参数\lambda_i就不需要有无偏约束条件$\sum^{n}_{i=0}{\lambda_i} = 1$。换句话说，这样的估计公式天生就能满足无偏条件。因此它被称为简单克里金。</p>
<p>从在上文（第4节优化目标/代价函数J）中可以知道，优化目标的推理和求解过程是通过对属性值相对于期望的偏差量R_i进行数学计算而进行的。也就是说这两种克里金插值方法虽然插值形式不一样，求解方法是一样的，重要的区别是简单克里金插值不需要约束条件$\sum^{n}_{i=0}{\lambda_i} = 1$，求解方程组为：</p>
<script type="math/tex; mode=display">
\begin{equation}\left\{\begin{array}{r@{\;=\;}l} r_{11}\lambda_1 + r_{12}\lambda_2 + \cdots + r_{1n}\lambda_n + \phi&= r_{1o}\\r_{21}\lambda_1 + r_{22}\lambda_2 + \cdots + r_{2n}\lambda_n + \phi&= r_{2o}\\&\cdots\\ r_{n1}\lambda_1 + r_{n2}\lambda_2 + \cdots + r_{nn}\lambda_n + \phi&= r_{no}\\ \end{array} \right.\end{equation}</script><p>还有更重要的一点，简单克里金的插值公式为：</p>
<script type="math/tex; mode=display">
\hat{z_o} = \sum^{n}_{i=0}{\lambda_i(z_i-c)}+c</script><p>换句话说，在计算未知点属性值$\hat{z_o}$前，需要知道该地区的属性值期望$c$。事实上我们在进行插值前很难知道这个地区的真实属性值期望。有些研究者可能会采用对观测数据简单求平均的方法计算期望值$c$，而考虑到空间采样点位置代表性可能有偏差（比如采样点聚集在某一小片地区，没有代表性），简单平均估计的期望也可能是有偏差的。这是简单克里金方法的局限性。</p>
<h1 id="8-小结"><a href="#8-小结" class="headerlink" title="8.小结"></a>8.小结</h1><p>总的来说，进行克里金插值分为这几个步骤：</p>
<ol>
<li>对于观测数据，两两计算距离与半方差</li>
<li>寻找一个拟合曲线拟合距离与半方差的关系，从而能根据任意距离计算出相应的半方差</li>
<li>计算出所有已知点之间的半方差$r_{ij}$</li>
<li>对于未知点$z_o$，计算它到所有已知点$z_i$的半方差$r_{io}$</li>
<li>求解第四节中的方程组，得到最优系数$\lambda_i$</li>
<li>使用最优系数对已知点的属性值进行加权求和，得到未知点$z_o$的估计值</li>
</ol>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>kriging</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Tips</title>
    <url>/2019/06/03/Linux-Tips/</url>
    <content><![CDATA[<p>本文记录作者在Linux使用过程中的一些小技巧。<a id="more"></a></p>
<h2 id="kill某个用户所有进程的方法"><a href="#kill某个用户所有进程的方法" class="headerlink" title="kill某个用户所有进程的方法"></a>kill某个用户所有进程的方法</h2><p>在<a href="http://www.ttlsa.com/nginx/nginx-and-lua/" target="_blank" rel="noopener">linux</a>系统管理中，我们有时候需要kill掉某个用户的所有进程，初学者一般先查询出用户的所有pid，然后一条条kill掉，或者写好一个脚本，实际上方法都有现成的，这边有4种方法，我们以kill用户ttlsa为例.<br><strong>1. pkill方式</strong></p>
<blockquote>
<p>pkill -u ttlsa</p>
</blockquote>
<p><strong>2. killall方式</strong></p>
<blockquote>
<p>killall -u ttlsa</p>
</blockquote>
<p> <strong>3. ps方式</strong><br>ps列出ttlsa的pid，然后依次kill掉，比较繁琐. |</p>
<blockquote>
<p>ps -ef | grep ttlsa | awk ‘{ print $2 }’ | sudo xargs kill -9</p>
</blockquote>
<p><strong>4. pgrep方式</strong><br>pgrep -u参数查出用户的所有pid，然后依次kill</p>
<blockquote>
<p>pgrep -u ttlsa | sudo xargs kill -9</p>
</blockquote>
<h2 id="nohup和-amp-后台运行"><a href="#nohup和-amp-后台运行" class="headerlink" title="nohup和&amp;后台运行"></a>nohup和&amp;后台运行</h2><p><strong>1.nohup</strong></p>
<p>用途：不挂断地运行命令。</p>
<p>语法：nohup Command  [Args][ &amp; ]</p>
<ul>
<li><p>无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中。</p>
</li>
<li><p>如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。</p>
</li>
<li><p>如果没有文件能创建或打开以用于追加，那么 Command 参数指定的命令不可调用。</p>
</li>
</ul>
<p>退出状态：该命令返回下列出口值： 　　</p>
<ul>
<li><p>126 可以查找但不能调用 Command 参数指定的命令。 　　</p>
</li>
<li><p>127 nohup 命令发生错误或不能查找由 Command 参数指定的命令。 　　</p>
</li>
<li><p>否则，nohup 命令的退出状态是 Command 参数指定命令的退出状态。</p>
</li>
</ul>
<p><strong>2.&amp;</strong></p>
<p>用途：在后台运行</p>
<p>一般两个一起用</p>
<blockquote>
<p>nohup command &amp;</p>
</blockquote>
<h2 id="终端中打开文件管理器"><a href="#终端中打开文件管理器" class="headerlink" title="终端中打开文件管理器"></a>终端中打开文件管理器</h2><blockquote>
<p>nautilus    url(文件夹路径)</p>
</blockquote>
<h2 id="双系统避免只读方式挂载硬盘"><a href="#双系统避免只读方式挂载硬盘" class="headerlink" title="双系统避免只读方式挂载硬盘"></a>双系统避免只读方式挂载硬盘</h2><p>由于Windows10关机的深度休眠机制，会导致未完全关机情况下进入Ubuntu只能以只读方式挂载NTFS磁盘，此时有两种解决方法：</p>
<ol>
<li>采用完全关机方式关闭Windows，即先注销再关机；</li>
<li>在Win10电源设置里关闭快速启动。</li>
</ol>
<h2 id="ubuntu下pycharm快捷方式创建"><a href="#ubuntu下pycharm快捷方式创建" class="headerlink" title="ubuntu下pycharm快捷方式创建"></a>ubuntu下pycharm快捷方式创建</h2><p>终端输入：sudo gedit /usr/share/applications/Pycharm.desktop<br>粘贴模板：<br>[Desktop Entry]<br>Type=Application<br>Name=Pycharm<br>GenericName=Pycharm3<br>Comment=Pycharm3:The Python IDE<br>Exec=sh <strong>/opt/pycharm/bin/pycharm.sh      ps：这个是装的pycharm的路径   例如我的是/home/username/pycharm-2017.1.3/bin/pycharm.sh</strong><br>Icon=/opt/pycharm/bin/pycharm.png              ps：这个和上面一样只不过用pycharm.png代替<strong>pycharm.sh</strong><br>Terminal=pycharm<br>Categories=Pycharm;</p>
<p>然后保存退出之后</p>
<p>打开  搜索  找到图标pycharm</p>
<p>然后将其拖到需要放置的位置即可</p>
<h2 id="免密ssh到目标服务器"><a href="#免密ssh到目标服务器" class="headerlink" title="免密ssh到目标服务器"></a>免密ssh到目标服务器</h2><p>常规ssh到目标服务器时会输入密码，不便于用脚本运行。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh id@server</span><br></pre></td></tr></table></figure>
<p>可以通过设置SSH key的方法避免手动输入密码，首先生成公钥和私钥：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b 2048</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/username/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/username/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/username/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure>
<p>将密钥拷贝到目标服务器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh-copy-id id@server</span><br><span class="line">id@server&#39;s password:</span><br></pre></td></tr></table></figure>
<p>现在尝试登陆目标主机，并检查是否存在以下文件，确保没有添加额外的密码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure>
<p>最后ssh目标服务器不再需要密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh id@server</span><br><span class="line"></span><br><span class="line">id@server:~$</span><br></pre></td></tr></table></figure>
<p>如果您想尝试使用密码保护密钥，则可能还需要考虑使用ssh-agent。</p>
<h2 id="SSH端口转发"><a href="#SSH端口转发" class="headerlink" title="SSH端口转发"></a>SSH端口转发</h2><p>SH有三种端口转发模式，<strong>本地端口转发(Local Port Forwarding)</strong>，<strong>远程端口转发(Remote Port Forwarding)</strong>以及<strong>动态端口转发(Dynamic Port Forwarding)</strong>。对于本地/远程端口转发，两者的方向恰好相反。<strong>动态端口转发</strong>则可以用于科学上网。</p>
<p>SSH端口转发也被称作SSH隧道(<a href="http://blog.trackets.com/2014/05/17/ssh-tunnel-local-and-remote-port-forwarding-explained-with-examples.html" target="_blank" rel="noopener">SSH Tunnel</a>)，因为它们都是通过SSH登陆之后，在<strong>SSH客户端</strong>与<strong>SSH服务端</strong>之间建立了一个隧道，从而进行通信。SSH隧道是非常安全的，因为SSH是通过加密传输数据的(SSH全称为Secure Shell)。</p>
<p>在本文所有示例中，本地主机A1为SSH客户端，远程云主机B1为SSH服务端。从A1主机通过SSH登陆B1主机，指定不同的端口转发选项(<strong>-L、-R和-D</strong>)，即可在A1与B1之间建立SSH隧道，从而进行不同的端口转发。</p>
<h3 id="本地端口转发"><a href="#本地端口转发" class="headerlink" title="本地端口转发"></a>本地端口转发</h3><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景:"></a>应用场景:</h4><blockquote>
<p>远程云主机B1运行了一个服务，端口为3000，本地主机A1需要访问这个服务。</p>
</blockquote>
<p>示例为一个简单的Node.js服务:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var http &#x3D; require(&#39;http&#39;);var server &#x3D; http.createServer(function(request, response)&#123;    response.writeHead(200,    &#123;        &quot;Content-Type&quot;: &quot;text&#x2F;plain&quot;    &#125;);    response.end(&quot;Hello Fundebug\n&quot;);&#125;);server.listen(3000);</span><br></pre></td></tr></table></figure>
<p>假设云主机B1的IP为<strong>103.59.22.17</strong>，则该服务的访问地址为:<a href="http://103.59.22.17:3000/" target="_blank" rel="noopener">http://103.59.22.17:3000</a></p>
<h4 id="为啥需要本地端口转发呢？"><a href="#为啥需要本地端口转发呢？" class="headerlink" title="为啥需要本地端口转发呢？"></a>为啥需要本地端口转发呢？</h4><blockquote>
<p>一般来讲，云主机的防火墙默认只打开了22端口，如果需要访问3000端口的话，需要修改防火墙。为了保证安全，防火墙需要配置允许访问的IP地址。但是，本地公网IP通常是网络提供商动态分配的，是不断变化的。这样的话，防火墙配置需要经常修改，就会很麻烦。</p>
</blockquote>
<h4 id="什么是本地端口转发？"><a href="#什么是本地端口转发？" class="headerlink" title="什么是本地端口转发？"></a>什么是本地端口转发？</h4><p>所谓本地端口转发，就是<strong>将发送到本地端口的请求，转发到目标端口</strong>。这样，就可以通过访问本地端口，来访问目标端口的服务。使用<strong>-L</strong>属性，就可以指定需要转发的端口，语法是这样的:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-L 本地网卡地址:本地端口:目标地址:目标端口</span><br></pre></td></tr></table></figure>
<p>通过<strong>本地端口转发</strong>，可以将发送到本地主机A1端口2000的请求，转发到远程云主机B1的3000端口。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在本地主机A1登陆远程云主机B1，并进行本地端口转发ssh -L localhost:2000:localhost:3000 root@103.59.22.17</span><br></pre></td></tr></table></figure>
<p>这样，在本地主机A1上可以通过访问<a href="http://localhost:2000/" target="_blank" rel="noopener">http://localhost:2000</a>来访问远程云主机B1上的Node.js服务。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在本地主机A1访问远程云主机B1上的Node.js服务curl http:&#x2F;&#x2F;localhost:2000Hello Fundebug</span><br></pre></td></tr></table></figure>
<p>实际上，<strong>-L选项</strong>中的<strong>本地网卡地址</strong>是可以省略的，这时表示2000端口绑定了本地主机A1的所有网卡：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在本地主机A1登陆远程云主机B1，并进行本地端口转发。2000端口绑定本地所有网卡ssh -L 2000:localhost:3000 root@103.59.22.17</span><br></pre></td></tr></table></figure>
<p>若本地主机A2能够访问A1，则A2也可以通过A1访问远程远程云主机B1上的Node.js服务。</p>
<p>另外，<strong>-L选项</strong>中的<strong>目标地址</strong>也可以是其他主机的地址。假设远程云主机B2的局域网IP地址为192.168.59.100，则可以这样进行端口转发:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在本地主机A1登陆远程云主机B1，并进行本地端口转发。请求被转发到远程云主机B2上ssh -L 2000:192.168.59.100:3000 root@103.59.22.17</span><br></pre></td></tr></table></figure>
<p>若将Node.js服务运行在远程云主机B2上，则发送到A1主机2000端口的请求，都会被转发到B2主机上。</p>
<h3 id="远程端口转发"><a href="#远程端口转发" class="headerlink" title="远程端口转发"></a>远程端口转发</h3><h4 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景:"></a>应用场景:</h4><blockquote>
<p>本地主机A1运行了一个服务，端口为3000，远程云主机B1需要访问这个服务。</p>
</blockquote>
<p>将前文的Node.js服务运行在本地，在本地就可以通过<a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000</a>访问该服务。</p>
<h4 id="为啥需要远程端口转发呢？"><a href="#为啥需要远程端口转发呢？" class="headerlink" title="为啥需要远程端口转发呢？"></a>为啥需要远程端口转发呢？</h4><blockquote>
<p>通常，本地主机是没有独立的公网IP的，它与同一网络中的主机共享一个IP。没有公网IP，云主机是无法访问本地主机上的服务的。</p>
</blockquote>
<h4 id="什么是远程端口转发？"><a href="#什么是远程端口转发？" class="headerlink" title="什么是远程端口转发？"></a>什么是远程端口转发？</h4><p>所谓远程端口转发，就是<strong>将发送到远程端口的请求，转发到目标端口</strong>。这样，就可以通过访问远程端口，来访问目标端口的服务。使用<strong>-R</strong>属性，就可以指定需要转发的端口，语法是这样的:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-R 远程网卡地址:远程端口:目标地址:目标端口</span><br></pre></td></tr></table></figure>
<p>这时，通过<strong>远程端口转发</strong>，可以将发送到远程云主机B1端口2000的请求，转发到本地主机A1端口3000。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在本地主机A1登陆远程云主机B1，并进行远程端口转发ssh -R localhost:2000:localhost:3000 root@103.59.22.17</span><br></pre></td></tr></table></figure>
<p>这样，在远程云主机A1可以通过访问<a href="http://localhost:2000/" target="_blank" rel="noopener">http://localhost:2000</a>来访问本地主机的服务。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在远程云主机B1访问本地主机A1上的Node.js服务curl http:&#x2F;&#x2F;localhost:2000Hello Fundebug</span><br></pre></td></tr></table></figure>
<p>同理，<strong>远程网卡地址</strong>可以省略，<strong>目标地址</strong>也可以是其他主机地址。假设本地主机A2的局域网IP地址为192.168.0.100。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在本地主机A1登陆远程云主机B1，并进行远程端口转发ssh -R 2000:192.168.0.100:3000 root@103.59.22.17</span><br></pre></td></tr></table></figure>
<p>若将Node.js服务运行在本地主机A2上，则发送到远程云主机A1端口2000的请求，都会被转发到A2主机上。</p>
<h3 id="动态端口转发"><a href="#动态端口转发" class="headerlink" title="动态端口转发"></a>动态端口转发</h3><h4 id="应用场景-2"><a href="#应用场景-2" class="headerlink" title="应用场景:"></a>应用场景:</h4><blockquote>
<p>远程云主机B1运行了多个服务，分别使用了不同端口，本地主机A1需要访问这些服务。</p>
</blockquote>
<h4 id="为啥需要动态端口转发呢？"><a href="#为啥需要动态端口转发呢？" class="headerlink" title="为啥需要动态端口转发呢？"></a>为啥需要动态端口转发呢？</h4><blockquote>
<p>一方面，由于防火墙限制，本地主机A1并不能直接访问远程云主机B1上的服务，因此需要进行端口转发；另一方面，为每个端口分别创建本地端口转发非常麻烦。</p>
</blockquote>
<h4 id="什么是动态端口转发？"><a href="#什么是动态端口转发？" class="headerlink" title="什么是动态端口转发？"></a>什么是动态端口转发？</h4><p>对于<strong>本地端口转发</strong>和<strong>远程端口转发</strong>，都存在两个一一对应的端口，分别位于SSH的客户端和服务端，而<strong>动态端口转发</strong>则只是绑定了一个<strong>本地端口</strong>，而<strong>目标地址:目标端口</strong>则是不固定的。<strong>目标地址:目标端口</strong>是由发起的请求决定的，比如，请求地址为<strong>192.168.1.100:3000</strong>，则通过SSH转发的请求地址也是<strong>192.168.1.100:3000</strong>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-D 本地网卡地址:本地端口</span><br></pre></td></tr></table></figure>
<p>这时，通过<strong>动态端口转发</strong>，可以将在本地主机A1发起的请求，转发到远程主机B1，而由B1去真正地发起请求。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在本地主机A1登陆远程云主机B1，并进行动态端口转发ssh -D localhost:2000 root@103.59.22.17</span><br></pre></td></tr></table></figure>
<p>而在本地发起的请求，需要由Socket代理(<a href="https://en.wikipedia.org/wiki/SOCKS" target="_blank" rel="noopener">Socket Proxy</a>)转发到SSH绑定的2000端口。以Firefox浏览器为例，配置Socket代理需要找到<strong>首选项</strong>&gt;<strong>高级</strong>&gt;<strong>网络</strong>&gt;<strong>连接</strong>-&gt;<strong>设置</strong>:</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/2020-06/2019-01-11-socket-proxy.png" alt=""></p>
<p>这样的话，Firefox浏览器发起的请求都会转发到2000端口，然后通过SSH转发到真正地请求地址。若Node.js服务运行在远程云主机B1上，则在Firefox中访问<a href="localhost:3000">localhost:3000</a>即可以访问。如果主机B1能够访问外网的话，则可以科学上网……</p>
<h3 id="链式端口转发"><a href="#链式端口转发" class="headerlink" title="链式端口转发"></a>链式端口转发</h3><p><strong>本地端口转发</strong>与<strong>远程端口转发</strong>结合起来使用，可以进行链式转发。假设A主机在公司，B主机在家，C主机为远程云主机。A主机上运行了前文的Node.js服务，需要在B主机上访问该服务。由于A和B不在同一个网络，且A主机没有独立公共IP地址，所以无法直接访问服务。</p>
<p>通过本地端口转发，将发送到B主机3000端口的请求，转发到远程云主机C的2000端口。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在B主机登陆远程云主机C，并进行本地端口转发ssh -L localhost:3000:localhost:2000 root@103.59.22.17</span><br></pre></td></tr></table></figure>
<p>通过远程端口转发，将发送到远程云主机C端口2000的请求，转发到A主机的3000端口。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在A主机登陆远程云主机C，并进行远程端口转发ssh -R localhost:2000:localhost:3000 root@103.59.22.17</span><br></pre></td></tr></table></figure>
<p>这样，在主机B可以通过访问<a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000</a>来访问主机A上的服务。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在主机B访问主机A上的服务curl http:&#x2F;&#x2F;localhost:3000Hello Fundebug</span><br></pre></td></tr></table></figure>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul>
<li><a href="https://help.ubuntu.com/community/SSH/OpenSSH/PortForwarding?action=fullsearch&amp;value=linkto%3A&quot;SSH%2FOpenSSH%2FPortForwarding&quot;&amp;context=180" target="_blank" rel="noopener">SSH PortForwarding</a></li>
<li><a href="http://www.pchou.info/linux/2015/11/01/ssh-tunnel.html" target="_blank" rel="noopener">SSH隧道的原理和实现</a></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Ubuntu内核(更新和卸载内核、取消自动更新)</title>
    <url>/2019/05/22/%E5%85%B3%E4%BA%8EUbuntu%E5%86%85%E6%A0%B8(%E6%9B%B4%E6%96%B0%E5%92%8C%E5%8D%B8%E8%BD%BD%E5%86%85%E6%A0%B8%E3%80%81%E5%8F%96%E6%B6%88%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0)/</url>
    <content><![CDATA[<p>Linux最新的内核通常具有更好的安全性和更丰富的功能，通常在升级完后旧的内核依旧存在，本文介绍如何手动升级内核以及删除不需要的旧内核以节省空间。<a id="more"></a></p>
<h2 id="Ubuntu升级新内核和卸载旧内核"><a href="#Ubuntu升级新内核和卸载旧内核" class="headerlink" title="Ubuntu升级新内核和卸载旧内核"></a>Ubuntu升级新内核和卸载旧内核</h2><p>先查看当前的内核版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure>
<h3 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h3><p>以下方法默认开启了内核自动更新</p>
<h4 id="1-如果要升级最新的内核-假设你很久没有update了"><a href="#1-如果要升级最新的内核-假设你很久没有update了" class="headerlink" title="1.如果要升级最新的内核(假设你很久没有update了)"></a>1.如果要升级最新的内核(假设你很久没有update了)</h4><p>升级软件包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<p>查看可用内核：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-cache search linux-image</span><br></pre></td></tr></table></figure>
<p>选择合适的内核后，<code>sudo apt-get install</code>安装相应内核</p>
<h4 id="2-如果不需要更新最新内核"><a href="#2-如果不需要更新最新内核" class="headerlink" title="2.如果不需要更新最新内核"></a>2.如果不需要更新最新内核</h4><p>假设以前已经执行过<code>sudo apt update</code>，内核已经下载好，并且就用已经下载好的内核</p>
<p>先检查有什么已经下载过的内核：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dpkg --list | grep linux-image</span><br></pre></td></tr></table></figure>
<p>选择合适的内核安装</p>
<p>另外，用户也可以上 <a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/" target="_blank" rel="noopener">http://kernel.ubuntu.com/~kernel-ppa/mainline/</a> 来下载自己需要的内核，然后<code>sudo dpkg -i *.deb</code>安装</p>
<h3 id="卸载内核"><a href="#卸载内核" class="headerlink" title="卸载内核"></a>卸载内核</h3><p>注意：不要先盲目地卸载内核，起码要安装一个新的才可以卸载</p>
<p>查看内核安装情况：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dpkg --list | grep linux-image</span><br><span class="line">dpkg --list | grep linux-headers</span><br></pre></td></tr></table></figure>
<p>卸载内核：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ap purge linux-image-xx</span><br><span class="line">sudo apt purge linux-headers-xx</span><br><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure>
<p>在上述操作都完成之后，执行<code>sudo update-grub</code>更新grub</p>
<h2 id="Ubuntu如何关闭内核的自动更新"><a href="#Ubuntu如何关闭内核的自动更新" class="headerlink" title="Ubuntu如何关闭内核的自动更新"></a>Ubuntu如何关闭内核的自动更新</h2><p>执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-mark hold linux-image-generic linux-headers-generic</span><br></pre></td></tr></table></figure>
<p>如果要重新启用内核更新：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-mark unhold linux-image-generic linux-headers-generic</span><br></pre></td></tr></table></figure>
<hr>
<p>参考：</p>
<p><a href="https://askubuntu.com/questions/678630/how-can-i-avoid-kernel-updates" target="_blank" rel="noopener">How can I avoid kernel updates?</a><br><a href="https://juejin.im/entry/5a9c9449f265da2384400e67" target="_blank" rel="noopener">ubuntu升级软件但是禁用内核升级</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Use Gmsh and SU2 to simulate 2D compressor cascade</title>
    <url>/2019/05/22/Use-Gmsh-and-SU2-to-simulate-2D-compressor-cascade/</url>
    <content><![CDATA[<p>This article describle simulation of 2D compressor cascade with Gmsh for grid generation and SU2 for flowfield. <a id="more"></a></p>
<p>Thanks Nathan Ricks’ help!**</p>
<h3 id="Draft-block-topological-structure"><a href="#Draft-block-topological-structure" class="headerlink" title="Draft block topological structure"></a>Draft block topological structure</h3><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g3aixd9bvwj20lv0bpdgx.jpg" alt=""></p>
<p>Curve1 - LE circle,   Curve2 - suction surface,   Curve3 - TE circle,   Curve4 - pressure surface,   Curve5,6,7,8 - transition curve between dense and sparse nodes.  All these curves build the airfoil line loop.</p>
<p>The inlet, outlet and two periodic boundaries construct another line loop. The two line loops construct computational domain.</p>
<blockquote>
<p>Need to notice:</p>
<p>The direction of the curves used for line loop; </p>
<p>The index of Line should be correspond to the physical curve marker</p>
</blockquote>
<h3 id="Generation-of-unstructured-mesh-by-Gmsh"><a href="#Generation-of-unstructured-mesh-by-Gmsh" class="headerlink" title="Generation of  unstructured mesh by Gmsh"></a>Generation of  unstructured mesh by Gmsh</h3><h4 id="Python-script"><a href="#Python-script" class="headerlink" title="Python script"></a>Python script</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">f = open(<span class="string">'cascade_airfoil.geo'</span>,<span class="string">'w+'</span>)</span><br><span class="line"></span><br><span class="line">f.write(<span class="string">'// Generate mesh using: \n'</span>)</span><br><span class="line">f.write(<span class="string">'// gmsh something.geo -2 name.su2 \n'</span>)</span><br><span class="line"><span class="comment">## Write standard meshing settings for gmsh</span></span><br><span class="line">f.write(<span class="string">'\n// Global mesh controls: \n'</span>)</span><br><span class="line">f.write(<span class="string">'Mesh.Algorithm=6; \n'</span>)         <span class="comment"># 6=Frontal</span></span><br><span class="line">f.write(<span class="string">'Mesh.RandomFactor=1e-12; \n'</span>)</span><br><span class="line">f.write(<span class="string">'Geometry.Tolerance=1e-16; \n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Import airfoil coordinates</span></span><br><span class="line">file = open(<span class="string">'geom.dat'</span>, <span class="string">'r+'</span>)</span><br><span class="line">xa,ya = [], []</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> file:</span><br><span class="line">    row = l.split()</span><br><span class="line">    <span class="keyword">if</span> len(row) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    xa.append(float(row[<span class="number">0</span>]))</span><br><span class="line">    ya.append(float(row[<span class="number">1</span>]))</span><br><span class="line">file.close()</span><br><span class="line">x_t,y_t = [], []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(int(len(xa)/<span class="number">2</span>)):</span><br><span class="line">    x_t.append(xa.pop())</span><br><span class="line">    y_t.append(ya.pop())</span><br><span class="line">xa = xa[:<span class="number">-1</span>] + x_t[:<span class="number">-1</span>]</span><br><span class="line">ya = ya[:<span class="number">-1</span>] + y_t[:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">## Import domain coordinates</span></span><br><span class="line">file = open(<span class="string">'boundary.dat'</span>, <span class="string">'r+'</span>)</span><br><span class="line">xd,yd = [], []</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> file:</span><br><span class="line">    row = l.split()</span><br><span class="line">    <span class="keyword">if</span>(len(row) != <span class="number">2</span>):</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    xd.append(float(row[<span class="number">0</span>]))    <span class="comment"># skip column 1, all zeros</span></span><br><span class="line">    yd.append(float(row[<span class="number">1</span>]))</span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">## Write airfoil coordinates to geo file</span></span><br><span class="line">point_no = <span class="number">0</span>   <span class="comment">#   keep track of point numbering (required for mesh scheme)</span></span><br><span class="line"></span><br><span class="line">f.write(<span class="string">'\n// Airfoil\n'</span>)</span><br><span class="line">num_a = len(xa)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num_a):</span><br><span class="line">    <span class="keyword">if</span> point_no &lt;= <span class="number">20</span> <span class="keyword">or</span> num_a<span class="number">-20</span>&lt;= point_no&lt;=num_a:</span><br><span class="line">        f.write(<span class="string">'Point(%i) = &#123;%.8f, %.8f, 0.0, 0.00005&#125;;\n'</span> % (point_no,xa[i],ya[i]))</span><br><span class="line">    <span class="keyword">elif</span> int(num_a/<span class="number">2</span>)<span class="number">-20</span> &lt;=point_no &lt;= int(num_a/<span class="number">2</span>)+<span class="number">20</span>:</span><br><span class="line">        f.write(<span class="string">'Point(%i) = &#123;%.8f, %.8f, 0.0, 0.00005&#125;;\n'</span> % (point_no,xa[i],ya[i]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        f.write(<span class="string">'Point(%i) = &#123;%.8f, %.8f, 0.0, 0.001&#125;;\n'</span> % (point_no,xa[i],ya[i]))</span><br><span class="line">    point_no += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">f.write(<span class="string">'\n// Domain\n'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(xd)):</span><br><span class="line">    f.write(<span class="string">'Point(%i) = &#123;%.8f, %.8f, 0.0, 0.002&#125;;\n'</span> % (point_no,xd[i],yd[i]))</span><br><span class="line">    point_no +=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Define splines of airfoil surface</span></span><br><span class="line">f.write(<span class="string">'\n //Airfoil splines\n'</span>)</span><br><span class="line">line_no = <span class="number">1</span> <span class="comment"># keep track of line numbering (required for mesh scheme)</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i:%i,%i:%i&#125;;\n'</span> % (line_no,<span class="number">260</span>,<span class="number">279</span>,<span class="number">0</span>,<span class="number">20</span>))   <span class="comment"># l_no.1 le_cir</span></span><br><span class="line">line_no += <span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i:%i&#125;;\n'</span> % (line_no,<span class="number">21</span>,<span class="number">119</span>))   <span class="comment"># l_no.2 suction</span></span><br><span class="line">line_no += <span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i:%i&#125;;\n'</span> % (line_no,<span class="number">120</span>,<span class="number">160</span>))   <span class="comment"># l_no.3 te_cir</span></span><br><span class="line">line_no += <span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i:%i&#125;;\n'</span> % (line_no,<span class="number">161</span>,<span class="number">259</span>))   <span class="comment"># l_no.4 pressure</span></span><br><span class="line">line_no +=<span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i,%i&#125;;\n'</span> % (line_no,<span class="number">20</span>,<span class="number">21</span>))   <span class="comment">#l_no.5 le_cir to suction</span></span><br><span class="line">line_no +=<span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i,%i&#125;;\n'</span> % (line_no,<span class="number">119</span>,<span class="number">120</span>))   <span class="comment">#l_no.6 suction to te_cir</span></span><br><span class="line">line_no +=<span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i,%i&#125;;\n'</span> % (line_no,<span class="number">160</span>,<span class="number">161</span>))   <span class="comment">#l_no.7 te_cir to pressure</span></span><br><span class="line">line_no +=<span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i,%i&#125;;\n'</span> % (line_no,<span class="number">259</span>,<span class="number">260</span>))   <span class="comment">#l_no.8 pressure to le_cir</span></span><br><span class="line">line_no +=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Define lineloop</span></span><br><span class="line">ll_no = <span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Line Loop(%i) = &#123;1,5,2,6,3,7,4,8&#125;;\n'</span> % ll_no) <span class="comment"># airfoil surface</span></span><br><span class="line">ll_no += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Define splines of domain</span></span><br><span class="line">f.write(<span class="string">'\n//Domain spline\n'</span>)</span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i:%i&#125;;\n'</span> % (line_no,<span class="number">476</span>,<span class="number">280</span>)) <span class="comment">#l_no.9 top boundary</span></span><br><span class="line">line_no += <span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i,%i&#125;;\n'</span> % (line_no,<span class="number">280</span>,<span class="number">477</span>)) <span class="comment">#l_no.10 inlet</span></span><br><span class="line">line_no += <span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i:%i&#125;;\n'</span> % (line_no,<span class="number">477</span>,<span class="number">673</span>)) <span class="comment">#l_no.11 down boundary</span></span><br><span class="line">line_no += <span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Spline(%i) = &#123;%i,%i&#125;;\n'</span> % (line_no,<span class="number">673</span>,<span class="number">476</span>)) <span class="comment">#l_no.12 outlet</span></span><br><span class="line">line_no += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">f.write(<span class="string">'Line Loop(%i) = &#123;9:12&#125;;\n'</span> % ll_no) <span class="comment"># domain boundary</span></span><br><span class="line">ll_no += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">surf_no = <span class="number">1</span></span><br><span class="line">f.write(<span class="string">'Plane Surface(%i) = &#123;2,1&#125;;\n'</span> % (surf_no))</span><br><span class="line">surf_no += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">f.write(<span class="string">'//Boundary layer\n'</span>)</span><br><span class="line">f.write(<span class="string">'Field[1] = BoundaryLayer;\n'</span>)</span><br><span class="line">f.write(<span class="string">'Field[1].EdgesList = &#123;1,5,2,6,3,7,4,8&#125;;\n'</span>)</span><br><span class="line"><span class="comment">#f.write('Field[1].FanNodesList = &#123;1&#125;; // "fan" cells around trailing edge\n')</span></span><br><span class="line"><span class="comment">#f.write('Mesh.BoundaryLayerFanPoints=20; // number of fan points\n')</span></span><br><span class="line">f.write(<span class="string">'Field[1].hwall_n = 1e-5; // first cell height\n'</span>)</span><br><span class="line">f.write(<span class="string">'Field[1].thickness = 0.001; // total thickness of BL\n'</span>)</span><br><span class="line">f.write(<span class="string">'Field[1].ratio = 1.2; // growth ratio\n'</span>)</span><br><span class="line">f.write(<span class="string">'Field[1].Quads = 1; // prism cells = 1, tri cells = 0\n'</span>)</span><br><span class="line">f.write(<span class="string">'BoundaryLayer Field = 1;\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Define physical (named) surfaces</span></span><br><span class="line">f.write(<span class="string">'\n// Defined physical (named) surfaces\n'</span>)</span><br><span class="line">f.write(<span class="string">'// Define physical entities\n'</span>)</span><br><span class="line">f.write(<span class="string">'Physical Curve("airfoil") = &#123;1,5,2,6,3,7,4,8&#125;;\n'</span>)</span><br><span class="line">f.write(<span class="string">'Physical Curve("outlet") = &#123;12&#125;;\n'</span>)</span><br><span class="line">f.write(<span class="string">'Physical Curve("inlet") = &#123;10&#125;;\n'</span>)</span><br><span class="line">f.write(<span class="string">'Physical Curve("top") = &#123;9&#125;;\n'</span>)</span><br><span class="line">f.write(<span class="string">'Physical Curve("bottom") = &#123;11&#125;;\n'</span>)</span><br><span class="line">f.write(<span class="string">'Physical Surface("fluid") = &#123;1&#125;;\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Define Periodic Curve</span></span><br><span class="line">f.write(<span class="string">'// Define Periodic Curve\n'</span>)</span><br><span class="line">f.write(<span class="string">'Periodic Curve &#123;9&#125; = &#123;-11&#125; Translate &#123;0,%.8f,0&#125;;\n'</span> % (<span class="number">0.07774</span>))</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>
<h5 id="Generation-and-check-with-GUI"><a href="#Generation-and-check-with-GUI" class="headerlink" title="Generation and check with GUI"></a>Generation and check with GUI</h5><blockquote>
<p>Gmsh -2 cascade_airfoil.geo -o airfoil.su2</p>
</blockquote>
<p>check the label and direction of curves carefully!</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g3almpxormj21hc0u0wjv.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g3akdh1wwoj21hc0u07cm.jpg" alt=""></p>
<h3 id="SU2-numerical-simulation"><a href="#SU2-numerical-simulation" class="headerlink" title="SU2 numerical simulation"></a>SU2 numerical simulation</h3><h4 id="Preprocessing-periodic-boundary-by-SU2-MSH"><a href="#Preprocessing-periodic-boundary-by-SU2-MSH" class="headerlink" title="Preprocessing periodic boundary by SU2_MSH"></a>Preprocessing periodic boundary by SU2_MSH</h4><p>Use SU2_MSH to generate the periodic .su2 mesh, optional to modify the MESH_OUT_FILENAME in .cfg file or the default meshout.su2 will be generated.</p>
<p><strong>Notice that the periodic distance in .cfg file should be correspond to gmsh</strong>!!</p>
<blockquote>
<p>SU2_MSH xxx.cfg</p>
</blockquote>
<p>If the periodic boundaries were specified with wrong label, SU2_MSH will give warning as follow:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">-------------------------------------------------------------------------</span><br><span class="line">|    ___ _   _ ___                                                      |</span><br><span class="line">|   &#x2F; __| | | |_  )   Release 6.0.0  &quot;Falcon&quot;                           |</span><br><span class="line">|   \__ \ |_| |&#x2F; &#x2F;                                                      |</span><br><span class="line">|   |___&#x2F;\___&#x2F;&#x2F;___|   Suite (Mesh Adaptation Code)                      |</span><br><span class="line">|                                                                       |</span><br><span class="line">-------------------------------------------------------------------------</span><br><span class="line">| The current SU2 release has been coordinated by the                   |</span><br><span class="line">| SU2 International Developers Society &lt;www.su2devsociety.org&gt;          |</span><br><span class="line">| with selected contributions from the open-source community.           |</span><br><span class="line">-------------------------------------------------------------------------</span><br><span class="line">| The main research teams contributing to the current release are:      |</span><br><span class="line">| - Prof. Juan J. Alonso&#39;s group at Stanford University.                |</span><br><span class="line">| - Prof. Piero Colonna&#39;s group at Delft University of Technology.      |</span><br><span class="line">| - Prof. Nicolas R. Gauger&#39;s group at Kaiserslautern U. of Technology. |</span><br><span class="line">| - Prof. Alberto Guardone&#39;s group at Polytechnic University of Milan.  |</span><br><span class="line">| - Prof. Rafael Palacios&#39; group at Imperial College London.            |</span><br><span class="line">| - Prof. Vincent Terrapon&#39;s group at the University of Liege.          |</span><br><span class="line">| - Prof. Edwin van der Weide&#39;s group at the University of Twente.      |</span><br><span class="line">| - Lab. of New Concepts in Aeronautics at Tech. Inst. of Aeronautics.  |</span><br><span class="line">-------------------------------------------------------------------------</span><br><span class="line">| Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon,       |</span><br><span class="line">|                      Tim Albring, and the SU2 contributors.           |</span><br><span class="line">|                                                                       |</span><br><span class="line">| SU2 is free software; you can redistribute it and&#x2F;or                  |</span><br><span class="line">| modify it under the terms of the GNU Lesser General Public            |</span><br><span class="line">| License as published by the Free Software Foundation; either          |</span><br><span class="line">| version 2.1 of the License, or (at your option) any later version.    |</span><br><span class="line">|                                                                       |</span><br><span class="line">| SU2 is distributed in the hope that it will be useful,                |</span><br><span class="line">| but WITHOUT ANY WARRANTY; without even the implied warranty of        |</span><br><span class="line">| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU      |</span><br><span class="line">| Lesser General Public License for more details.                       |</span><br><span class="line">|                                                                       |</span><br><span class="line">| You should have received a copy of the GNU Lesser General Public      |</span><br><span class="line">| License along with SU2. If not, see &lt;http:&#x2F;&#x2F;www.gnu.org&#x2F;licenses&#x2F;&gt;.   |</span><br><span class="line">-------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">------------------------ Physical Case Definition -----------------------</span><br><span class="line">Input mesh file name: airfoil.su2</span><br><span class="line"></span><br><span class="line">----------------------- Grid adaptation strategy ------------------------</span><br><span class="line">Grid modification to run periodic bc problems.</span><br><span class="line"></span><br><span class="line">-------------------------- Output Information ---------------------------</span><br><span class="line">Output mesh file name: meshout.su2. </span><br><span class="line">Output mesh file name: meshout.su2. </span><br><span class="line">Restart flow file name: restart_flow.dat.</span><br><span class="line"></span><br><span class="line">------------------- Config File Boundary Information --------------------</span><br><span class="line">Periodic boundary marker(s): bottom, top.</span><br><span class="line">Giles boundary marker(s): inlet, outlet.</span><br><span class="line">Constant heat flux wall boundary marker(s): airfoil.</span><br><span class="line"></span><br><span class="line">---------------------- Read Grid File Information -----------------------</span><br><span class="line">Two dimensional problem.</span><br><span class="line">13856 points.</span><br><span class="line">5 surface markers.</span><br><span class="line">249 boundary elements in index 0 (Marker &#x3D; airfoil).</span><br><span class="line">7 boundary elements in index 1 (Marker &#x3D; outlet).</span><br><span class="line">6 boundary elements in index 2 (Marker &#x3D; inlet).</span><br><span class="line">6 boundary elements in index 3 (Marker &#x3D; top).</span><br><span class="line">6 boundary elements in index 4 (Marker &#x3D; bottom).</span><br><span class="line">14623 triangles.</span><br><span class="line">6225 quadrilaterals.</span><br><span class="line"></span><br><span class="line">----------------------- Preprocessing computations ----------------------</span><br><span class="line">Setting local point and element connectivity.</span><br><span class="line">Check numerical grid orientation.</span><br><span class="line">Identify faces, edges and vertices.</span><br><span class="line">Set control volume structure.</span><br><span class="line">Area of the computational grid: 0.0195699.</span><br><span class="line"></span><br><span class="line">-------------------- Setting the periodic boundaries --------------------</span><br><span class="line">Setting the periodic boundary conditions.</span><br><span class="line">Checking top boundary against periodic donor, bottom. </span><br><span class="line">   Bad match for point 13431.	Nearest donor distance: 1.7103460821e-001.</span><br><span class="line">   Bad match for point 13432.	Nearest donor distance: 1.7095583272e-001.</span><br><span class="line">   Bad match for point 13481.	Nearest donor distance: 1.7084838807e-001.</span><br><span class="line">   Bad match for point 13506.	Nearest donor distance: 1.7070184097e-001.</span><br><span class="line">   Bad match for point 13531.	Nearest donor distance: 1.7050196155e-001.</span><br><span class="line">   Bad match for point 13556.	Nearest donor distance: 1.7022934218e-001.</span><br><span class="line">   Bad match for point 11181.	Nearest donor distance: 1.6985751412e-001.</span><br><span class="line"></span><br><span class="line"> !!! Warning !!!</span><br><span class="line">Bad matches found. Computation will continue, but be cautious.</span><br><span class="line"></span><br><span class="line">Checking bottom boundary against periodic donor, top. </span><br><span class="line">   Bad match for point 11031.	Nearest donor distance: 1.6985751412e-001.</span><br><span class="line">   Bad match for point 11032.	Nearest donor distance: 1.7008546569e-001.</span><br><span class="line">   Bad match for point 11081.	Nearest donor distance: 1.7025263430e-001.</span><br><span class="line">   Bad match for point 11106.	Nearest donor distance: 1.7037521932e-001.</span><br><span class="line">   Bad match for point 11131.	Nearest donor distance: 1.7046510670e-001.</span><br><span class="line">   Bad match for point 11156.	Nearest donor distance: 1.7053101567e-001.</span><br><span class="line">   Bad match for point 10806.	Nearest donor distance: 1.7057934143e-001.</span><br><span class="line"></span><br><span class="line"> !!! Warning !!!</span><br><span class="line">Bad matches found. Computation will continue, but be cautious.</span><br><span class="line"></span><br><span class="line">Number of new points: 4.</span><br><span class="line">Number of new interior elements: 2.</span><br><span class="line">Number of new boundary elements added to preexisting markers: 1.</span><br><span class="line"></span><br><span class="line">Completed in 0.4530000000 seconds on 1 core.</span><br><span class="line"></span><br><span class="line">------------------------- Exit Success (SU2_MSH) ------------------------</span><br></pre></td></tr></table></figure>
<p>Now in the work directory three files are generated: periodic_orignianl.dat, periodic_halo.dat (Tecplot readable) and meshout.su2(if MESH_OUT_FILENAME unchanged).</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g3al7rqg9wj20rz0ojq7q.jpg" alt=""></p>
<p><center>mesh original</center><br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g3al6dqctgj20rx0om796.jpg" alt=""></p>
<p><center>mesh halo</center></p>
<h4 id="Run-SU2-CFD"><a href="#Run-SU2-CFD" class="headerlink" title="Run SU2_CFD"></a>Run SU2_CFD</h4><p>Sequential Mode</p>
<blockquote>
<p>SU2_CFD xxx.cfg</p>
</blockquote>
<p>Parallel Mode</p>
<blockquote>
<p>parallel_computation.py -n 8 -f xxx.cfg</p>
</blockquote>
<p>Use tail command to monitor the real-time result in history.dat</p>
<blockquote>
<p>tail -f history.dat</p>
</blockquote>
<h3 id="Post-processing"><a href="#Post-processing" class="headerlink" title="Post-processing"></a>Post-processing</h3><p>Use tecplot to show the convergence history and flow field details.</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g3alk43ngdj20s40p00sw.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g3alkbyq0qj20s40p00sq.jpg" alt=""></p>
<h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><ul>
<li><p>In Gmsh, use Periodic Curve ‘{per1 index} = {per2 index} translate {0,delta_y,0}’ to specify the periodic boundary.</p>
</li>
<li><p>Use ‘python parallel_computation.py [options]’ to run parallel case instead of ‘mpirun’ or solution ‘flow.dat’ will miss.</p>
</li>
<li><p>su2 cfg AOA is invalid if specify inlet boundary flow direction.</p>
</li>
<li><p>Use SU2_MSH to check the .su2 mesh before running SU2_CFD. Modify the MESH_OUT_FILENAME in .cfg file to custom name, then command line /SU2_MSH xxx.cfg</p>
</li>
</ul>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>su2</tag>
        <tag>gmsh</tag>
      </tags>
  </entry>
  <entry>
    <title>扩大VMware虚拟机中CentOS7的硬盘空间</title>
    <url>/2019/05/15/%E6%89%A9%E5%A4%A7VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%ADCentOS7%E7%9A%84%E7%A1%AC%E7%9B%98%E7%A9%BA%E9%97%B4/</url>
    <content><![CDATA[<p>初期分配的VMware硬盘空间常常在使用一段时间后捉襟见肘，这时需要扩展虚拟磁盘空间的大小，本文介绍详细步骤。<a id="more"></a></p>
<h3 id="1-查看挂载点信息："><a href="#1-查看挂载点信息：" class="headerlink" title="1.查看挂载点信息："></a>1.查看挂载点信息：</h3><blockquote>
<p>[root@localhost]# df -h<br>文件系统 容量 已用 可用 已用% 挂载点<br>/dev/mapper/centos-root 18G 15G 2.9G 84% /<br>devtmpfs 485M 0 485M 0% /dev<br>tmpfs 494M 84K 494M 1% /dev/shm<br>tmpfs 494M 7.1M 487M 2% /run<br>tmpfs 494M 0 494M 0% /sys/fs/cgroup<br>/dev/sda1 497M 119M 379M 24% /boot<br>/dev/sr0 3.9G 3.9G 0 100% /run/media/zoubf/CentOS</p>
</blockquote>
<h3 id="2-开始扩展"><a href="#2-开始扩展" class="headerlink" title="2. 开始扩展"></a>2. 开始扩展</h3><h4 id="2-1-扩展VMWare硬盘空间"><a href="#2-1-扩展VMWare硬盘空间" class="headerlink" title="2.1 扩展VMWare硬盘空间"></a>2.1 扩展VMWare硬盘空间</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 关闭Vmware 的 Linux系统，这样，才能在VMWare菜单中设置需要增加到的磁盘大小</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p><strong>如果这个选项是灰色的，说明此虚拟机建有快照，把快照全部删除再试试</strong></p>
<h4 id="2-2-对新增加的硬盘进行分区、格式化"><a href="#2-2-对新增加的硬盘进行分区、格式化" class="headerlink" title="2.2. 对新增加的硬盘进行分区、格式化"></a>2.2. 对新增加的硬盘进行分区、格式化</h4><blockquote>
<p>增加了空间的硬盘是 /dev/sda<br>分区：<br>[root@localhost]# fdisk /dev/sda　　　　<br>p　　　　　　　查看已分区数量（我看到有两个 /dev/sda1 /dev/sda2）<br>n　　　　　　　新增加一个分区<br>p　　　　　　　分区类型我们选择为主分区<br>　　　　　　分区号选3（因为1,2已经用过了，见上）<br>回车　　　　　　默认（起始扇区）<br>回车　　　　　　默认（结束扇区）<br>t　　　　　　　修改分区类型<br>　　　　　　 选分区3<br>8e　　　　　　修改为LVM（8e就是LVM）<br>w　　　　　　写分区表<br>q　　　　　　完成，退出fdisk命令</p>
</blockquote>
<p><strong>使用partprobe 命令 或者重启机器</strong><br>格式化分区</p>
<blockquote>
<p>mkfs.ext3 /dev/sda3</p>
</blockquote>
<h4 id="2-3-添加新LVM到已有的LVM组，实现扩容"><a href="#2-3-添加新LVM到已有的LVM组，实现扩容" class="headerlink" title="2.3.添加新LVM到已有的LVM组，实现扩容"></a>2.3.添加新LVM到已有的LVM组，实现扩容</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lvm　　　　　　　　　　　　　　　　　　    进入lvm管理</span><br><span class="line">lvm&gt;pvcreate &#x2F;dev&#x2F;sda3　　　这是初始化刚才的分区，必须的</span><br><span class="line">lvm&gt;vgextend centos &#x2F;dev&#x2F;sda3  将初始化过的分区加入到虚拟卷组centos (卷和卷组的命令可以通过  vgdisplay )</span><br><span class="line">lvm&gt;vgdisplay -v</span><br><span class="line">lvm&gt;lvextend -l+21513 &#x2F;dev&#x2F;mapper&#x2F;centos-root　　扩展已有卷的容量（21513 是通过vgdisplay查看的free的大小）</span><br><span class="line">lvm&gt;pvdisplay   查看卷容量，这时你会看到一个很大的卷了</span><br><span class="line">lvm&gt;quit    　退出</span><br><span class="line">12345678</span><br></pre></td></tr></table></figure>
<h4 id="2-4-以上只是卷扩容了，下面是文件系统的真正扩容，输入以下命令："><a href="#2-4-以上只是卷扩容了，下面是文件系统的真正扩容，输入以下命令：" class="headerlink" title="2.4.以上只是卷扩容了，下面是文件系统的真正扩容，输入以下命令："></a>2.4.以上只是卷扩容了，下面是文件系统的真正扩容，输入以下命令：</h4><p><strong>CentOS 7 下面 由于使用的是 XFS，所以要用</strong></p>
<blockquote>
<p>xfs_growfs /dev/mapper/centos-root</p>
</blockquote>
<p><strong>CentOS 6 下面 要用</strong></p>
<blockquote>
<p>resize2fs /dev/mapper/centos-root</p>
</blockquote>
<h4 id="2-5-查看新的磁盘空间"><a href="#2-5-查看新的磁盘空间" class="headerlink" title="2.5.查看新的磁盘空间"></a>2.5.查看新的磁盘空间</h4><blockquote>
<p>df -h</p>
</blockquote>
]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Teploct处理平面叶栅</title>
    <url>/2019/05/15/%E5%85%B3%E4%BA%8ETeploct%E5%A4%84%E7%90%86%E5%B9%B3%E9%9D%A2%E5%8F%B6%E6%A0%85%E5%91%A8%E6%9C%9F%E6%80%A7%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<p>本文记录使用Tecplot后处理平面叶栅流场过程中的一些注意事项。<a id="more"></a></p>
<h4 id="周期性显示"><a href="#周期性显示" class="headerlink" title="周期性显示"></a>周期性显示</h4><p>1) Use duplicate zones for the desired zones to duplicate<br>2) Use Data&gt;alter&gt;specify equations with something like<br>{y} = {y} + offset_value.</p>
<p> Offset is the solidity and y follows the periodic direction.</p>
<h4 id="设置Vector分量"><a href="#设置Vector分量" class="headerlink" title="设置Vector分量"></a>设置Vector分量</h4><blockquote>
<p>Plot =&gt; Vector =&gt; Varaibles </p>
<p>U =&gt; Momentum_x, V =&gt; Momentum_y</p>
</blockquote>
<h4 id="画云图和等高线，并标出等高线值"><a href="#画云图和等高线，并标出等高线值" class="headerlink" title="画云图和等高线，并标出等高线值"></a>画云图和等高线，并标出等高线值</h4><blockquote>
<p>Zone Style &gt; Contour &gt; Contour Type &gt; Both Lines and Flood</p>
<p>Plot &gt; Contour &amp; Multi-Coloring &gt; Labels &gt; Show Labels</p>
</blockquote>
<h4 id="Linux环境Tecplot出图闪退"><a href="#Linux环境Tecplot出图闪退" class="headerlink" title="Linux环境Tecplot出图闪退"></a>Linux环境Tecplot出图闪退</h4><blockquote>
<p>Options &gt; Performance &gt; Rendering &gt; Image Export Options 选Fast</p>
<p>或命令行 tec360 -mesa 启动Tecplot</p>
</blockquote>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>tecplot</tag>
      </tags>
  </entry>
  <entry>
    <title>Release“无法找到“xxx.exe”的调试信息……“解决方案</title>
    <url>/2019/05/14/Release%E2%80%9C%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E2%80%9Cxxx.exe%E2%80%9D%E7%9A%84%E8%B0%83%E8%AF%95%E4%BF%A1%E6%81%AF%E2%80%A6%E2%80%A6%E2%80%9C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p>Windows平台采用Microsoft Visual Studio在Release模式下调试代码遇到的问题<a id="more"></a></p>
<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>VS2012环境中调试FORTRAN项目，debug模式下一切正常，调整为release模式则出现“无法找到“xxx.exe”的调试信息，或者调试信息不匹配。未使用调试信息生成二进制文件。”</p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>首先打开菜单 项目-&gt;项目属性页<br>1。选择 配置属性-&gt;链接器-&gt;调试-&gt;生成调试信息 改为 是<br>2。选择 配置属性-&gt;Fortran -&gt;常规-&gt;调试信息格式 改为 Line Numbers Only或者Full<br>3。选择 配置属性-&gt;Fortran-&gt;优化-&gt;优化 改为 禁用(/Od) </p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>fortran</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10添加右键打开cmd和Powershell窗口（管理员/非管理员）</title>
    <url>/2019/05/14/Win10%E6%B7%BB%E5%8A%A0%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80cmd%E5%92%8CPowershell%E7%AA%97%E5%8F%A3%EF%BC%88%E7%AE%A1%E7%90%86%E5%91%98%E9%9D%9E%E7%AE%A1%E7%90%86%E5%91%98%EF%BC%89/</url>
    <content><![CDATA[<p>向Windows右键菜单添加打开cmd命令，实现类似Linux系统下在指定目录打开Terminal的功能。<a id="more"></a></p>
<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h3><p>Win10打开命令行窗口的方法有很多，常见的有</p>
<p>① win+R输入cmd；</p>
<p>② win+X选择命令提示符；</p>
<p>③ 右键开始菜单选择命令提示符。</p>
<p>其中②③均有管理员/非管理员，并且可以在 设置 → 个性化 → 任务栏 中改成Powershell。</p>
<p>但有时候需要在指定的文件夹打开命令行窗口或者Powershell，还需要再进行cd操作，比较麻烦，所有现在添加右键命令：在此处打开命令行（或Powershell）窗口，管理员和非管理员方式。</p>
<h3 id="2-添加方法"><a href="#2-添加方法" class="headerlink" title="2.添加方法"></a>2.添加方法</h3><h4 id="2-1-方法一：直接操作注册表手动添加"><a href="#2-1-方法一：直接操作注册表手动添加" class="headerlink" title="2.1 方法一：直接操作注册表手动添加"></a>2.1 方法一：直接操作注册表手动添加</h4><p>通过注册表进行添加，可以直接win+R，输入regedit打开注册表，定位到以下路径（可以直接复制粘贴到注册表编辑器上面的地址栏）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_CLASSES_ROOT\Directory\Background\shell\</span><br></pre></td></tr></table></figure>
<p><strong>！！！</strong></p>
<p><strong>注意：在进行进一步操作前请务必备份注册表，以免出现问题，可以进行还原。选择 文件-导出 ，全部备份文件较大，可以选择仅备份上面路径的分支。</strong></p>
<p><strong>！！！</strong></p>
<p>具体可以参考：</p>
<p><a href="https://blog.csdn.net/hiudawn/article/details/80701935" target="_blank" rel="noopener">Win10设置右键以管理员方式打开cmd</a></p>
<p><a href="https://blog.csdn.net/tp7309/article/details/53449792" target="_blank" rel="noopener">如何设置在右键菜单中打开</a></p>
<h4 id="2-2方法二：通过编写-reg文件进行添加（推荐）"><a href="#2-2方法二：通过编写-reg文件进行添加（推荐）" class="headerlink" title="2.2方法二：通过编写.reg文件进行添加（推荐）"></a>2.2方法二：通过编写.reg文件进行添加（推荐）</h4><p>和上面其实本质上一样，只是通过代码进行，更方便。</p>
<p>参考：</p>
<p><a href="https://blog.csdn.net/huanghenghua/article/details/80199673" target="_blank" rel="noopener">Win10 Shift 右键打开命令行窗口（管理员/非管理员身份）</a></p>
<p><a href="https://blog.csdn.net/tp7309/article/details/53449792" target="_blank" rel="noopener">编写注册表reg文件及批处理操作注册表</a></p>
<p>具体方法如下：</p>
<h5 id="2-2-1-实现效果"><a href="#2-2-1-实现效果" class="headerlink" title="2.2.1 实现效果"></a>2.2.1 实现效果</h5><ul>
<li>右键：</li>
</ul>
<blockquote>
<p>在此处打开命令行窗口<br>在此处打开命令行窗口(管理员)</p>
</blockquote>
<ul>
<li>shift + 右键：</li>
</ul>
<blockquote>
<p>在此处打开 Powershell 窗口<br>在此处打开 Powershell 窗口(管理员)</p>
</blockquote>
<p>其中shift + 右键 实现“在此处打开 Powershell 窗口”为系统自带，不需要添加</p>
<p>下面代码里的3和4均是通过隐藏的PowerShell窗口来调起powershell(cmd)的，因此会闪过一次powershell窗口。打开的时候会有用户账户控制弹窗，以确认管理员身份，</p>
<h5 id="2-2-2-具体代码"><a href="#2-2-2-具体代码" class="headerlink" title="2.2.2 具体代码"></a>2.2.2 具体代码</h5><p>代码如下，Windows直接新建txt，粘贴进去保存，然后选择另存为，保存类型选所有文件、编码选ANSI、文件名为CmdAndPowershellAll.reg(名字无所谓，后缀为.reg就可以)。双击打开，会进行两次确认，然后会提示“已成功添加到注册表中”，这样就成功了！现在可以右键、shift+右键尝试一下了！</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"> </span><br><span class="line">; 原文链接：</span><br><span class="line">; https://blog.csdn.net/cxrsdn/article/details/84538767</span><br><span class="line"> </span><br><span class="line">; 若原先有，先删除原来的</span><br><span class="line">[-HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere]</span><br><span class="line">[-HKEY_CLASSES_ROOT\Directory\Background\shell\runas]</span><br><span class="line">[-HKEY_CLASSES_ROOT\Directory\Background\shell\PowershellAdmin]</span><br><span class="line"> </span><br><span class="line">; 1.右键：命令行</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere]</span><br><span class="line">@="在此处打开命令行窗口"</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere\command]</span><br><span class="line">@="cmd.exe -noexit -command Set-Location -literalPath \"%V\"" </span><br><span class="line"> </span><br><span class="line">; 2.右键：命令行（管理员）</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\runas]</span><br><span class="line">@="在此处打开命令行窗口(管理员)"</span><br><span class="line">"ShowBasedOnVelocityId"=dword:00639bc8</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\runas\command]</span><br><span class="line">@="cmd.exe /s /k pushd \"%V\""</span><br><span class="line"> </span><br><span class="line">; 3.shift+右键：Powershell(管理员)</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\PowershellAdmin]</span><br><span class="line">@="在此处打开 Powershell 窗口(管理员)"</span><br><span class="line">"Extended"=""</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\PowershellAdmin\command]</span><br><span class="line">@="\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -windowstyle hidden -Command $stpath = pwd; Start-Process PowerShell -ArgumentList \\\"-NoExit\\\", \\\"-Command Set-Location -literalPath '%V'\\\" -verb RunAs"</span><br><span class="line"> </span><br><span class="line">; 4.设置右键 管理员打开cmd的另一种方法（可用来替换上面的2）</span><br><span class="line">; 通过Powershell调起，会闪过一次Powershell的窗口，去掉下面几行的[; ]可以取消注释</span><br><span class="line">; [-HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHereAdmin]</span><br><span class="line">; </span><br><span class="line">; [HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHereAdmin]</span><br><span class="line">; @="在此处打开命令行窗口(管理员)"</span><br><span class="line">; </span><br><span class="line">; [HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHereAdmin\command]</span><br><span class="line">; @="PowerShell -windowstyle hidden -Command \"Start-Process cmd.exe -ArgumentList '/s,/k, pushd,%V' -Verb RunAs\""</span><br></pre></td></tr></table></figure>
<p>说明：</p>
<p>1.前面有分号;的是注释；<br>2.带有”Extended”=””的是shift+右键的，可以自行调整四个命令是否加这个；<br>3.可以参考这个链接：Win10 Shift 右键打开命令行窗口（管理员/非管理员身份）进行理解<br>4.cmd管理员有两种方法，一个是2的runas，一个是4的powershell调起，4（已注释掉）会闪过powershell窗口，所以没有采用。</p>
<hr>
<p>作者：cxrsdn<br>来源：CSDN<br>原文：<a href="https://blog.csdn.net/cxrsdn/article/details/84538767" target="_blank" rel="noopener">https://blog.csdn.net/cxrsdn/article/details/84538767</a><br>版权声明：本文为博主原创文章，转载请附上博文链接</p>
]]></content>
      <categories>
        <category>WINDOWS</category>
      </categories>
      <tags>
        <tag>命令行</tag>
      </tags>
  </entry>
  <entry>
    <title>ICEM CFD画2D叶栅网格</title>
    <url>/2019/05/11/ICEM-CFD%E7%94%BB2D%E5%8F%B6%E6%A0%85%E7%BD%91%E6%A0%BC/</url>
    <content><![CDATA[<p>学习ICEM CFD绘制2D平面叶栅网格心得。<a id="more"></a></p>
<p>1、准备叶型数据文件，格式如下，第一行表示每条线有141个点，有两条线，接下来是各点的XYZ坐标，叶型坐标再加一列零。注意Fluent默认2D平面是XY平面，需要Z坐标置零，不能将X或Y坐标置零；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6ild1jj20fh089t8y.jpg" alt=""><br>2、载入格式化几何文件，注意调整公差避免前后缘半径小于公差被抹掉；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6inajfj209l0cawev.jpg" alt=""></p>
<p>3、载入叶型后，通过Geometry选项卡下的工具进行修改，使用中线工具(Create midline)对吸压力面生成中弧线，上下平移中弧线一个栅距形成叶栅通道。通道上游端点向左下方向延申一个弦长左右形成进口段，出口段同理。使用端点工具(Curve ends)画出端点；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6iru4cj20b20c4jsf.jpg" alt=""><br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6ilmmwj20gv0eajro.jpg" alt=""></p>
<p>4、点击Blocking工具栏，使用2DPlaner初始化Block，并将Block对应的点和边线关联(Associate)至几何，此时需要将左边栏Geometry的Points和Curves，Blocking的Edges和Vertices勾上。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6j4tj9j20ko0hewf1.jpg" alt=""><br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6j7qaij20ez0cfq3h.jpg" alt=""></p>
<p>5、将Block切开(split block)，先对着上下游连接处切两刀，并关联block的点（不用关联边）。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6jf9jxj20cv0bdjrz.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6jivnpj20b70ag0t1.jpg" alt=""></p>
<p>6、纵向切分block，并将点移动(move vertices)到周期性边界上。也可以先snap project vertices<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6jlnvvj201a01a3yb.jpg" alt="">后再用move vertices<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6jrksrj201a01at8h.jpg" alt="">调整；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6kdl5aj20dt0cfq3g.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6kb94jj20j10gwt9l.jpg" alt=""></p>
<p>7、横向切割block，删除叶型部分的小block，关联edges到叶型吸压力面；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6kgbcmj20ha0erdgw.jpg" alt=""><br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6l1c3zj20fk0dfgn5.jpg" alt=""></p>
<p>8、勾选Parts-VORFN<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6kphq7j202k00na9t.jpg" alt=""> (该Part包含已删除的部分)，点击Split Block-Ogrid Block工具，勾选Around block，Offset视情况而定，可以选择0.3左右。点击Select Blocks<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6ku81bj200x00xmwx.jpg" alt="">，选择之前删掉的包含叶型的块，向外生成O型网格；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6l819qj20bo0bxwex.jpg" alt=""><br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6ln9e7j20em0ev75u.jpg" alt=""></p>
<p>9、增加叶型表面block的样条曲线控制点<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6lb21hj201a01a0si.jpg" alt="">，使block边界与叶型贴合更紧密，不要遗忘了前后缘；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6m1egvj20br0e70te.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6ltuauj20dn0at0sy.jpg" alt=""></p>
<p>10、点击Link Edge，用叶型表面Block线连接O型网格外层edge；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6mc9cxj20bo0bxgm7.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6mj9cjj20kn0gfjs8.jpg" alt=""></p>
<p>11、（可选）取消上下游连接处的点附着<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6mfmyxj201a01awea.jpg" alt="">)，并重新关联线附着<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6mpl3fj201a01amwy.jpg" alt="">，微调上下游连接处的block边界使网格结构更加合理。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6n71ufj20jc0goq4d.jpg" alt=""></p>
<p>12、全局网格周期性设置；周期性端点设置，可以右键vertices选择periodic在图上显示（周期性最后设置，若在Block初始化完成后立即设置周期性，则生成的网格周期性边界完全匹配，但是所有周期性边界上的点的坐标都将自动保持一致，即移动上方周期性边界的网格点也会使下方周期性边界的网格点同步移动。若采用完全匹配周期性边界，则只需要block关联一侧周期性边界的端点，另一侧的端点由周期决定）</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6ndcs9j20bo0bxq3t.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6niu20j20bo0cct9i.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6nl8unj20b20bijrt.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6o2bouj20gh0e2wfp.jpg" alt=""></p>
<p>13、预览网格，选择update all，勾选run check/fix blocks，勾选pre-mesh；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6o4si5j20bo0bxaaq.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6o6z6mj20b20bx74s.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6opofnj20h80f341h.jpg" alt=""></p>
<p>14、加密网格，选择<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6ohvmtj201a01aa9t.jpg" alt="">，勾选<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6oioxhj203r00sjr5.jpg" alt="">，Copy方法为<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6p0gnij20ai01wq2r.jpg" alt="">，点击block边界修改网格数目；对于O型网格，采用space2+ratio2的方式实现近壁面加密的效果；</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6p6mxaj20bo0bxaao.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6pejzlj20h30epmye.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6qetk8j20jh0gfdl6.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6puymaj20iv0g441d.jpg" alt=""></p>
<p>15、网格输出：右键Pre-mesh – construct unstruct mesh，由于Fluent是非结构化网格求解器，将结构化网格转化为非结构化网格，此时会生成一个hex.uns文件；</p>
<p>16、点击output mesh标签，<img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6pzd55j203300sdfm.jpg" alt="">分别设置求解器、边界条件及输出网格。边界条件设置需要注意，对于完全匹配周期性边界网格，不需要理会周期性边界设置，Fluent会自动识别；对于非完全匹配周期性边界，则需要将边界设置为固壁(wall)条件，等网格导入fluent后设置为interface，再使用mesh interfaces非完全匹配周期性边界网格。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6q92moj205q057t8o.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6qfzraj203s03pglg.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6qmeejj204q03tjr9.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971gy1g2xn6r4ti6j20py0h5js1.jpg" alt=""></p>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>fluent</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Github分支备份Hexo源文件</title>
    <url>/2019/04/08/%E5%88%A9%E7%94%A8Github%E5%88%86%E6%94%AF%E5%A4%87%E4%BB%BDHexo%E6%BA%90%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>本文转自<a href="https://lvraikkonen.github.io/" target="_blank" rel="noopener">Claus’s Tech Blog</a></p>
<p>Hexo是一款基于Node.js的静态博客框架，前一阵俺的笔记本泡水直接退役，但是博客的原文件还在那台死去的机器上，所以备份啊。。。<br>本质上，Hexo是将本地的md文件编译成静态文件上传到github上（或者其他），所以建议是将本地的整个Hexo项目（blog）原件同步提交到github或者其他代码托管的站点。<a id="more"></a></p>
<blockquote>
<p><code>hexo deploy</code> 生成的静态网址默认是保存在your_blog_name/your_blog_name.github.io的<code>master</code>分支，可以在原有的基础上增加一个<code>hexo_source</code>分支保存网址原始数据，并将这个分支设置为默认分支，这样每次恢复和迁移文件时候只需要git clone即可获取迁移的文件了。</p>
</blockquote>
<p>下面记录一下备份、以及在另外的电脑上恢复博客的过程，为了以后备查。</p>
<h2 id="备份过程"><a href="#备份过程" class="headerlink" title="备份过程"></a>备份过程</h2><ol>
<li>本地克隆github.io的远程仓库</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;your_blog_name&#x2F;your_blog_name.github.io.git</span><br></pre></td></tr></table></figure>
<ol>
<li>创建新的远程分支，用来备份hexo源文件</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -b hexo_source</span><br><span class="line">git push origin hexo_source:hexo_source</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>git checkout -b hexo_source</code> hexo_source,并切换到该分支,等同于<code>git branch hexo_source</code>; <code>git checkout hexo_source</code>;</p>
<p><code>git push origin hexo_source:hexo_source</code> 提交本地新建分支hexo_source到远程服务器hexo_source分支(origin是默认远程主机名);</p>
<p><code>git push origin :hexo_source</code>或者 <code>git push origin --delete hexo_source</code> 删除远程分支hexo_source;</p>
<p><code>git branch</code> 可以查看当前分支；<code>git branch -a</code> 可以查看所有分支(包括远程分支)；</p>
</blockquote>
<ol>
<li>创建忽略规则文件 <code>.gitignore</code></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi .gitignore</span><br></pre></td></tr></table></figure>
<p>按需添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json  </span><br><span class="line">*.log</span><br><span class="line">.deploy*&#x2F;</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">.npmignore</span><br><span class="line">public&#x2F;</span><br></pre></td></tr></table></figure>
<p>上面最后一行 public 目录，因其已被 hexo 插件同步到 master 分支里，因此不需要再同步，deploy 是 hexo 的 git 配置存放目录，也不需要同步。其他内容可选择忽略也可以选择同步。</p>
<blockquote>
<p>建议把Hexo博客目录下_config.yml文件复制粘贴一份，并重命名为hexo_config.yml；把themes目录下你用到主题目录下的_config.yml文件也复制一份，并粘贴到博客根目录，并命名为theme_config.yml</p>
</blockquote>
<ol>
<li>添加内容到仓库并提交到远程仓库</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin git@github.com&#x2F;your_blog_name&#x2F;your_blog_name.github.io.git	# 后面仓库目录改成自己新建的。</span><br><span class="line">git push -u origin hexo_source</span><br></pre></td></tr></table></figure>
<p>按照以上的步骤就进行了 hexo 源文件的初次备份。<br>以后每次修改了内容之后，都可通过以下几条命令实现同步。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;...&quot;	 # 双引号内填写更新内容</span><br><span class="line">git push origin hexo_source	# 或者 git push</span><br></pre></td></tr></table></figure>
<h2 id="通过-git-submodule-来同步第三方主题"><a href="#通过-git-submodule-来同步第三方主题" class="headerlink" title="通过 git submodule 来同步第三方主题"></a>通过 git submodule 来同步第三方主题</h2><p>我们一般会选择第三方主题的仓库直接git clone下来。这是一个非常不好的习惯，正确做法是：Fork该第三方主题仓库，这样就会在自己账号下生成一个同名的仓库，并对应一个url，我们应该git clone自己账号下的url。</p>
<p>这样做的原因是：我们很有可能在原来主题基础上做一些自定义的小改动，为了保持多终端的同步，我们需要将这些改动提交到远程仓库。而第三方仓库我们是无法直接push的。</p>
<p>这样就会出现git仓库的嵌套问题，我们通过git submodule来解决这个问题。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git submodule add git@github.com:lvraikkonen&#x2F;hexo-theme-next.git themes&#x2F;next</span><br></pre></td></tr></table></figure>
<p>我们修改主题后:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -am &quot;refine themes&quot;</span><br><span class="line">git push origin hexo_source</span><br></pre></td></tr></table></figure>
<p>然后就完成了第三方主题的备份</p>
<p>在其他电脑同步源文件时，需要执行如下命令来同步主题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git submodule init &#x2F;&#x2F; 这句很重要</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure>
<h2 id="新机器同步"><a href="#新机器同步" class="headerlink" title="新机器同步"></a>新机器同步</h2><p>现在需要在一台新的电脑上写博客，首先先安装好node、git、ssh、hexo，创建好hexo文件夹，安装好插件，(选做：将hexo生成的文件及文件夹删除)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog_folder</span><br><span class="line">cd blog_folder</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>在该文件夹(<code>blog_folder</code>)下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init # 初始化git仓库</span><br><span class="line">git remote add origin &lt;server&gt; # 为本地仓库添加远程仓库</span><br><span class="line">git fetch --all</span><br><span class="line">git reset --hard origin&#x2F;hexo_source # 获取hexo_source分支源文件</span><br></pre></td></tr></table></figure>
<p>然后就是写博客，在新电脑发布完博客之后(<code>hexo deploy</code>)，记得将博客备份同步到远程仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;写了一篇博客&quot;</span><br><span class="line">git push origin hexo_source</span><br></pre></td></tr></table></figure>
<p>至此，已经完成了博客的撰写并修改了远端仓库的博客源文件，然后使用<code>hexo g</code>和<code>hexo d</code>更新博客就OK啦！</p>
<h2 id="新机器安装npm失败解决方案"><a href="#新机器安装npm失败解决方案" class="headerlink" title="新机器安装npm失败解决方案"></a>新机器安装npm失败解决方案</h2><p>由于众所周知的原因，好多东西无法安装，可以添加第三方源来解决</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 添加淘宝源</span><br><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line"># nrm类似包管理器</span><br><span class="line">cnpm install nrm -g</span><br><span class="line">nrm ls</span><br><span class="line"># 使用淘宝</span><br><span class="line">nrm use taobao</span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://devtian.me/2015/03/17/blog-sync-solution/" target="_blank" rel="noopener">关于博客同步的解决办法</a></li>
<li><a href="https://segmentfault.com/a/1190000003076028" target="_blank" rel="noopener">使用Git Submodule管理子模块</a></li>
</ul>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>PyCharm长时间建立索引解决方法</title>
    <url>/2019/04/06/PyCharm%E9%95%BF%E6%97%B6%E9%97%B4%E5%BB%BA%E7%AB%8B%E7%B4%A2%E5%BC%95%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>在写自动调用叶型造型程序和调用NUMECA建立叶型数值实验数据库代码的过程中，遇到了一些问题，记录在此。<a id="more"></a></p>
<h3 id="自动生成叶型并多线程计算脚本"><a href="#自动生成叶型并多线程计算脚本" class="headerlink" title="自动生成叶型并多线程计算脚本"></a>自动生成叶型并多线程计算脚本</h3><p>先附上自动调用脚本的代码，该脚本由Python编写，流程与Isight建立损失与落后角数据库相同，即</p>
<ol>
<li><strong>对造型参数采样并生成样本点</strong></li>
<li><strong>叶型造型</strong></li>
<li><strong>生成计算网格</strong></li>
<li><strong>生成计算文件并返回计算结果</strong></li>
<li><strong>读取计算结果得到损失和落后角</strong></li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyDOE <span class="keyword">import</span> fullfact</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool, cpu_count</span><br><span class="line"><span class="keyword">import</span> os, shutil, subprocess, re</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jpath = os.path.join</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sample</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''生成样本数据点'''</span></span><br><span class="line">    <span class="comment"># scheme = [2 for i in range(8)]</span></span><br><span class="line">    scheme = [<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>]</span><br><span class="line">    sample_mesh = fullfact(scheme)</span><br><span class="line">    names = [ <span class="string">'bet1'</span>,  <span class="string">'cam'</span>,  <span class="string">'ac'</span>,    <span class="string">'r2tm'</span>,     <span class="string">'ttmax'</span>,     <span class="string">'sol'</span>,   <span class="string">'inc'</span>,  <span class="string">'ma'</span>]</span><br><span class="line">    ranges = [[<span class="number">40</span>,<span class="number">70</span>],[<span class="number">20</span>,<span class="number">70</span>],[<span class="number">0.4</span>,<span class="number">0.7</span>],[<span class="number">0.05</span>, <span class="number">0.1</span>],[<span class="number">0.05</span>, <span class="number">0.02</span>],[<span class="number">1.1</span>, <span class="number">2.5</span>],[<span class="number">-6</span>, <span class="number">6</span>],[<span class="number">0.4</span>, <span class="number">1.4</span>]]</span><br><span class="line">    var_range = dict()</span><br><span class="line">    <span class="keyword">for</span> name, scope, num <span class="keyword">in</span> zip(names, ranges, scheme):</span><br><span class="line">        var_range[name] = np.linspace(scope[<span class="number">0</span>], scope[<span class="number">1</span>], num)</span><br><span class="line"></span><br><span class="line">    samples = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(sample_mesh)):</span><br><span class="line">        elem = dict()</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(names)):</span><br><span class="line">            sample_mesh[i][j] = var_range[names[j]][int(sample_mesh[i][j])]</span><br><span class="line">            elem[names[j]] = sample_mesh[i][j]</span><br><span class="line">        elem[<span class="string">'rle'</span>] = elem[<span class="string">'r2tm'</span>] * elem[<span class="string">'ttmax'</span>]</span><br><span class="line">        elem[<span class="string">'rte'</span>] = elem[<span class="string">'rle'</span>]</span><br><span class="line">        elem[<span class="string">'bet2'</span>] = elem[<span class="string">'bet1'</span>] - elem[<span class="string">'cam'</span>]</span><br><span class="line">        elem.pop(<span class="string">'r2tm'</span>)</span><br><span class="line">        elem.pop(<span class="string">'cam'</span>)</span><br><span class="line">        samples.append(elem)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span>(os.path.exists(<span class="string">'inout'</span>)):</span><br><span class="line">        os.mkdir(<span class="string">'inout'</span>)</span><br><span class="line">    np.savetxt(<span class="string">"./inout/input_samples.dat"</span>, sample_mesh, fmt=<span class="string">'%10.3f'</span>)</span><br><span class="line">    <span class="keyword">return</span> samples</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readInput</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""读取input.dat模板"""</span></span><br><span class="line">    f = open(<span class="string">'input.dat'</span>, <span class="string">'r+'</span>)</span><br><span class="line">    text = f.readlines()</span><br><span class="line">    title = text[::<span class="number">2</span>]</span><br><span class="line">    value = text[<span class="number">1</span>::<span class="number">2</span>]</span><br><span class="line">    titles, values = [], []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(title)):</span><br><span class="line">        titles.extend(title[i].strip(<span class="string">'\n'</span>).split())</span><br><span class="line">        values.extend(value[i].split())</span><br><span class="line">    para = dict(zip(titles, values))</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">return</span> text, para</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modifyInput</span><span class="params">(out_dir, label, para, text, data)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    修改进出口几何角，最大厚度位置，前后缘相对厚度，最大相对厚度，稠度</span></span><br><span class="line"><span class="string">    返回子文件夹</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    names = [<span class="string">'bet1'</span>, <span class="string">'bet2'</span>, <span class="string">'ac'</span>, <span class="string">'rle'</span>, <span class="string">'rte'</span>, <span class="string">'ttmax'</span>]</span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">        para[name] = data[name]</span><br><span class="line">    title = text[<span class="number">2</span>].split()</span><br><span class="line">    text[<span class="number">3</span>] = [para[title[i]] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(title))]</span><br><span class="line">    text[<span class="number">3</span>] = list(map(str, text[<span class="number">3</span>]))</span><br><span class="line">    text[<span class="number">3</span>] = <span class="string">'     '</span>.join(text[<span class="number">3</span>]) + <span class="string">'\n'</span></span><br><span class="line">    subdir = jpath(out_dir, label)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (os.path.exists(subdir)):</span><br><span class="line">        os.mkdir(subdir)</span><br><span class="line">    os.chdir(subdir)</span><br><span class="line">    f = open(<span class="string">'input.dat'</span>, <span class="string">'w+'</span>)</span><br><span class="line">    f.writelines(text)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">return</span> subdir</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genAirfoil</span><span class="params">(root, subdir, result)</span>:</span></span><br><span class="line">    <span class="string">'''生成叶型并返回安装角'''</span></span><br><span class="line">    os.chdir(subdir)</span><br><span class="line">    cmd = jpath(root, <span class="string">'MyAirfoil.exe'</span>)</span><br><span class="line">    p = subprocess.call(cmd, stdout=subprocess.DEVNULL)</span><br><span class="line">    <span class="comment"># p = 0 # 调试</span></span><br><span class="line">    <span class="keyword">if</span>(p != <span class="number">0</span>):</span><br><span class="line">        print(<span class="string">'GenAirfoil failed: &#123;&#125; return &#123;&#125;'</span>.format(subdir, p))</span><br><span class="line">    <span class="comment"># 读安装角</span></span><br><span class="line">    f = open(<span class="string">'prof.dat'</span>, <span class="string">'r'</span>)</span><br><span class="line">    text = f.readlines()</span><br><span class="line">    f.close()</span><br><span class="line">    stg = float(text[<span class="number">102</span>].split()[<span class="number">1</span>])</span><br><span class="line">    result[<span class="string">'stg'</span>] = degrees(atan(stg))</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genMesh</span><span class="params">(subdir, data, para)</span>:</span></span><br><span class="line">    <span class="string">'''生成网格'''</span></span><br><span class="line">    <span class="comment"># 生成Geometry</span></span><br><span class="line">    f = open(jpath(subdir, <span class="string">'geom.dat'</span>), <span class="string">'r'</span>)</span><br><span class="line">    text = f.readlines()</span><br><span class="line">    num_points = int(text[<span class="number">1</span>])</span><br><span class="line">    yz_ss = text[<span class="number">2</span>:<span class="number">2</span> + num_points]  <span class="comment"># 吸力面坐标</span></span><br><span class="line">    yz_ps = text[<span class="number">4</span> + num_points:]  <span class="comment"># 压力面坐标</span></span><br><span class="line">    f.close()</span><br><span class="line">    ys, zs, yp, zp = [], [], [], []</span><br><span class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> yz_ss:</span><br><span class="line">        temp = elem.split()</span><br><span class="line">        ys.append(temp[<span class="number">0</span>])</span><br><span class="line">        zs.append(temp[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> yz_ps:</span><br><span class="line">        temp = elem.split()</span><br><span class="line">        yp.append(temp[<span class="number">0</span>])</span><br><span class="line">        zp.append(temp[<span class="number">1</span>])</span><br><span class="line">    ys = np.array(ys).astype(np.float)</span><br><span class="line">    zs = np.array(zs).astype(np.float)</span><br><span class="line">    yp = np.array(yp).astype(np.float)</span><br><span class="line">    zp = np.array(zp).astype(np.float)</span><br><span class="line">    plt.axis(<span class="string">'equal'</span>)</span><br><span class="line">    plt.plot(zs, ys)</span><br><span class="line">    plt.plot(zp, yp)</span><br><span class="line">    plt.savefig(jpath(subdir, <span class="string">'profile.png'</span>))</span><br><span class="line">    plt.close()</span><br><span class="line">    <span class="comment"># 输出坐标至Cascade.geomTurbo</span></span><br><span class="line">    f = open(<span class="string">'Cascade.geomTurbo'</span>)</span><br><span class="line">    geomturbo = f.readlines()</span><br><span class="line">    chord = para[<span class="string">'chord'</span>] * para[<span class="string">'unit'</span>]</span><br><span class="line">    zin = -chord</span><br><span class="line">    zout = zs[<span class="number">-1</span>] + <span class="number">1.5</span> * chord</span><br><span class="line">    pitch = chord / data[<span class="string">'sol'</span>]</span><br><span class="line">    ss0, ss1, ps0, ps1 = [], [], [], []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_points):</span><br><span class="line">        ss0.append(<span class="string">'0 '</span> + yz_ss[i])</span><br><span class="line">        ss1.append(<span class="string">'0.1 '</span> + yz_ss[i])</span><br><span class="line">        ps0.append(<span class="string">'0 '</span> + yz_ps[i])</span><br><span class="line">        ps1.append(<span class="string">'0.1 '</span> + yz_ps[i])</span><br><span class="line"></span><br><span class="line">    geomturbo[<span class="number">14</span>] = str(zin) + <span class="string">'   0.045\n'</span>  <span class="comment"># 该叶栅高度为1cm</span></span><br><span class="line">    geomturbo[<span class="number">15</span>] = str(zout) + <span class="string">'   0.045\n'</span></span><br><span class="line">    geomturbo[<span class="number">25</span>] = str(zin) + <span class="string">'   0.055\n'</span></span><br><span class="line">    geomturbo[<span class="number">26</span>] = str(zout) + <span class="string">'   0.055\n'</span></span><br><span class="line">    geomturbo[<span class="number">72</span>] = <span class="string">'  PERIODICITY       '</span> + str(pitch) + <span class="string">'\n'</span></span><br><span class="line">    geomturbo[<span class="number">109</span>] = str(num_points) + <span class="string">'\n'</span></span><br><span class="line">    geomturbo[<span class="number">110</span>:<span class="number">251</span>] = ss0</span><br><span class="line">    geomturbo[<span class="number">253</span>] = str(num_points) + <span class="string">'\n'</span></span><br><span class="line">    geomturbo[<span class="number">254</span>:<span class="number">395</span>] = ss1</span><br><span class="line">    geomturbo[<span class="number">400</span>] = str(num_points) + <span class="string">'\n'</span></span><br><span class="line">    geomturbo[<span class="number">401</span>:<span class="number">542</span>] = ps0</span><br><span class="line">    geomturbo[<span class="number">544</span>] = str(num_points) + <span class="string">'\n'</span></span><br><span class="line">    geomturbo[<span class="number">545</span>:<span class="number">686</span>] = ps1</span><br><span class="line">    f.close()</span><br><span class="line">    f = open(jpath(subdir, <span class="string">'Cascade.geomTurbo'</span>), <span class="string">'w+'</span>)</span><br><span class="line">    f.writelines(geomturbo)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="comment"># 调用Autogrid生成网格</span></span><br><span class="line">    shutil.copy(<span class="string">'mesh.py'</span>, subdir)</span><br><span class="line">    os.chdir(subdir)</span><br><span class="line">    cmd = <span class="string">'iggx86_64 -batch -autogrid5 -script mesh.py'</span></span><br><span class="line">    f = open(<span class="string">'log.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">    p = subprocess.call(cmd, stdout=f)</span><br><span class="line">    <span class="comment"># p = 0</span></span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">if</span>(p != <span class="number">0</span>):</span><br><span class="line">        print(<span class="string">'Mesh &#123;&#125; return &#123;&#125;'</span>.format(subdir, p))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genRun</span><span class="params">(subdir, data, para, result)</span>:</span></span><br><span class="line">    <span class="string">'''生成计算文件执行计算并返回结果文件'''</span></span><br><span class="line">    run_name = <span class="string">'ma'</span>+str(data[<span class="string">'ma'</span>])+<span class="string">'inc'</span>+str(data[<span class="string">'inc'</span>])</span><br><span class="line">    ref_vel = data[<span class="string">'ma'</span>] * sqrt(<span class="number">401.8</span> * <span class="number">293</span> / (<span class="number">1</span> + <span class="number">0.2</span> * data[<span class="string">'ma'</span>] ** <span class="number">2</span>))  <span class="comment"># 参考速度</span></span><br><span class="line">    bet1 = data[<span class="string">'bet1'</span>] + data[<span class="string">'inc'</span>]  <span class="comment"># 进口气流角</span></span><br><span class="line">    sinb1 = sin(radians(bet1))</span><br><span class="line">    cosb1 = cos(radians(bet1))</span><br><span class="line">    pitch = float(para[<span class="string">'chord'</span>]) * float(para[<span class="string">'unit'</span>]) / data[<span class="string">'sol'</span>]</span><br><span class="line">    area_n = pitch * <span class="number">0.01</span> * cosb1</span><br><span class="line">    massflow = area_n * <span class="number">101325</span> / sqrt(<span class="number">1006</span> * <span class="number">293</span>) * <span class="number">1.4</span> /\</span><br><span class="line">               sqrt(<span class="number">0.4</span>) * data[<span class="string">'ma'</span>] * (<span class="number">1</span> + <span class="number">0.2</span> * data[<span class="string">'ma'</span>] ** <span class="number">2</span>) ** <span class="number">-3</span> <span class="comment"># 马赫数计算流量</span></span><br><span class="line">    result[<span class="string">'mass_given'</span>] = massflow</span><br><span class="line">    itmax = <span class="number">400</span> + int(abs(data[<span class="string">'inc'</span>])) * <span class="number">150</span>  <span class="comment"># 最大迭代步数</span></span><br><span class="line">    <span class="keyword">if</span> (data[<span class="string">'ma'</span>] &lt; <span class="number">1</span>):</span><br><span class="line">        initP = <span class="number">100000</span>  <span class="comment"># 初始压力</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        initP = <span class="number">50000</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修改fine.py</span></span><br><span class="line">    shutil.copy(<span class="string">'fine.py'</span>, subdir)</span><br><span class="line">    os.chdir(subdir)</span><br><span class="line">    f = open(<span class="string">'fine.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">    text = f.readlines()</span><br><span class="line">    f.close()</span><br><span class="line">    subdir = subdir.replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)</span><br><span class="line">    text[<span class="number">0</span>] = re.sub(pattern=<span class="string">r'(?&lt;=\(").+(?=/s)'</span>, repl=subdir, string=text[<span class="number">0</span>])</span><br><span class="line">    text[<span class="number">4</span>] = re.sub(pattern=<span class="string">r'(?&lt;=\(").+(?=/C)'</span>, repl=subdir, string=text[<span class="number">4</span>])</span><br><span class="line">    text[<span class="number">6</span>] = re.sub(pattern=<span class="string">r'(?&lt;=").+(?=")'</span>, repl=run_name, string=text[<span class="number">6</span>])</span><br><span class="line">    text[<span class="number">13</span>] = re.sub(pattern=<span class="string">r'(?&lt;=\().+(?=\))'</span>, repl=str(ref_vel), string=text[<span class="number">13</span>])</span><br><span class="line">    text[<span class="number">28</span>] = re.sub(pattern=<span class="string">r'(?&lt;=",).+(?=\))'</span>, repl=str(sinb1), string=text[<span class="number">28</span>])</span><br><span class="line">    text[<span class="number">29</span>] = re.sub(pattern=<span class="string">r'(?&lt;=",).+(?=\))'</span>, repl=str(cosb1), string=text[<span class="number">29</span>])</span><br><span class="line">    text[<span class="number">40</span>] = re.sub(pattern=<span class="string">r'(?&lt;=",).+(?=\))'</span>, repl=str(massflow), string=text[<span class="number">40</span>])</span><br><span class="line">    text[<span class="number">41</span>] = re.sub(pattern=<span class="string">r'(?&lt;=",).+(?=\))'</span>, repl=str(initP), string=text[<span class="number">41</span>])</span><br><span class="line">    text[<span class="number">51</span>] = re.sub(pattern=<span class="string">r'(?&lt;=\().+(?=\))'</span>, repl=str(itmax), string=text[<span class="number">51</span>])</span><br><span class="line">    f = open(<span class="string">'fine.py'</span>, <span class="string">'w'</span>)</span><br><span class="line">    f.writelines(text)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="comment"># 生成bat</span></span><br><span class="line">    cmd = <span class="string">'finex86_64 -batch -niversion112 -script fine.py'</span></span><br><span class="line">    p = subprocess.call(cmd, stdout=subprocess.DEVNULL)</span><br><span class="line">    <span class="comment"># p = 0</span></span><br><span class="line">    <span class="keyword">if</span>(p != <span class="number">0</span>):</span><br><span class="line">        print(<span class="string">'gen run_file failed: &#123;&#125; return &#123;&#125;'</span>.format(subdir, p))</span><br><span class="line">    <span class="comment"># 执行bat</span></span><br><span class="line">    cmd = subdir + <span class="string">'/sample/sample_&#123;0&#125;/sample_&#123;0&#125;.bat'</span>.format(run_name)</span><br><span class="line">    p = subprocess.call(cmd, stdout=subprocess.DEVNULL)</span><br><span class="line">    <span class="comment"># p = 0</span></span><br><span class="line">    <span class="keyword">if</span>(p != <span class="number">0</span>):</span><br><span class="line">        print(<span class="string">'caculation failed: &#123;&#125; return &#123;&#125;'</span>.format(subdir, p))</span><br><span class="line">    result_file = subdir + <span class="string">'/sample/sample_&#123;0&#125;/sample_&#123;0&#125;.mf'</span>.format(run_name)</span><br><span class="line">    <span class="comment"># 判断是否收敛</span></span><br><span class="line">    res_file = subdir + <span class="string">'/sample/sample_&#123;0&#125;/sample_&#123;0&#125;.res'</span>.format(run_name)</span><br><span class="line">    f = open(res_file)</span><br><span class="line">    text = f.readlines()</span><br><span class="line">    f.close()</span><br><span class="line">    con_label = <span class="literal">True</span>   <span class="comment"># 收敛标志</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'NaN'</span> <span class="keyword">in</span> text[<span class="number">-1</span>].split()):</span><br><span class="line">        con_label = <span class="literal">False</span>   <span class="comment"># 发散</span></span><br><span class="line">    result[<span class="string">'con_label'</span>] = con_label</span><br><span class="line">    <span class="keyword">return</span> result_file, result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readMfFile</span><span class="params">(result_file, result, data)</span>:</span></span><br><span class="line">    <span class="string">'''读取mf文件和记录安装角'''</span></span><br><span class="line">    f = open(result_file)</span><br><span class="line">    text = f.readlines()</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="comment"># 处理NaN</span></span><br><span class="line">    NaN_exist = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> text:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'NaN'</span> <span class="keyword">in</span> line:</span><br><span class="line">            text[text.index(line)] = line.replace(<span class="string">'NaN'</span>, <span class="string">'9999.9999'</span>)</span><br><span class="line">            NaN_exist = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 安装角</span></span><br><span class="line">    pattern = <span class="string">r'\d+\.\d+'</span></span><br><span class="line">    <span class="comment"># Vy(切向速度)</span></span><br><span class="line">    result[<span class="string">'vy1'</span>], result[<span class="string">'vy2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">42</span>])]</span><br><span class="line">    <span class="comment"># Vz(轴向速度)</span></span><br><span class="line">    result[<span class="string">'vz1'</span>], result[<span class="string">'vz2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">43</span>])]</span><br><span class="line">    <span class="comment"># |V|(绝对速度)</span></span><br><span class="line">    result[<span class="string">'v1'</span>], result[<span class="string">'v2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">44</span>])]</span><br><span class="line">    <span class="comment"># 马赫数</span></span><br><span class="line">    result[<span class="string">'ma1'</span>],result[<span class="string">'ma2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">45</span>])]</span><br><span class="line">    <span class="comment"># 静压</span></span><br><span class="line">    result[<span class="string">'p1'</span>],result[<span class="string">'p2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">50</span>])]</span><br><span class="line">    <span class="comment"># 静温</span></span><br><span class="line">    result[<span class="string">'t1'</span>],result[<span class="string">'t2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">51</span>])]</span><br><span class="line">    <span class="comment"># 密度</span></span><br><span class="line">    result[<span class="string">'ro1'</span>], result[<span class="string">'ro2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">52</span>])]</span><br><span class="line">    <span class="comment"># 总压</span></span><br><span class="line">    result[<span class="string">'pt1'</span>], result[<span class="string">'pt2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">57</span>])]</span><br><span class="line">    <span class="comment"># 总温</span></span><br><span class="line">    result[<span class="string">'tt1'</span>], result[<span class="string">'tt2'</span>] = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">58</span>])]</span><br><span class="line">    <span class="comment"># 流量</span></span><br><span class="line">    result[<span class="string">'mass1'</span>], result[<span class="string">'mass2'</span>] = float(text[<span class="number">63</span>].split()[<span class="number">1</span>]), float(text[<span class="number">63</span>].split()[<span class="number">2</span>])</span><br><span class="line">    <span class="comment"># 静压比</span></span><br><span class="line">    result[<span class="string">'pr'</span>], = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">70</span>])]</span><br><span class="line">    <span class="comment"># 总压比</span></span><br><span class="line">    result[<span class="string">'tpr'</span>], = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">71</span>])]</span><br><span class="line">    <span class="comment"># 静温比</span></span><br><span class="line">    result[<span class="string">'tr'</span>], = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">73</span>])]</span><br><span class="line">    <span class="comment"># 总温比</span></span><br><span class="line">    result[<span class="string">'ttr'</span>], = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">74</span>])]</span><br><span class="line">    <span class="comment"># 总压系数</span></span><br><span class="line">    result[<span class="string">'tpcoeff'</span>], = [float(ele) <span class="keyword">for</span> ele <span class="keyword">in</span> re.compile(pattern).findall(text[<span class="number">76</span>])]</span><br><span class="line">    <span class="comment"># 分别处理有无NaN结果</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> NaN_exist:</span><br><span class="line">        <span class="comment"># 计算损失</span></span><br><span class="line">        result[<span class="string">'loss'</span>] = (result[<span class="string">'pt1'</span>] - result[<span class="string">'pt2'</span>]) / (result[<span class="string">'pt1'</span>] - result[<span class="string">'p1'</span>])</span><br><span class="line">        <span class="comment"># 计算落后角</span></span><br><span class="line">        result[<span class="string">'dev'</span>] = degrees(asin(result[<span class="string">'vy2'</span>]/result[<span class="string">'v2'</span>])) - data[<span class="string">'bet2'</span>]</span><br><span class="line">        <span class="comment"># 计算扩散因子</span></span><br><span class="line">        result[<span class="string">'dfactor'</span>] = <span class="number">1</span> - result[<span class="string">'v2'</span>]/result[<span class="string">'v1'</span>]+abs(result[<span class="string">'vy1'</span>]-result[<span class="string">'vy2'</span>])/(<span class="number">2</span>*result[<span class="string">'v1'</span>]*data[<span class="string">'sol'</span>])</span><br><span class="line">        <span class="comment"># 计算AVDR</span></span><br><span class="line">        result[<span class="string">'avdr'</span>] = result[<span class="string">'ro1'</span>]*result[<span class="string">'vz1'</span>]/(result[<span class="string">'ro2'</span>]*result[<span class="string">'vz2'</span>])</span><br><span class="line">        <span class="comment"># Ma之差</span></span><br><span class="line">        result[<span class="string">'err_ma'</span>] = result[<span class="string">'ma1'</span>] - data[<span class="string">'ma'</span>]</span><br><span class="line">        <span class="comment"># 流量之差</span></span><br><span class="line">        result[<span class="string">'err_mass1'</span>] = result[<span class="string">'mass1'</span>] - result[<span class="string">'mass_given'</span>]</span><br><span class="line">        result[<span class="string">'err_mass2'</span>] = result[<span class="string">'mass2'</span>] - result[<span class="string">'mass_given'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result[<span class="string">'loss'</span>],result[<span class="string">'dev'</span>],result[<span class="string">'D'</span>],result[<span class="string">'avdr'</span>],result[<span class="string">'err_ma'</span>],result[<span class="string">'err_mass1'</span>],\</span><br><span class="line">        result[<span class="string">'err_mass2'</span>] = <span class="number">9999.9999</span>,<span class="number">9999.9999</span>,<span class="number">9999.9999</span>,<span class="number">9999.9999</span>,<span class="number">9999.9999</span>,<span class="number">9999.9999</span>,<span class="number">9999.9999</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleProcess</span><span class="params">(text, para, root, data, label)</span>:</span></span><br><span class="line">    <span class="string">'''单线程完整流程，供Pool调用'''</span></span><br><span class="line">    print(<span class="string">'Run task &#123;&#125; (&#123;&#125;)'</span>.format(label, os.getpid()))</span><br><span class="line">    os.chdir(root)</span><br><span class="line">    <span class="comment"># 创建输出文件夹</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (os.path.exists(<span class="string">'output'</span>)):</span><br><span class="line">        os.mkdir(<span class="string">'output'</span>)</span><br><span class="line">    out_dir = jpath(root, <span class="string">'output'</span>)</span><br><span class="line">    result =&#123;&#125; <span class="comment"># 记录结果</span></span><br><span class="line">    <span class="comment"># 修改input.dat</span></span><br><span class="line">    subdir = modifyInput(out_dir, label, para, text, data)</span><br><span class="line">    os.chdir(root)</span><br><span class="line">    <span class="comment"># 生成叶型</span></span><br><span class="line">    result = genAirfoil(root, subdir, result)</span><br><span class="line">    os.chdir(root)</span><br><span class="line">    <span class="comment"># 生成网格</span></span><br><span class="line">    genMesh(subdir, data, para)</span><br><span class="line">    os.chdir(root)</span><br><span class="line">    <span class="comment"># 生成计算文件</span></span><br><span class="line">    result_file, result = genRun(subdir, data, para, result)</span><br><span class="line">    os.chdir(root)</span><br><span class="line">    <span class="comment"># 读取计算结果</span></span><br><span class="line">    result = readMfFile(result_file, result, data)</span><br><span class="line">    os.chdir(root)</span><br><span class="line">    <span class="comment"># 返回计算结果和收敛标志</span></span><br><span class="line">    result[<span class="string">'No.'</span>] = label</span><br><span class="line">    <span class="comment"># 写入临时文件</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span>(os.path.exists(<span class="string">'./inout/temp_result.dat'</span>)):</span><br><span class="line">        f = open(<span class="string">'./inout/temp_result.dat'</span>, <span class="string">'a'</span>)</span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> result.keys():</span><br><span class="line">            f.write(<span class="string">'&#123;:^20&#125;'</span>.format(name))</span><br><span class="line">        f.write(<span class="string">'\n'</span>)</span><br><span class="line">        f.close()</span><br><span class="line">    f = open(<span class="string">'./inout/temp_result.dat'</span>, <span class="string">'a'</span>)</span><br><span class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> result.values():</span><br><span class="line">        <span class="keyword">if</span>(type(val) <span class="keyword">is</span> str):</span><br><span class="line">            f.write(<span class="string">'&#123;:^20&#125;'</span>.format(val))</span><br><span class="line">        <span class="keyword">elif</span> (type(val) <span class="keyword">is</span> bool):</span><br><span class="line">            f.write(<span class="string">'&#123;:^20d&#125;'</span>.format(val))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            f.write(<span class="string">'&#123;:^20.4f&#125;'</span>.format(val))</span><br><span class="line">    f.write(<span class="string">'\n'</span>)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 生成样本点参数并保存</span></span><br><span class="line">    samples = sample()</span><br><span class="line">    n_samples = len(samples)</span><br><span class="line">    text, para = readInput()    <span class="comment"># 在主程序里声明的为全局变量</span></span><br><span class="line">    <span class="comment"># 将para转化为float型</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> para.keys():</span><br><span class="line">        para[key] = float(para[key])</span><br><span class="line">    root = os.getcwd()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试代码</span></span><br><span class="line">    <span class="comment"># result = singleProcess(text, para, root, samples[0], '00')</span></span><br><span class="line">    <span class="comment"># f = open('test_result.dat','w')</span></span><br><span class="line">    <span class="comment"># for name in result.keys():</span></span><br><span class="line">    <span class="comment">#     f.write('&#123;:^20&#125;'.format(name))</span></span><br><span class="line">    <span class="comment"># f.write('\n')</span></span><br><span class="line">    <span class="comment"># for value in result.values():</span></span><br><span class="line">    <span class="comment">#     if(type(value) == str):</span></span><br><span class="line">    <span class="comment">#         f.write(' &#123;:^20&#125; '.format(value))</span></span><br><span class="line">    <span class="comment">#     else:</span></span><br><span class="line">    <span class="comment">#         f.write('&#123;:^20.4f&#125;'.format(value))</span></span><br><span class="line">    <span class="comment"># f.close()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 并行</span></span><br><span class="line">    p = Pool(cpu_count())</span><br><span class="line">    res_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n_samples):</span><br><span class="line">        args = (text, para, root, samples[i], str(i))</span><br><span class="line">        res_list.append(p.apply_async(singleProcess,args=args))</span><br><span class="line">    p.close()</span><br><span class="line">    p.join()</span><br><span class="line">    print(<span class="string">'All subprocesses done'</span>)</span><br><span class="line">    f = open(<span class="string">'./inout/results.dat'</span>,<span class="string">'w'</span>)</span><br><span class="line">    names = list(res_list[<span class="number">0</span>].get().keys())</span><br><span class="line">    names.sort()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n_samples):</span><br><span class="line">        result = res_list[i].get()</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>):</span><br><span class="line">            <span class="keyword">for</span> ele <span class="keyword">in</span> names:</span><br><span class="line">                f.write(<span class="string">'&#123;:^20&#125;'</span>.format(ele))</span><br><span class="line">            f.write(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">            <span class="keyword">if</span>(type(result[name]) <span class="keyword">is</span> str):</span><br><span class="line">                f.write(<span class="string">'&#123;:^20&#125;'</span>.format(result[name]))</span><br><span class="line">            <span class="keyword">elif</span>(type(result[name]) <span class="keyword">is</span> bool):</span><br><span class="line">                f.write(<span class="string">'&#123;:^20d&#125;'</span>.format(result[name]))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                f.write(<span class="string">'&#123;:^20.4f&#125;'</span>.format(result[name]))</span><br><span class="line">        f.write(<span class="string">'\n'</span>)</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure>
<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>起初计算一切正常，当运行到第4w+样本点时由于停电计算中断，重新启动PyCharm再次打开项目文件夹底部一直显示<code>scanning files to index</code>无法调试和运行，卸载PyCharm重装依旧无效。查询Google得知原因是工作目录文件过多导致长时间索引，并给出了两条解决方法。</p>
<p>第一种是在<code>File-Setting-Project Structure</code>中将所索引较慢或文件较多的目录选中后点击Excluded，即不索引该目录，该方法测试对我遇到的问题无效。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1t2h0gs2aj21400ny781.jpg" alt=""></p>
<p>第二种是<code>File-Invalidate and restart</code>清空缓存并重启PyCharm，亲测无效。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1t2o9lv4fj21400nw42m.jpg" alt=""></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>在output文件夹内保存了大量的NUMECA计算结果，大概有几百万个文件，我估计应该是导致长时间无法完成索引的罪魁祸首。故将该文件转移至非工作目录，再次打开PyCharm，问题解决。</p>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>在PyCharm工作目录内不宜放置过多的文件，若有子目录需要包含大量文件例如计算结果，需要提前将该文件夹设置为Excluded。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>next主题解决无法显示数学公式</title>
    <url>/2019/03/25/next%E4%B8%BB%E9%A2%98%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    <content><![CDATA[<p>在用markdown写技术文档时，免不了会碰到数学公式。常用的Markdown编辑器都会集成Mathjax，用来渲染文档中的类Latex格式书写的数学公式。基于Hexo搭建的个人博客，默认情况下渲染数学公式却会出现各种各样的问题。<a id="more"></a></p>
<p>这个问题搞了好久才找到解决方案，感谢@<a href="http://xudongyang.coding.me/math-in-hexo/" target="_blank" rel="noopener">小毛驴</a></p>
<h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>Hexo 默认使用 hexo-renderer-marked 引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签，比如在 markdown 语法中，下划线<code>_</code>代表斜体，会被渲染引擎处理为<code>&lt;em&gt;</code>标签。</p>
<p>因为类 Latex 格式书写的数学公式下划线<code>_</code>表示下标，有特殊的含义，如果被强制转换为<code>&lt;em&gt;</code>标签，那么 MathJax 引擎在渲染数学公式的时候就会出错。</p>
<p>类似的语义冲突的符号还包括<code>*</code>, <code>{</code>, <code>}</code>, <code>\\</code>等。 </p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>更换 Hexo 的 markdown 渲染引擎，hexo-renderer-kramed 引擎是在默认的渲染引擎 hexo-renderer-marked 的基础上修改了一些 bug ，两者比较接近，也比较轻量级。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">uninstall</span> hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-kramed <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<p>执行上面的命令即可，先卸载原来的渲染引擎，再安装新的。<br>然后，跟换引擎后行间公式可以正确渲染了，但是这样还没有完全解决问题，行内公式的渲染还是有问题，因为 hexo-renderer-kramed 引擎也有语义冲突的问题。接下来到博客根目录下，找到node_modules\kramed\lib\rules\inline.js，把第11行的 escape 变量的值做相应的修改：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">//escape: /^\\([<span class="string">\\`*&#123;&#125;\[\</span>](<span class="link"></span>)#$+\-.!_&gt;])/,</span><br><span class="line">escape: /^\\([<span class="string">`*\[\</span>](<span class="link"></span>)#$+\-.!_&gt;])/,</span><br></pre></td></tr></table></figure>
<p>这一步是在原基础上取消了对\,{,}的转义(escape)。<br>同时把第20行的em变量也要做相应的修改。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">//em: /^\b<span class="emphasis">_((?:_</span><span class="emphasis">_|[\s\S])+?)_</span>\b|^\<span class="emphasis">*((?:\*</span>\<span class="emphasis">*|[\s\S])+?)\*</span>(?!\*)/,</span><br><span class="line">em: /^\<span class="emphasis">*((?:\*</span>\<span class="emphasis">*|[\s\S])+?)\*</span>(?!\*)/,</span><br></pre></td></tr></table></figure>
<p>重新启动hexo（先clean再generate）,问题完美解决。哦，如果不幸还没解决的话，看看是不是还需要在使用的主题中配置mathjax开关。</p>
<h4 id="在-Next-主题中开启-MathJax-开关"><a href="#在-Next-主题中开启-MathJax-开关" class="headerlink" title="在 Next 主题中开启 MathJax 开关"></a>在 Next 主题中开启 MathJax 开关</h4><p>如何使用了主题了，别忘了在主题（Theme）中开启 MathJax 开关，下面以 next 主题为例，介绍下如何打开 MathJax 开关。</p>
<p>进入到主题目录，找到 _config.yml 配置问题，把 math 默认的 false 修改为true，具体如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Math Equations Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Default(true) will load mathjax/katex script on demand</span></span><br><span class="line">  <span class="comment"># That is it only render those page who has 'mathjax: true' in Front Matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax/katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">engine:</span> <span class="string">mathjax</span></span><br><span class="line">  <span class="comment">#engine: katex12345678910111234567891011</span></span><br></pre></td></tr></table></figure>
<p>还需要在文章的Front-matter里打开mathjax开关，如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">index.html</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="number">-07</span><span class="number">-05</span> <span class="number">12</span><span class="string">:01:30</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>之所以要在文章头里设置开关，是因为考虑只有在用到公式的页面才加载 Mathjax，这样不需要渲染数学公式的页面的访问速度就不会受到影响了。</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>公式</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Next主题插入又拍云联盟推广链接</title>
    <url>/2019/03/23/Hexo%E5%8D%9A%E5%AE%A2Next%E4%B8%BB%E9%A2%98%E6%8F%92%E5%85%A5%E5%8F%88%E6%8B%8D%E4%BA%91%E8%81%94%E7%9B%9F%E6%8E%A8%E5%B9%BF%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<p>本文介绍向Html网页指定位置插入Logo的方法。<a id="more"></a></p>
<p>打开 <code>themes\next\layout\_partials\footer.swig</code>文件在底部添加以下代码</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;span style="float:right;"&gt;&lt;a href="https://www.upyun.com/?utm_source=lianmeng&amp;utm_medium=referral" target="_blank" rel="nofollow"&gt;</span><br><span class="line">&lt;img src="/img/upyun.png"&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>又拍云</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title>向Hexo中插入视频</title>
    <url>/2019/03/18/%E5%90%91Hexo%E4%B8%AD%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<p>本文转自<a href="https://www.xiaoz.me/archives/8132" target="_blank" rel="noopener">又拍云 + ShareX = 打造自己的图床神器</a>，对于图片同样适用。</p>
<p>又拍云是一家国内CDN服务商，主要提供对象存储、CDN等业务，与之类似的还有<a href="https://portal.qiniu.com/signup?code=3lm4ud8x2qxjm" target="_blank" rel="noopener">七牛云存储</a>。而ShareX这个工具曾在文章《<a href="https://www.xiaoz.me/archives/8016" target="_blank" rel="noopener">截图分享神器ShareX</a>》有过介绍，ShareX截图后可以自动上传到FTP，使用又拍云提供的FTP功能，完美组合为自己的图床神器。<a id="more"></a></p>
<h3 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h3><ul>
<li>如果您还没有又拍云账号，请前往：<a href="https://www.xiaoz.me/url/upyun" target="_blank" rel="noopener">又拍云官网</a>注册</li>
<li>ShareX工具，请访问：<a href="https://github.com/ShareX/ShareX/releases/download/v11.6.0/ShareX-11.6.0-setup.exe" target="_blank" rel="noopener">ShareX-11.6.0-setup.exe</a>下载并安装。</li>
</ul>
<h3 id="二、创建服务"><a href="#二、创建服务" class="headerlink" title="二、创建服务"></a>二、创建服务</h3><ul>
<li>又拍云注册成功后，在后台 - 创建服务 - 创建一个全网加速服务 - 参考下面的截图进行创建。</li>
<li>服务名称：随便写</li>
<li>源站类型：又拍云</li>
<li>操作员账号密码请务必记住，待会儿需要使用</li>
<li>权限全部勾选</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g16c9ydpfrj20u40miabw.jpg" alt=""></p>
<p>创建服务</p>
<h3 id="三、获取FTP信息"><a href="#三、获取FTP信息" class="headerlink" title="三、获取FTP信息"></a>三、获取FTP信息</h3><p>又拍云可以使用FTP工具对文件进行管理，帮助文档请参考：<a href="http://docs.upyun.com/api/developer_tools/#ftpftps" target="_blank" rel="noopener">FTP/FTPS</a>，假如我本地为电信网络，那么得到的FTP信息为。</p>
<blockquote>
<p>FTP地址：v1.ftp.upyun.com 账号：test/xiaozpic 密码：操作员的密码</p>
</blockquote>
<h3 id="四、配置ShareX"><a href="#四、配置ShareX" class="headerlink" title="四、配置ShareX"></a>四、配置ShareX</h3><p>打开ShareX面板 - 上传至… - 上传至设置。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g16caekur7j20a80500sw.jpg" alt=""></p>
<ul>
<li>填写步骤三获取的FTP信息</li>
<li>SubFloderPath:为上传的文件路径，可以随便写</li>
<li>BrowserProtocol:选择http或https</li>
<li>HttpHomePath:又拍云分配的二级域名或您的绑定域名，注意后面有个/</li>
<li>点击测试，若没有报错，说明信息填写正确，否则请反复检查</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g16cb147zej20rh0dydii.jpg" alt=""></p>
<ul>
<li>设置快捷键：热键设置 - 添加 - 按照如下要求设置。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g16cbwz374j20jl09pmye.jpg" alt=""><br>进一步设置动作，截图后自动上传到FTP，如下截图，然后保存。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g16cc77h0kj20lj0f5gma.jpg" alt=""><br>最后按下您刚刚设置的快捷键，截图后图片会自动上传到又拍云FTP，并返回URL连接放到剪贴板中，Ctrl + V粘贴使用。</p>
<h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>若没有接触过又拍云的小伙伴，可能感觉有点凌乱，又是服务又是FTP的，认真阅读参考文档应该还是比较简单啦。另外ShareX的功能实在是太多太强大，设置各种自定义快捷键和多种动作，又拍云 + ShareX的组合完美实现了一个私有化图床。又拍云和ShareX功能远不止如此，若有兴趣的小伙伴可以自行摸索。小z博客原创文章，转载请注明。</p>
<p>如果您不想那么复杂，请直接访问：<a href="https://img.bsdev.cn/" target="_blank" rel="noopener">小z图床</a></p>
<h3 id="六、如何插入视频"><a href="#六、如何插入视频" class="headerlink" title="六、如何插入视频"></a>六、如何插入视频</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;video src="比如放在七牛上的链接" controls="controls" style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;"&gt;</span><br><span class="line"><span class="selector-tag">your</span> <span class="selector-tag">browser</span> <span class="selector-tag">does</span> <span class="selector-tag">not</span> <span class="selector-tag">support</span> <span class="selector-tag">the</span> <span class="selector-tag">video</span> <span class="selector-tag">tag</span></span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure>
<p><video src="http://wxx-images.test.upcdn.net/How%20does%20an%20engine%20work%20-%20YouTube.MP4" controls="controls" style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;"><br>your browser does not support the video tag
</video></p>
<center>How does an engine work</center>

<p>若要在视频中加载字幕，则需要将字幕转换为vtt格式<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">视频链接"</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">style</span>=<span class="string">"max-width: 100%; display: block; margin-left: auto; margin-right: auto;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">track</span> <span class="attr">label</span>=<span class="string">"Chinese"</span> <span class="attr">kind</span>=<span class="string">"subtitles"</span> <span class="attr">srclang</span>=<span class="string">"zh"</span> <span class="attr">src</span>=<span class="string">"/subs/Joker.vtt（字幕位置）"</span> <span class="attr">default</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>图床</category>
      </categories>
      <tags>
        <tag>在线视频</tag>
      </tags>
  </entry>
  <entry>
    <title>群辉安装与半洗白</title>
    <url>/2019/03/17/%E7%BE%A4%E8%BE%89%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%8A%E6%B4%97%E7%99%BD/</url>
    <content><![CDATA[<p>群晖是目前最流行的NAS系统，拥有丰富的插件以及成熟的移动客户端，然而黑群晖是无法使用实时转码以及相册缩略图功能，本文介绍一种比较靠谱的半洗白方法来实现以上功能。<a id="more"></a></p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><blockquote>
<p>工具 1）Win32DiskImager  2）ChipEasy芯片无忧</p>
</blockquote>
<p>引导U盘制作：<br>打开芯片无忧记录 vid，pid：如下图</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a22155j20f30ge42p.jpg" alt=""></p>
<p>打开Win32DiskImager 选择引导文件synoboot.img 如图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a1zurvj20bp05xjs1.jpg" alt=""></p>
<p><center>写入成功后</center><br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a1nn37j20b905qt93.jpg" alt=""></p>
<p>写入U盘后5.x版本可以用windows7打开 6.x版本只能用windos10才能识别u盘格式 打开grub.cfg 用文本文档打开  修改里面的pid, vid 如下图</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a246raj207r05bgnc.jpg" alt=""></p>
<p>替换方框内两组数据  sn mac1暂时不用动 洗白时候再用  引导盘完成</p>
<h3 id="安装篇"><a href="#安装篇" class="headerlink" title="安装篇"></a>安装篇</h3><p>把u盘插到被安装电脑 选择u盘启动<br>电脑浏览器输入find.synology.com 如果检索失败可以用群晖软件SynologyAssistantSetup</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a3vx2zj210l0h7mys.jpg" alt=""></p>
<p>安装完成后重启即可</p>
<h3 id="洗白篇"><a href="#洗白篇" class="headerlink" title="洗白篇"></a>洗白篇</h3><p>鉴于以前算号器失效 本教程提供最新半洗白方法</p>
<p>所谓洗白就是黑群晖拥有正版群晖的sn码，从而实现电影转码 用户录像有缩略图 能用QuickConnect 这就是洗白，   本教程不确定是否能用QuickConnect 所以叫半洗白，黑群晖是否能转码录像缩略图主要是验证sn控制FFmpeg进程是否能运行。本教程就是教大家如何获取sn码 。</p>
<p><strong>本教程关键点6.x系统的群晖  因为Synology DSM 6.0 的「Virtual DSM」「Docker DSM」虚拟技术</strong></p>
<h4 id="第一步下载安装docker"><a href="#第一步下载安装docker" class="headerlink" title="第一步下载安装docker"></a>第一步下载安装docker</h4><p>DSM 系统中安装 docker 套件。<br>打开套件中心，选择实用工具，在右侧即可看到一个鲸鱼的图标，点击安装套件。 </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2qvzjj20nt0dbad4.jpg" alt=""></p>
<h4 id="安装成功后打开-docker新建dsm"><a href="#安装成功后打开-docker新建dsm" class="headerlink" title="安装成功后打开 docker新建dsm"></a>安装成功后打开 docker新建dsm</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2zjp9j20jw0bddiq.jpg" alt=""></p>
<h4 id="设定网络"><a href="#设定网络" class="headerlink" title="设定网络"></a>设定网络</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2cfdsj20jt0gldh4.jpg" alt=""></p>
<h4 id="内存使用设置这个随意"><a href="#内存使用设置这个随意" class="headerlink" title="内存使用设置这个随意"></a>内存使用设置这个随意</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2gnzwj20k00dq3zo.jpg" alt=""></p>
<h4 id="网路选择这个自由"><a href="#网路选择这个自由" class="headerlink" title="网路选择这个自由"></a>网路选择这个自由</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2gdzzj20jj0dy75g.jpg" alt=""></p>
<h4 id="安装位置-这里比较坑-要br格式"><a href="#安装位置-这里比较坑-要br格式" class="headerlink" title="安装位置 这里比较坑 要br格式"></a>安装位置 这里比较坑 要br格式</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2tfijj20jj0dzmyn.jpg" alt=""></p>
<h4 id="手动下载安装文件pat然后手动上传"><a href="#手动下载安装文件pat然后手动上传" class="headerlink" title="手动下载安装文件pat然后手动上传"></a>手动下载安装文件pat然后手动上传</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2xejnj20k00h7myi.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2swifj20k00h5wfy.jpg" alt=""></p>
<h4 id="建立完成后"><a href="#建立完成后" class="headerlink" title="建立完成后"></a>建立完成后</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a2ui3pj20he04at8z.jpg" alt=""></p>
<h4 id="安装成功后点击运行-用SynologyAssistant-搜索新的群晖-点击进去设置新群辉-这个随意-我们不用这个主要是进控制面板-信心中心-记录sn码-本教程重点"><a href="#安装成功后点击运行-用SynologyAssistant-搜索新的群晖-点击进去设置新群辉-这个随意-我们不用这个主要是进控制面板-信心中心-记录sn码-本教程重点" class="headerlink" title="安装成功后点击运行  用SynologyAssistant 搜索新的群晖  点击进去设置新群辉 这个随意  我们不用这个主要是进控制面板 信心中心 记录sn码  本教程重点"></a>安装成功后点击运行  用SynologyAssistant 搜索新的群晖  点击进去设置新群辉 这个随意  我们不用这个主要是进控制面板 信心中心 <u>记录sn码</u>  本教程重点</h4><p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a3d9lcj20k00aq74s.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a3a18qj210e0gstek.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153a30o7uj20m50ekdgb.jpg" alt=""></p>
<h4 id="这个sn码记录下来一会改到U盘内grub-cfg-sn-dxxxxxxxx-mac1-这个就随意-按照群晖地址命名格式就好了-然后重启实体机群晖-半洗白成功"><a href="#这个sn码记录下来一会改到U盘内grub-cfg-sn-dxxxxxxxx-mac1-这个就随意-按照群晖地址命名格式就好了-然后重启实体机群晖-半洗白成功" class="headerlink" title="这个sn码记录下来一会改到U盘内grub.cfg   sn=dxxxxxxxx mac1=这个就随意 按照群晖地址命名格式就好了  然后重启实体机群晖 半洗白成功"></a>这个sn码记录下来一会改到U盘内grub.cfg   sn=dxxxxxxxx mac1=这个就随意 按照群晖地址命名格式就好了  然后重启实体机群晖 半洗白成功</h4>]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo+Coding+Github搭建个人博客的全过程</title>
    <url>/2019/03/16/%E5%9F%BA%E4%BA%8EHexo-Coding-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%85%A8%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/set-up-hexo-with-coding-and-github.png" alt="set-up-hexo-with-coding-and-github"></p>
<a id="more"></a>本文转自[Miaia](https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/)，非常通俗易懂的快速上手指南。

感觉平时工作、瞎倒腾的过程中会遇到好玩的技术、会跳进很深的坑😁，又或是遇到很复杂的情况，以前觉得烂笔头很方便，但是技术越来越复杂加上有各种图片，用笔来做笔记真的是挺落后的了，于是升起了写博客做记录的念头。

一开始我是使用 Nginx+Wordpress 来搭建个人博客的，但是因为要时常检查服务器状况；最近又有一个同学服务器被入侵，删光数据库还装了矿机；阿里的主机面临到期，续费只挂个博客感觉浪费；再加上有了一见钟情的 Hexo+Next 主题并且发现了 Coding和Github 上的 Pages 服务！这不立马就投奔新颖的极简风博客啦！

------

# 概述

我感觉可能是因为最近疯狂改论文，所以开头部分用了“概述”这个标题😅…
言归正传，这次我搭建 Hexo 使用的本地环境如下：

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* Windows 10 1803</span><br><span class="line">* node-v8.11.2-x64</span><br><span class="line">* git version 2.17.1.windows.2</span><br><span class="line">* hexo-v3.7.1</span><br></pre></td></tr></table></figure>
<p>肯定不满足于默认的主题啊，所以使用了 <code>next-muse-v6.3.0</code> 这个主题进行美化~<br>接下来添加网站流量统计以及进行一些小细节的优化。<br>因为心比较大，感觉会有国外大佬来看我的网站，所以为了提高访问速度，我分别将网站部署到 <a href="https://coding.net/" target="_blank" rel="noopener">Coding</a> 和 <a href="https://github.com/" target="_blank" rel="noopener">Github</a> 以提高国内和国外的访问速度，同时在上面分别启用 https。<br>然后使用 <a href="https://cloud.tencent.com/product/cns" target="_blank" rel="noopener">腾讯云解析</a> 来进行自定义域名的解析。</p>
<hr>
<h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><p>这部分主要是将<a href="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/#%E6%A6%82%E8%BF%B0" target="_blank" rel="noopener">概述</a>中所提到本地环境的安装过程进行记录和介绍~<br>一般情况下，照着做都能成功的…<br>其实，一般熟手看到这篇博文的环境安装部分…可能只是…来找几个…官网链接…吧…</p>
<h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>Hexo是基于 Node.js 开发的(应该是)，所以我们首先需要在本地安装 Node.js。<br>作为一个新世纪的技术行业接班人，我们自然要通过官网来下载安装各种程序了！<br>打开 <a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js 官网 (https://nodejs.org)</a> 我们就可以看到映入眼帘的就是直接推荐你系统下载安装的页面：</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/nodejs-download.png" alt="nodejs-download"></p>
<p>我们点击图中红框内的按钮，下载 <code>node-v8.11.2-x64.msi</code> 安装文件。<br>下载完成后，打开 <code>node-v8.11.2-x64.msi</code> 进行安装。<br><strong>除非你要修改安装路径或特殊需求，否则一路默认安装即可。</strong><br>安装完成后，打开 Powershell 或 cmd，输入 <code>node -v</code>，若为以下输出，则安装成功。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows PowerShell</span><br><span class="line">版权所有 (C) Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">PS C:\Users\Miaia&gt; node -v</span><br><span class="line">v8.11.2</span><br><span class="line">PS C:\Users\Miaia&gt;</span><br></pre></td></tr></table></figure>
<h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>我们需要通过 Git 来下载一些主题文件，当然最重要的功能是将生成的网页文件提交到下文中创建的git仓库中去。<br>我们仍然通过打开 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git 官网下载页 (https://git-scm.com/downloads)</a> 来下载 Git 的安装程序。<br>在选择适用系统后，为了方便起见，我选择了安装版的 Git 进行下载(如下图)。</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/git-download.png" alt="git-download"></p>
<p>我们点击图中红框内的链接，下载 <code>Git-2.17.1.2-64-bit.exe</code> 安装文件。<br>下载完成后，打开 <code>Git-2.17.1.2-64-bit.exe</code> 进行安装。<br><strong>除非你了解你在安装时做出的修改，否则一路默认安装即可。</strong><br>安装完成后，打开 Powershell 或 cmd，输入 <code>git --version</code>，若为以下输出，则安装成功。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows PowerShell</span><br><span class="line">版权所有 (C) Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">PS C:\Users\Kiana&gt; git --version</span><br><span class="line">git version 2.17.1.windows.2</span><br><span class="line">PS C:\Users\Kiana&gt;</span><br></pre></td></tr></table></figure>
<p><strong>因为我使用的是 Windows 10 系统，所以上面两个程序我都安装了 Windows 版，使用其他系统的同学我相信你们安装这一步能做到的😁。</strong></p>
<h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><h3 id="打开-Git-Bash"><a href="#打开-Git-Bash" class="headerlink" title="打开 Git Bash"></a>打开 Git Bash</h3><p>在安装完 Windows 版 Git 以后，我们在资源管理器任意文件夹空白处右键即可看到如下界面：</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/open-git-bash.png" alt="open-git-bash"></p>
<p>我们单击 <code>Git Bash Here</code> 打开 Git Bash，可以看到以下界面：<br>(Mac、Linux 用户打开终端即可)</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/git-bash.png" alt="git-bash"></p>
<p>我们接下来的安装步骤以及以后所有的 hexo 页面生成、部署等工作都在在这个 Git Bash 中完成。</p>
<h3 id="使用淘宝-NPM-镜像源-可选"><a href="#使用淘宝-NPM-镜像源-可选" class="headerlink" title="使用淘宝 NPM 镜像源(可选)"></a>使用淘宝 NPM 镜像源(可选)</h3><p><strong>由于国内访问官方 NPM 源速度较慢，为了一劳永逸，此处可以将 NPM 源更换为了淘宝 NPM 镜像源。</strong><br><strong>请注意，如果你觉得你的 NPM 源速度够快，更换镜像源这部分可选择性使用</strong><br>我们在 Git Bash 中输入如下指令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 将官方 NPM 源更换为 淘宝 NPM 镜像源</span><br><span class="line">$ npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p><strong>请注意，如需使用上方安装的淘宝源，需要在使用 npm 命令时将其改为 cnpm</strong></p>
<h3 id="安装-Hexo-命令行工具"><a href="#安装-Hexo-命令行工具" class="headerlink" title="安装 Hexo 命令行工具"></a>安装 Hexo 命令行工具</h3><p>即安装 Hexo 主体，需要在命令行界面进行操作，以下命令来自 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo 官方网站</a>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<p>请耐心稍等一会儿，如果在安装过程中头部出现 <code>WARN</code> ，可能是因为某些内容不支持 Windows，请不要担心，并不影响实际使用。<br>在安装完成后，输入 <code>hexo -v</code>，若出现类似以下内容，则 Hexo 已经安装成功。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">hexo: 3.7.1</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Windows_NT 10.0.17134 win32 x64</span><br><span class="line">http_parser: 2.8.0</span><br><span class="line">node: 8.11.2</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="Hexo-博客初始化"><a href="#Hexo-博客初始化" class="headerlink" title="Hexo 博客初始化"></a>Hexo 博客初始化</h1><h2 id="创建博客主目录"><a href="#创建博客主目录" class="headerlink" title="创建博客主目录"></a>创建博客主目录</h2><p>在电脑中任意位置创建一个任意名称的文件夹，例如，我在D盘创建了一个名为 <code>myblog</code> 的文件夹。</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/create-blog-main-folder.png" alt="create-blog-main-folder"></p>
<h2 id="初始化-Hexo-主目录"><a href="#初始化-Hexo-主目录" class="headerlink" title="初始化 Hexo 主目录"></a>初始化 Hexo 主目录</h2><p>进入上方创建的文件夹，即双击进入 <code>myblog</code> 文件夹。<br>然后右键打开 <code>Git Bash</code> 。<br>在 Git Bash 中输入下方命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>
<p>接下来会自动 clone 需要的文件以及默认的主题到这个文件夹里面，并会获得类似下方的输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line">INFO  Cloning hexo-starter to D:\myblog</span><br><span class="line">Cloning into &#39;D:\myblog&#39;...</span><br><span class="line">...</span><br><span class="line">Unpacking objects: 100% (65&#x2F;65), done.</span><br><span class="line">Submodule &#39;themes&#x2F;landscape&#39; (https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-theme-landscape.git) registered for path &#39;themes&#x2F;landscape&#39;</span><br><span class="line">...</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"></span><br><span class="line">added 401 packages in 12.941s</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure>
<p>我们看到 <code>INFO Start blogging with Hexo!</code> 就可以知道初始化成功啦！我还没遇到初始化失败的…<br>上面那些 <code>WARN</code> 都可以忽略的，不用担心，程序员里只看得到 ERROR，😁😁😁hhh~<br>接下来要安装一些必要的依赖，同样也非常简单，只要在 Git Bash 中输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>然后可以看到输出中有一句：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">up to date in 1.999s</span><br></pre></td></tr></table></figure>
<p>然后 Hexo 博客就真的已经！非常简单滴 <strong>搭！建！完！成！啦！✿✿ヽ(°▽°)ノ✿</strong></p>
<h2 id="生成并运行博客"><a href="#生成并运行博客" class="headerlink" title="生成并运行博客"></a>生成并运行博客</h2><p>在我们进行进一步优化之前，我们先来看看我们搭建好的博客~<br><strong>以下命令要在 Git Bash 中输入哦！</strong><br>首先我们要先生成静态页面，用到的命令是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>
<p>其中，<code>g</code> 的全称是 <code>generate</code>，当然也可以用 <code>hexo generate</code> 这条命令，但上方命令更简便。<br>输入完后可以看到类似以下输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 341 ms</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">...</span><br><span class="line">INFO  Generated: css&#x2F;images&#x2F;banner.jpg</span><br><span class="line">INFO  Generated: css&#x2F;fonts&#x2F;fontawesome-webfont.svg</span><br><span class="line">INFO  28 files generated in 712 ms</span><br></pre></td></tr></table></figure>
<p>一切准备就绪，就差一把东风开启服务器，输入以下命令吹风，偶不，是开启本地服务器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>
<p>其中， <code>s</code> 的全称是 <code>server</code>，当然也可以用 <code>hexo server</code> 这条命令，但上方命令更简便。<br>输入之后我们可以看到以下输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000&#x2F;. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>显而易见，我们的博客已经运行在本地4000端口上啦！<br>打开浏览器，在地址输入 <code>http://localhost:4000/</code>，我们就可以看到激动人心的界面啦！<br><strong>友情提示：平常只使用 Windows 而不熟悉 Linux 的小伙伴可能不知道 Ctrl+C 在 Linux 中表示取消操作，而 Git Bash 正是使用了 Bash 这种 shell。所以这里如果要进行复制，可以右键或者通过 Ctrl+Insert 来实现复制操作。类似地，粘贴操作也不能使用 Ctrl+C，需要改为 Shift+Insert。</strong></p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/origin-hexo-page.png" alt="origin-hexo-page"></p>
<hr>
<h1 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h1><p>接下来我们要让博客变得好看起来！<br>那天我领导问我为什么不用某ssh客户端，在他给我罗列了N条优点之后，我和他说，我这个好看！O(∩_∩)O<br>好看！好看！好看很重要！谁不希望自己的博客在能实现博客功能的基础上还能更好看呢？<br>本来我打算这章开始就单独放到一篇文章里面，但是后来想想还是索性都放到这里面算了，毕竟是记录我这个网站的建立过程，分开来优点怪怪的…<br>好了Y(^o^)Y，话不多说！(已经说了一堆了XD)我们开始美化博客啦！</p>
<h2 id="使用-Next-Muse-主题"><a href="#使用-Next-Muse-主题" class="headerlink" title="使用 Next-Muse 主题"></a>使用 Next-Muse 主题</h2><p>当时会下定决心重做整个博客的最主要原因就是，看到了使用了 Next-Muse 这个主题的网站！<br>真的是一见钟情有木有有木有！<br>Next-Muse 主题是 Next 主题四种设计中的其中一种，其他还有 Mist，Pisces 和 Gemini。<br>首先附上 Next 的 Github 链接：<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next (https://github.com/theme-next/hexo-theme-next)</a><br>在这个仓库里面可以看到不同主题设计的 demo 网址~<br>o(<em>^＠^</em>)o吼吼！接下来开始操作啦！</p>
<h3 id="下载-Next-主题"><a href="#下载-Next-主题" class="headerlink" title="下载 Next 主题"></a>下载 Next 主题</h3><p>首先，我们要将 Next 主题下载到本地。<br>在网站根目录右键打开 Git Bash，输入以下命令将主题下载到本地：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
<p>这个只是非常简单的克隆操作，除非克隆到一半的时候网突然断了…否则一般来说是不会失败哒！</p>
<h3 id="启用-Next-主题"><a href="#启用-Next-主题" class="headerlink" title="启用 Next 主题"></a>启用 Next 主题</h3><p>我们在网站根目录下可以看到有一个名为 <code>_config.yml</code> 的配置文件，我们用编辑器打开它，搜索 <code>theme</code>，我们可以找到以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: landscape</span><br></pre></td></tr></table></figure>
<p>我们要将其中的 <code>landscape</code> 修改为我们要是用的 <code>next</code>，修改完如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>然而这个网站默认是英文的呢，所以我们要修改一下显示语言，完美支持中文的哦！仍然在这个配置文件中，搜索 <code>language</code>，我们可以找到以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">author: John Doe</span><br><span class="line">language:</span><br><span class="line">timezone:</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>我们要在其中的 <code>language</code> 的冒号后面添加 <code>zh-CN</code>。<br><strong>请注意：根据语法要求，冒号需要为英文冒号，冒号后需要有一个空格。</strong><br>修改后，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">author: John Doe</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone:</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h3 id="查看已启用的主题"><a href="#查看已启用的主题" class="headerlink" title="查看已启用的主题"></a>查看已启用的主题</h3><p>我们在 Git Bash 依次输入下方三条命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>
<p>其中，<code>hexo clean</code> 的作用是删除本地已经生成的所有静态文件，哈复习一下！有没有忘记下面两条是什么命令呀？忘记了的话，请看<a href="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/#%E7%94%9F%E6%88%90%E5%B9%B6%E8%BF%90%E8%A1%8C%E5%8D%9A%E5%AE%A2" target="_blank" rel="noopener">这里</a>哦！<br>每一条命令输完都会有对应的输出，因为比较简单或者上方出现过，所以在这里我就省略啦~<br>输入完 <code>hexo s</code> 启动服务器后，我们再次打开浏览器，在地址栏输入 <code>http://localhost:4000/</code>，我们可以看到我们的主题已经启用成功啦！</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/next-theme-enabled.png" alt="next-theme-enabled"></p>
<p><strong>到这里，我们的主题修改已经完成啦！</strong></p>
<h2 id="细节美化"><a href="#细节美化" class="headerlink" title="细节美化"></a>细节美化</h2><h3 id="页面底部跳动的爱心"><a href="#页面底部跳动的爱心" class="headerlink" title="页面底部跳动的爱心"></a>页面底部跳动的爱心</h3><p><strong>拉到本页面底部看一下~那个跳动的爱心是不是超好看！！！来来来我教你怎么弄！</strong><br>首先我来为难一下选择困难症们！！！先去这里选择一个图标！！→→→ <a href="https://fontawesome.com/v4.7.0/icons/" target="_blank" rel="noopener">The Icons</a><br>然后复制这个图标的代码，如我现在选择下图中的爱心，那么我要复制的内容就是下图红框中的 <code>fa-heartbeat</code>。</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/copy-icon-code.png" alt="copy-icon-code"></p>
<p>然后我们需要找到主题的配置文件，定位到目录中 <code>themes/next/_config.yml</code>，<strong>请注意！这个配置文件与根目录中的配置文件不一样！不一样！我们不一样！</strong><br>同样是用编辑器打开这个配置文件，搜索 <code>footer</code>，我们可以看到以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  #since: 2015</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon:</span><br><span class="line">    # Icon name in fontawesome, see: https:&#x2F;&#x2F;fontawesome.com&#x2F;v4.7.0&#x2F;icons</span><br><span class="line">    # &#96;heart&#96; is recommended with animation in red (#ff0000).</span><br><span class="line">    name: user</span><br><span class="line">    # If you want to animate the icon, set it to true.</span><br><span class="line">    animated: false</span><br><span class="line">    # Change the color of icon, using Hex Code.</span><br><span class="line">    color: &quot;#808080&quot;</span><br></pre></td></tr></table></figure>
<p>然后我们将前面复制到的代码替换 <code>name</code> 字段中的 <code>user</code>，并且需要在前面加上 <code>fas</code>，需要爱心跳动，那么我们需要修改 <code>animated</code> 字段为 <code>true</code>，修改图标 <code>color</code> 为红色 <code>#ff0000</code>，这部分修改完如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  #since: 2015</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon:</span><br><span class="line">    # Icon name in fontawesome, see: https:&#x2F;&#x2F;fontawesome.com&#x2F;v4.7.0&#x2F;icons</span><br><span class="line">    # &#96;heart&#96; is recommended with animation in red (#ff0000).</span><br><span class="line">    name: fas fa-heartbeat</span><br><span class="line">    # If you want to animate the icon, set it to true.</span><br><span class="line">    animated: true</span><br><span class="line">    # Change the color of icon, using Hex Code.</span><br><span class="line">    color: &quot;#ff0000&quot;</span><br></pre></td></tr></table></figure>
<p>嘻嘻！刷新一下页面，看看是不是下面有一颗躁动的心脏啦~~</p>
<h3 id="页面访问统计"><a href="#页面访问统计" class="headerlink" title="页面访问统计"></a>页面访问统计</h3><p>我们仅仅需要非常简单地修改一个字段，就可以给页面添加页面的访问统计功能啦！！！<br>仍然是打开主题的配置文件 <code>themes/next/_config.yml</code>，搜索 <code>busuanzi_count</code>，可以看到以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: false</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure>
<p>我们只需要非常简单地将 <code>enable</code> 字段修改为 <code>true</code>，就可以为页面添加访问统计功能啦！修改好后刷新页面！就可以看到：</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/add-page-count.png" alt="add-page-count"></p>
<p>是不是真的很简单呀！！<br><strong>好啦~简单的美化部分就到这里啦！接下来我们要部署到 coding 和 Github 了哦！</strong></p>
<h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>我们要开始部署啦！<br>coding 是国内的，Github 是国外的，因为一些众所周知的原因，Github 时常会访问比较慢呀~<br><strong>这里不得不吐槽一下！coding 普通会员的访问速度真的很感人，非常慢…所以我还是开了个黄金会员…相比之下，Github 就比较良心了，挺快的…国内…好像也挺快的…</strong></p>
<h2 id="部署到-coding"><a href="#部署到-coding" class="headerlink" title="部署到 coding"></a>部署到 coding</h2><h3 id="创建-coding-项目"><a href="#创建-coding-项目" class="headerlink" title="创建 coding 项目"></a>创建 coding 项目</h3><p>首先，一如既往，先发一下 coding 的官网链接：<a href="https://coding.net/" target="_blank" rel="noopener">Coding (https://coding.net/)</a><br>然后注册一个账号这我就不说了吧…<br>然后新建一个项目，项目名称为你注册时填写的用户名后面加上 <code>.coding.me</code>，比如我的就是 <code>miaia.coding.me</code>，其余部分默认就行啦！！！你信我！！！<br><strong>请非常非常注意！.coding.me 前面填写的用户名必须是你的用户名！！！不然是不能用的哦！！！真的注意！！！</strong></p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/create-coding-project.png" alt="create-coding-project"></p>
<h3 id="创建公钥"><a href="#创建公钥" class="headerlink" title="创建公钥"></a>创建公钥</h3><p>然后我们需要在本地创建一个公钥，打开 Git Bash，输入如下命令，然后回车回车回车直到创建完毕：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>
<p>我们可以看到类似的输出如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;Kiana&#x2F;.ssh&#x2F;id_rsa):</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;Kiana&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;Kiana&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:w5YVly1GUy+HlmBtBUd2wSigTK5LYrvH54LRPNzBGhs Kiana@Kiana</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+---[RSA 4096]----+</span><br><span class="line">|       . .o.*&#x3D;&#x3D;&#x3D;B|</span><br><span class="line">|      + .  &#x3D;+++B.|</span><br><span class="line">|      .+  ...o&#x3D; o|</span><br><span class="line">|     E.+ o   . o |</span><br><span class="line">|   o+o* S        |</span><br><span class="line">|  ..+B.o .       |</span><br><span class="line">|   .+..          |</span><br><span class="line">|   ..+ .         |</span><br><span class="line">|   .. +.         |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>
<p>我们可以看到生成的密钥在路径 <code>/c/Users/Kiana/.ssh/id_rsa.pub</code>，<strong>我们直接打开这个文件，复制其中的所有内容</strong><br>然后复制到下图中并保存，这下你就可以随时进行 commit 啦！</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/add-coding-ssh.png" alt="add-coding-ssh"></p>
<h3 id="配置库名并提交"><a href="#配置库名并提交" class="headerlink" title="配置库名并提交"></a>配置库名并提交</h3><p>我们打开根目录下的 <code>_config.yml</code>，搜索 <code>deploy</code>，可以看到以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type:</span><br></pre></td></tr></table></figure>
<p>我们需要将其修改为类似这样的形式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: </span><br><span class="line">    coding: git@git.coding.net:miaia&#x2F;miaia.coding.me.git</span><br></pre></td></tr></table></figure>
<p>然后我们需要安装一个提交的插件，在 Git Bash中输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>在安装完后，输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<p>正常情况下，我们就可以非常顺利地提交到库中啦！<br>这时候访问 <code>用户名.coding.me</code>，就可以看到你的页面咯！</p>
<h3 id="coding-配置自定义域名"><a href="#coding-配置自定义域名" class="headerlink" title="coding 配置自定义域名"></a>coding 配置自定义域名</h3><p>进入到项目页面，选择侧边栏中的 “Pages 服务”，如图：</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/choose-pages-service.png" alt="choose-pages-service"></p>
<p>然后我相信你看到页面上的提示，能够非常容易地添加自定义域名并开启 https 哒！</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/add-coding-domain.png" alt="add-coding-domain"></p>
<h2 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h2><h3 id="创建-Github-仓库"><a href="#创建-Github-仓库" class="headerlink" title="创建 Github 仓库"></a>创建 Github 仓库</h3><p>首先，一如既往，先发一下 Github 的官网链接：<a href="https://github.com/" target="_blank" rel="noopener">Github (https://github.com/)</a><br>然后注册一个账号这我就不说了吧…<br>然后新建一个仓库，项目名称为你注册时填写的用户名后面加上 <code>.github.io</code>，比如我的就是 <code>miaia.github.io</code>，其余部分默认就行啦！！！你信我！！！<br><strong>请非常非常注意！.github.io 前面填写的用户名必须是你的用户名！！！不然是不能用的哦！！！真的注意！！！</strong></p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/create-github-repository.png" alt="create-github-repository"></p>
<h3 id="添加公钥"><a href="#添加公钥" class="headerlink" title="添加公钥"></a>添加公钥</h3><p>我们前面已经在本地创建了一个密钥，生成的密钥在路径 <code>/c/Users/Kiana/.ssh/id_rsa.pub</code>。<br><strong>我们再次打开这个文件，复制其中的所有内容</strong><br>然后复制到下图中并保存，这下你就可以随时进行 commit 啦！</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/add-github-ssh.png" alt="add-github-ssh"></p>
<h3 id="配置库名并提交-1"><a href="#配置库名并提交-1" class="headerlink" title="配置库名并提交"></a>配置库名并提交</h3><p>我们再次打开根目录下的 <code>_config.yml</code>，搜索 <code>deploy</code>，可以看到以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: </span><br><span class="line">    coding: git@git.coding.net:miaia&#x2F;miaia.coding.me.git</span><br></pre></td></tr></table></figure>
<p>我们需要在其中添加 Github 库的地址，所以需要将其修改为类似这样的形式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: </span><br><span class="line">    coding: git@git.coding.net:miaia&#x2F;miaia.coding.me.git</span><br><span class="line">    github: git@github.com:miaia&#x2F;miaia.github.io.git</span><br></pre></td></tr></table></figure>
<p>在安装完后，输入命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<p>正常情况下，我们就可以非常顺利地提交到两个库中啦！<br>这时候访问 <code>用户名.github.io</code>，就可以看到你的页面咯！</p>
<h3 id="Github-配置自定义域名"><a href="#Github-配置自定义域名" class="headerlink" title="Github 配置自定义域名"></a>Github 配置自定义域名</h3><p>进入到项目页面，选择 “Settings”，在该页面中往下拉找到如图位置：</p>
<p><img src="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/add-github-domain.png" alt="add-github-domain"></p>
<p>然后我相信你看到页面上的提示，能够非常容易地添加自定义域名并开启 https 哒！</p>
<h2 id="配置解析"><a href="#配置解析" class="headerlink" title="配置解析"></a>配置解析</h2><p><strong>这里我们要单独说一下 CNAME 解析的问题，因为我们要实现国内外访问不同的服务，所以需要分别设置解析，无论是腾讯云还是阿里云的解析服务，都能够很好滴区分国内外节点，我们需要将国内的 CNAME 设置到 pages.coding.me，将国外的 CNAME 设置到 pages.github.io，然后你就会发现，非常神奇啦！</strong></p>
<hr>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>到这里，我们整个的建立和部署都已经基本完成了，我会把其他的诸如添加评论、SEO优化、谷歌分析等其他细节内容在下一篇日志当中给出，希望大家看了我的这个文章能够顺利滴搭建起自己的博客！当然也可以给我留言哦！结文撒花✿✿ヽ(°▽°)ノ✿</p>
<p>坚持原创！欢迎各位客官给我打赏买小饼干吖！✿✿ヽ(°▽°)ノ✿</p>
<ul>
<li><strong>本文作者：</strong> Miaia</li>
<li><strong>本文链接：</strong> <a href="https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/" target="_blank" rel="noopener">https://11.tt/posts/2018/set-up-hexo-with-coding-and-github/</a></li>
<li><strong>版权声明：</strong> 本博客所有文章除特别声明外，均采用<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener"> BY-NC-SA</a> 许可协议。转载请注明出处！</li>
</ul>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>认识与入门 Markdown</title>
    <url>/2019/03/16/%E8%AE%A4%E8%AF%86%E4%B8%8E%E5%85%A5%E9%97%A8-Markdown/</url>
    <content><![CDATA[<p>转自<a href="https://sspai.com/post/25137" target="_blank" rel="noopener">少数派</a></p>
<blockquote>
<p><a href="http://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">Markdown</a> 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。<a id="more"></a></p>
</blockquote>
<h2 id="认识-Markdown"><a href="#认识-Markdown" class="headerlink" title="认识 Markdown"></a>认识 Markdown</h2><p>在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。</p>
<p>目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如 <a href="http://jianshu.io/" target="_blank" rel="noopener">简书</a>）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感，甚至可以利用 <a href="http://www.getcloudapp.com/" target="_blank" rel="noopener">CloudApp</a> 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持使用 Mou 这类 Markdown 工具进行编辑并直接上传。</p>
<h3 id="Markdown-官方文档"><a href="#Markdown-官方文档" class="headerlink" title="Markdown 官方文档"></a>Markdown 官方文档</h3><p>这里可以看到官方的 Markdown 语法规则文档，当然，后文我也会用自己的方式，阐述这些语法在实际使用中的用法。</p>
<ul>
<li><a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">创始人 John Gruber 的 Markdown 语法说明</a></li>
<li><a href="http://wowubuntu.com/markdown/#list" target="_blank" rel="noopener">Markdown 中文版语法说明</a></li>
</ul>
<h3 id="使用-Markdown-的优点"><a href="#使用-Markdown-的优点" class="headerlink" title="使用 Markdown 的优点"></a>使用 Markdown 的优点</h3><ul>
<li>专注你的文字内容而不是排版样式，安心写作。</li>
<li>轻松的导出 HTML、PDF 和本身的 .md 文件。</li>
<li>纯文本内容，兼容所有的文本编辑器与字处理软件。</li>
<li>随时修改你的文章版本，不必像字处理软件生成若干文件版本导致混乱。</li>
<li>可读、直观、学习成本低。</li>
</ul>
<h3 id="使用-Markdown-的误区"><a href="#使用-Markdown-的误区" class="headerlink" title="使用 Markdown 的误区"></a>使用 Markdown 的误区</h3><blockquote>
<p>We believe that writing is about content, about what you want to say – not about fancy formatting.</p>
<p>我们坚信写作写的是内容，所思所想，而不是花样格式。<br>— <em>Ulysses for Mac</em></p>
</blockquote>
<p>Markdown 旨在简洁、高效，也由于 Markdown 的易读易写，人们用不同的编程语言实现了多个版本的解析器和生成器。这就导致了目前不同的 Markdown 工具集成了不同的功能（基础功能大致相同），例如流程图与时序图，复杂表格与复杂公式的呈现。</p>
<p>虽然功能的丰富并没有什么本质的缺点，但终归有些背离初衷，何况在编写的过程中很费神，不如使用专业的工具撰写来的更有效率，所以如果你需实现复杂功能，专业的图形界面工具会更加方便。</p>
<p>当然，如果你对折腾这些不同客户端对 Markdown 的定制所带来高阶功能感到愉悦的话，那也是无可厚非的。</p>
<h2 id="我该用什么工具？"><a href="#我该用什么工具？" class="headerlink" title="我该用什么工具？"></a>我该用什么工具？</h2><h3 id="macOS-平台"><a href="#macOS-平台" class="headerlink" title="macOS 平台"></a>macOS 平台</h3><p>在 macOS 上可以使用 <a href="http://mouapp.com/" target="_blank" rel="noopener">Mou</a>，它支持实时预览，既左边是你编辑 Markdown 语言，右边会实时的生成预览效果，笔者文章就是 Mou 这款应用写出来的。</p>
<p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69489.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>其次还有很多同类选择。如果你是个编辑作者，我强烈建议你购买 <a href="http://www.ulyssesapp.com/" target="_blank" rel="noopener">Ulysses</a>，这款应用入围了 Mac App Store 的 The Best of 2013，相比 Mou 它支持更多的写作格式、多文档的支持。Mou、iA Writer 这些应用都是基于单文档的管理方式，而 Ulysses 支持 Folder、Filter 的管理，一个 Folder 里面可以创建多个 Sheet，Sheet 之间还可以进行 Combine 处理。</p>
<p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69490.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<h4 id="Windows、iOS、Web-平台"><a href="#Windows、iOS、Web-平台" class="headerlink" title="Windows、iOS、Web 平台"></a>Windows、iOS、Web 平台</h4><ul>
<li>笔者并未使用过 Windows 下的 Markdown 工具，但经朋友介绍，有两款还算不错，一款叫 <a href="http://www.markdownpad.com/" target="_blank" rel="noopener">MarkdownPad</a> ，另一款叫 <a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="noopener">MarkPad</a>。</li>
<li>iOS 端已有相当多的 app 支持 Markdown 语法编辑，例如 Drafts、Day One、iA Writer 等。</li>
<li>Web 端上，我强烈推荐 <a href="http://jianshu.io/" target="_blank" rel="noopener">简书</a> 这款产品，上面有无数热爱文字的人在不停的创造、分享。在 Web 端使用 Markdown 没有比简书更舒服的地方了，它同样支持左右两栏的实时预览，字体优雅、简洁。</li>
</ul>
<p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69491.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<ul>
<li>同样是 Web 端，<a href="https://draftin.com/" target="_blank" rel="noopener">Draftin</a> 这款在线 MD 编辑器也近乎完美。</li>
</ul>
<h2 id="Markdown-语法的简要规则"><a href="#Markdown-语法的简要规则" class="headerlink" title="Markdown 语法的简要规则"></a>Markdown 语法的简要规则</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69492.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 <code>#</code> 号即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br></pre></td></tr></table></figure>
<p>以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 <code>-</code> 或 <code>*</code> 即可变为无序列表，有序列表则直接在文字前加 <code>1.``2.``3.</code> 符号要和文字之间加上一个字符的空格。</p>
<p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69493.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>如果你需要引用一小段别处的句子，那么就要用引用的格式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 例如这样</span><br></pre></td></tr></table></figure>
<p>只需要在文本前加入 <code>&gt;</code> 这种尖括号（大于号）即可</p>
<p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69494.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<h3 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h3><p>插入链接与插入图片的语法很像，区别在一个 <code>!</code>号</p>
<p>插入图片的地址需要图床，这里推荐 <a href="http://www.getcloudapp.com/" target="_blank" rel="noopener">CloudApp</a> 的服务，生成URL地址即可。</p>
<p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69495.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<h3 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h3><p>Markdown 的粗体和斜体也非常简单，用两个 <code>*</code> 包含一段文本就是粗体的语法，用一个 <code>*</code> 包含一段文本就是斜体的语法。</p>
<p>例如：<strong>这里是粗体*</strong>这里是斜体*</p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是我觉得 Markdown 比较累人的地方，例子如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| zebra stripes | are neat      |    $1 |</span><br></pre></td></tr></table></figure>
<p>这种语法生成的表格如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Tables</th>
<th>Are</th>
<th>Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td>right-aligned</td>
<td>$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td>centered</td>
<td>$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td>are neat</td>
<td>$1</td>
</tr>
</tbody>
</table>
</div>
<h3 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h3><p>如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown 下实现也非常简单，只需要用两个 ` 把中间的代码包裹起来，如 <code>code</code>。图例：</p>
<p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69496.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p>使用 <code>tab</code> 键即可缩进。</p>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>分割线的语法只需要另起一行，连续输入三个星号 <code>***</code> 即可。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>到这里，Markdown 的基本语法在日常的使用中基本就没什么大问题了，只要多加练习，配合好用的工具，写起东西来肯定会行云流水。更多的语法规则，其实 Mou 的 Help 文档例子很好，当你第一次使用 Mou 时，就会显示该文档，其次，你也可在撰写过程中，使用 <code>CMD+R</code> 快捷键来快速打开文档，以随时查阅和学习语法。</p>
<p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69497.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<h2 id="与-Markdown-相关的一些推荐"><a href="#与-Markdown-相关的一些推荐" class="headerlink" title="与 Markdown 相关的一些推荐"></a><strong>与 Markdown 相关的一些推荐</strong></h2><h3 id="可配套使用的工具"><a href="#可配套使用的工具" class="headerlink" title="可配套使用的工具"></a><strong>可配套使用的工具</strong></h3><ul>
<li><a href="http://droplr.com/" target="_blank" rel="noopener">Droplr</a></li>
<li><a href="http://www.getcloudapp.com/" target="_blank" rel="noopener">Cloudapp</a></li>
<li><a href="https://itunes.apple.com/cn/app/yi-xiang/id672522335?mt=12&amp;uo=4" target="_blank" rel="noopener">ezShare for Mac</a></li>
<li><a href="http://weibotuchuang.sinaapp.com/" target="_blank" rel="noopener">围脖图床修复计划</a></li>
<li><a href="http://maxiang.info/" target="_blank" rel="noopener">马克飞象，专为印象笔记打造的 Markdown 编辑器，非常推荐</a></li>
</ul>
<h3 id="相关文章阅读"><a href="#相关文章阅读" class="headerlink" title="相关文章阅读"></a><strong>相关文章阅读</strong></h3><ul>
<li><a href="http://apple4us.com/2012/02/why-writers-should-use-markdown.html" target="_blank" rel="noopener">为什么作家应该用 Markdown 保存自己的文稿</a></li>
<li><a href="http://www.yangzhiping.com/tech/r-markdown-knitr.html" target="_blank" rel="noopener">Markdown 写作浅谈</a></li>
<li><a href="http://www.appinn.com/markdown-tools/" target="_blank" rel="noopener">Markdown 工具补完</a></li>
<li><a href="http://jianshu.io/p/63HYZ6" target="_blank" rel="noopener">Drafts + Scriptogr.am + Dropbox 打造移动端 Markdown 风格博客</a></li>
<li><a href="http://www.ituring.com.cn/article/23" target="_blank" rel="noopener">图灵社区 - 怎样使用 Markdown</a></li>
<li><a href="http://news.cnblogs.com/n/139649/" target="_blank" rel="noopener">为什么我们要学习 Markdown 的三个理由</a></li>
<li><a href="http://ibuick.me/?p=4093" target="_blank" rel="noopener">Markdown 语法写作入门指南 by ibuick</a></li>
</ul>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10设置开机自动拨号及断线重连</title>
    <url>/2019/01/22/Windows10%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E6%8B%A8%E5%8F%B7%E5%8F%8A%E6%96%AD%E7%BA%BF%E9%87%8D%E8%BF%9E/</url>
    <content><![CDATA[<p>由于校园网环境HPC需要直连网线通过PPP拨号才能获得IPv6地址，这里利用批处理脚本实现自动开机拨号以及掉线后重新连接功能。<a id="more"></a></p>
<h4 id="建立一个Bat批处理文件ReconnectShenlan-bat"><a href="#建立一个Bat批处理文件ReconnectShenlan-bat" class="headerlink" title="建立一个Bat批处理文件ReconnectShenlan.bat"></a>建立一个Bat批处理文件ReconnectShenlan.bat</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off </span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span> == <span class="string">"h"</span> goto begin </span><br><span class="line">mshta vbscript:createobject(<span class="string">"wscript.shell"</span>).run(<span class="string">"%~nx0 h"</span>,0)(window.close)&amp;&amp;<span class="built_in">exit</span> </span><br><span class="line">:begin </span><br><span class="line"></span><br><span class="line">title=mycmd</span><br><span class="line">tasklist /v /fo csv | findstr /i <span class="string">"mycmd"</span> &gt;&gt; log.txt</span><br><span class="line"></span><br><span class="line">:start</span><br><span class="line">ping -n 2 114.114.114.114 | find <span class="string">"TTL="</span> &gt;nul</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> errorlevel 1 (</span><br><span class="line"><span class="built_in">echo</span> 掉线</span><br><span class="line">rasdial 宽带连接名称 账号 密码</span><br><span class="line"><span class="built_in">echo</span> *** %DATE% %TIME% &gt;&gt; log.txt</span><br><span class="line"></span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line"><span class="built_in">echo</span> 在线</span><br><span class="line">TIMEOUT 60</span><br><span class="line">)</span><br><span class="line">goto:start</span><br></pre></td></tr></table></figure>
<h4 id="放入以下路径"><a href="#放入以下路径" class="headerlink" title="放入以下路径"></a>放入以下路径</h4><blockquote>
<p>C:\WINDOWS\System32\GroupPolicy\Machine\Scripts\Startup</p>
</blockquote>
<p>若要关机或注销时运行则，放入<code>C:\Windows\System32\Grouppolicy\Machine\Scripts\Shutdown</code>路径下</p>
<h4 id="进行指派"><a href="#进行指派" class="headerlink" title="进行指派"></a>进行指派</h4><p>单击“开始→运行”，在运行命令框中输入“gpedit.msc”，回车执行，打开“组策略”窗口。<br>然后在组策略左侧的控制面板树窗格中，如图所示，依次展开“计算机配置→Windows设置→脚本（启动/关机）”节点，<br>双击右侧详细资料窗格中的“启动”（或者“关机”）项目，在弹出的“启动属性”（“关机属性”）对话框中单击“添加”按钮，<br>将你所写的批处理文件添加为新的计算机启动（关机）脚本。设置完成后，退出组策略窗口。以后启动（关闭）电脑时，相应命令会自动执行<br>开关机脚本除了支持.bat格式的批处理脚本文件以外，还支持.wsf、.vbs、.js格式的脚本文件</p>
]]></content>
      <categories>
        <category>WINDOWS</category>
      </categories>
      <tags>
        <tag>自动拨号</tag>
      </tags>
  </entry>
  <entry>
    <title>Fortran用windowsAPI函数创建/超时自动终止进程调用外部程序</title>
    <url>/2019/01/17/Fortran%E5%88%9B%E5%BB%BA%E8%BF%9B%E7%A8%8B%E8%B6%85%E6%97%B6%E8%87%AA%E5%8A%A8%E7%BB%88%E6%AD%A2/</url>
    <content><![CDATA[<p>Windows API拥有很强大的功能函数，其中就包括创建一个进程并设置超时终止时间。流行的方法是使用C/C++调用Windows API，这里介绍Fortran调用方法。<a id="more"></a></p>
<h1 id="子程序及测试代码"><a href="#子程序及测试代码" class="headerlink" title="子程序及测试代码"></a>子程序及测试代码</h1><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">SUBROUTINE</span></span> Launch (progname,ExitCode)</span><br><span class="line"><span class="comment">!该函数执行指定外部进程，超时终止</span></span><br><span class="line"><span class="keyword">use</span> ifwin</span><br><span class="line"><span class="keyword">IMPLICIT</span> <span class="keyword">NONE</span></span><br><span class="line"><span class="keyword">CHARACTER</span>(LEN=*), <span class="keyword">INTENT</span>(<span class="keyword">IN</span>)   :: progname</span><br><span class="line"><span class="keyword">INTEGER</span>                        :: rval,exitcode</span><br><span class="line"><span class="keyword">TYPE</span>(T_STARTUPINFO)			   :: si</span><br><span class="line"><span class="keyword">TYPE</span>(T_PROCESS_INFORMATION)	   :: pi</span><br><span class="line"><span class="comment">!     TYPE T_PROCESS_INFORMATION</span></span><br><span class="line"><span class="comment">!     SEQUENCE</span></span><br><span class="line"><span class="comment">!       integer(HANDLE) hProcess ! knowns  HANDLE</span></span><br><span class="line"><span class="comment">!       integer(HANDLE) hThread ! knowns  HANDLE</span></span><br><span class="line"><span class="comment">!       integer(DWORD) dwProcessId ! knowns  DWORD</span></span><br><span class="line"><span class="comment">!       integer(DWORD) dwThreadId ! knowns  DWORD</span></span><br><span class="line"><span class="comment">!     END TYPE</span></span><br><span class="line"><span class="keyword">CALL</span> ZeroMemory (LOC(pi), SIZEOF(pi))</span><br><span class="line"><span class="keyword">CALL</span> ZeroMemory (LOC(si), SIZEOF(si))</span><br><span class="line">si%cb		   = SIZEOF(si)</span><br><span class="line">si%dwFlags	   = STARTF_USESHOWWINDOW</span><br><span class="line">si%wShowWindow = SW_SHOWNORMAL</span><br><span class="line"><span class="keyword">if</span> (CreateProcess (NULL,						&amp; <span class="comment">! process name</span></span><br><span class="line"> 					progname,					&amp; <span class="comment">! command line</span></span><br><span class="line"> 					NULL_SECURITY_ATTRIBUTES,	&amp; <span class="comment">! security attributes</span></span><br><span class="line"> 					NULL_SECURITY_ATTRIBUTES,	&amp; <span class="comment">! thread attributes</span></span><br><span class="line"> 					FALSE,						&amp; <span class="comment">! handle inheritance</span></span><br><span class="line"> 					<span class="number">0</span>,							&amp; <span class="comment">! creation flags</span></span><br><span class="line"> 					NULL,						&amp; <span class="comment">! environment block</span></span><br><span class="line"> 					NULL,						&amp; <span class="comment">! initial working path</span></span><br><span class="line"> 					si,							&amp; <span class="comment">! startup info</span></span><br><span class="line"> 					pi) ) <span class="keyword">THEN</span>  					  <span class="comment">! process info				</span></span><br><span class="line"> 	<span class="comment">!	let the process load itself</span></span><br><span class="line"> 	rval = WaitForInputIdle (pi%hProcess, <span class="number">2000</span>)          </span><br><span class="line">     rval = WaitForSingleObject(pi%hProcess, <span class="number">600</span>*<span class="number">1000</span> )      <span class="comment">!进程运行时限/毫秒</span></span><br><span class="line">     <span class="keyword">select</span> <span class="keyword">case</span>(rval)</span><br><span class="line">     <span class="keyword">case</span>(WAIT_ABANDONED)    <span class="comment">!线程冲突</span></span><br><span class="line">         <span class="built_in">write</span>(*,<span class="string">'(A)'</span>) <span class="string">'The specified object is a mutex object.'</span></span><br><span class="line">     <span class="keyword">case</span>(WAIT_OBJECT_0)     <span class="comment">!程序成功执行</span></span><br><span class="line">         <span class="built_in">write</span>(*,<span class="string">'(A)'</span>) <span class="string">'The state of the specified object is signaled.'</span></span><br><span class="line">         exitcode = <span class="number">0</span></span><br><span class="line">     <span class="keyword">case</span>(WAIT_TIMEOUT)      <span class="comment">!程序执行超时</span></span><br><span class="line">         <span class="built_in">write</span>(*,<span class="string">'(A)'</span>) <span class="string">"The time-out interval elapsed, and the object's state is nonsignaled."</span></span><br><span class="line">         rval = TerminateProcess(pi%hProcess, -<span class="number">1</span>)</span><br><span class="line">          rval = GetExitCodeProcess(pi%hProcess, loc(exitcode))</span><br><span class="line">      <span class="keyword">case</span>(WAIT_FAILED)       <span class="comment">!CreateProcess执行失败</span></span><br><span class="line">          <span class="built_in">write</span>(*,<span class="string">'(A)'</span>) <span class="string">'The function has failed. To get extended error information, call GetLastError.'</span></span><br><span class="line">          rval = GetLastError()</span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">select</span></span><br><span class="line">  	rval = CloseHandle (pi%hProcess)</span><br><span class="line"> 	rval = CloseHandle (pi%hThread)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">     <span class="built_in">write</span>(*,<span class="string">'(A)'</span>) <span class="string">'被调用程序未能成功运行，请检查文件名'</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">END</span> <span class="function"><span class="keyword">SUBROUTINE</span></span> Launchprogram main</span><br><span class="line"><span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line"><span class="keyword">integer</span> exitcode</span><br><span class="line"><span class="keyword">call</span> Launch(<span class="string">'hello.bat'</span>, exitcode)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">program</span></span> main</span><br><span class="line"><span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line"><span class="keyword">integer</span> exitcode</span><br><span class="line"><span class="keyword">call</span> Launch(<span class="string">'hello.bat'</span>, exitcode)</span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">program</span></span></span><br></pre></td></tr></table></figure>
<h1 id="测试批处理文件"><a href="#测试批处理文件" class="headerlink" title="测试批处理文件"></a>测试批处理文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo Hello world!</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>fortran</tag>
        <tag>windows API</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Aria2-webUI离线下载</title>
    <url>/2018/12/25/%E4%BD%BF%E7%94%A8Aria2-webUI%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<p>Aria是一款基于shell命令的BT下载神器，webUI提供了可视化操作界面，不需要再输入命令下载，对小白更友好。<a id="more"></a></p>
<h1 id="配置WebUI"><a href="#配置WebUI" class="headerlink" title="配置WebUI"></a>配置WebUI</h1><ul>
<li>打开Aria2 WebUI离线下载<a href="https://aria.61xiao.tk" target="_blank" rel="noopener">页面</a>；</li>
<li><code>设置</code> &gt;<code>连接设置</code>，按下图填写，主机名称填写VPS的IP地址，密码令牌为教研室计算站管理员密码，填写完成后点保存连接配置即配置完成。</li>
</ul>
<p><img src="https://s1.ax1x.com/2018/12/25/FgM5yd.png" alt="FgM5yd.md.png"></p>
<blockquote>
<p>注意：第一次配置完成后再访问即可直接使用，但使用新浏览器访问或者浏览器清空缓存，则需要重新配置。</p>
</blockquote>
<h1 id="开始下载"><a href="#开始下载" class="headerlink" title="开始下载"></a>开始下载</h1><p>点击添加，可使用种子和连接以及metalink三种方式下载，根据需要选择任意一种；<br><img src="https://s1.ax1x.com/2018/12/25/FgM4QH.png" alt="FgM4QH.md.png"><br>晚高峰下载速度还是可以接受的，等待下载完成。<br><img src="https://s1.ax1x.com/2018/12/25/FgMhSe.md.png" alt="FgMhSe.md.png"></p>
<h1 id="拖回本地"><a href="#拖回本地" class="headerlink" title="拖回本地"></a>拖回本地</h1><p>打开<a href="http://pan.wuxiaoxiong.top" target="_blank" rel="noopener">网盘</a>，用户名和密码见群聊记录，点击外部储存，即可看到下载完成的文件，勾选后点击下载即可。若采用IDM下载，则需要限制下载线程，否则VPS容易宕机；<br><img src="https://s1.ax1x.com/2018/12/25/FgMWWD.md.png" alt="FgMWWD.md.png"><br>下载完成后，删除已下载文件并到<code>已删除文件</code>中彻底删除以节省空间，<strong>整个网盘空间15GB，请勿下载超过15GB的文件，否则无法登陆网盘</strong><br><img src="https://s1.ax1x.com/2018/12/25/FgMRJO.md.png" alt="FgMRJO.md.png"></p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>离线下载</tag>
      </tags>
  </entry>
  <entry>
    <title>Fortran调用intel MKL函数库编写三次样条插值程序</title>
    <url>/2018/12/20/%E7%BC%96%E5%86%99%E4%B8%89%E6%AC%A1%E6%A0%B7%E6%9D%A1%E6%8F%92%E5%80%BC%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p> 以三次样条插值函数为例演示MKL函数库的使用方法。<a id="more"></a></p>
<h1 id="环境设置"><a href="#环境设置" class="headerlink" title="环境设置"></a>环境设置</h1><p>mkl是Intel公司开发的核心数学库，由于IMSL库license过期，原来用IMSL函数写的子程序都不能用了，需要用mkl库里的类似函数进行替换。</p>
<ul>
<li>项目 &gt; 属性页 &gt; Fortran &gt; Libraries &gt; Use Intel Math Kernel Library 下拉菜单选择任意一个</li>
<li>若要生成可独立运行的可执行文件，选择Debug模式，上一项选择<code>Sequential</code>，同时Runtime Library选择<code>Debug Multithreaded (/libs:static /threads /dbglibs)</code></li>
</ul>
<h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><p>可参考mkl手册，示例代码位于 <code>C:\Program Files (x86)\Intel\Composer XE 2013 SP1\mkl\examples</code></p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'mkl_df.f90'</span>  </span><br><span class="line"><span class="keyword">include</span> <span class="string">'errcheck.inc'</span>    </span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> subroutines  </span><br><span class="line"><span class="keyword">implicit</span> <span class="keyword">none</span>  </span><br><span class="line"><span class="keyword">contains</span>  </span><br><span class="line"><span class="function"><span class="keyword">subroutine</span></span> CubicSpline(ndata,xdata,ydata,<span class="built_in">nint</span>,xint,yint,dy,ddy)</span><br><span class="line"><span class="keyword">use</span> mkl_df_type</span><br><span class="line"><span class="keyword">use</span> mkl_df</span><br><span class="line"><span class="keyword">integer</span>,<span class="keyword">intent</span>(<span class="keyword">in</span>) :: ndata, <span class="built_in">nint</span></span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">intent</span>(<span class="keyword">in</span>),<span class="keyword">dimension</span>(ndata) :: xdata,ydata</span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">intent</span>(<span class="keyword">in</span>),<span class="keyword">dimension</span>(<span class="built_in">nint</span>) :: xint</span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">intent</span>(<span class="keyword">out</span>),<span class="keyword">dimension</span>(<span class="built_in">nint</span>) :: yint</span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">intent</span>(<span class="keyword">out</span>),<span class="keyword">optional</span>,<span class="keyword">dimension</span>(<span class="built_in">nint</span>) :: dy,ddy  <span class="comment">!可选参数，一阶导和二阶导</span></span><br><span class="line"><span class="keyword">integer</span> :: <span class="keyword">status</span></span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">dimension</span>(df_pp_cubic*(ndata-<span class="number">1</span>)) :: scoeff</span><br><span class="line"><span class="keyword">integer</span>,<span class="keyword">parameter</span> :: ndorder = <span class="number">3</span></span><br><span class="line"><span class="keyword">integer</span>,<span class="keyword">dimension</span>(ndorder) :: dorder = (/<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>/) <span class="comment">!表示计算f,f',f''，若是1,0,0则只计算f</span></span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">dimension</span>(ndorder*<span class="built_in">nint</span>) :: results</span><br><span class="line"><span class="keyword">type</span>(df_task) task</span><br><span class="line"></span><br><span class="line"><span class="comment">!创建任务</span></span><br><span class="line"><span class="keyword">status</span> = dfdnewtask1d(task, ndata, xdata, df_no_hint, <span class="number">1</span>, ydata, df_no_hint)</span><br><span class="line"><span class="keyword">call</span> checkdferror(<span class="keyword">status</span>)</span><br><span class="line"><span class="comment">!编辑任务</span></span><br><span class="line"><span class="keyword">status</span> = dfdeditppspline1d(task, df_pp_cubic, df_pp_natural, df_bc_free_end, scoeff=scoeff, scoeffhint=df_no_hint)</span><br><span class="line"><span class="keyword">call</span> checkdferror(<span class="keyword">status</span>)</span><br><span class="line"><span class="comment">!进行插值</span></span><br><span class="line"><span class="keyword">status</span> = dfdconstruct1d(task, df_pp_spline, df_method_std)</span><br><span class="line"><span class="keyword">call</span> checkdferror(<span class="keyword">status</span>)</span><br><span class="line"><span class="keyword">status</span> = dfdinterpolate1d(task, df_interp, df_method_pp, <span class="built_in">nint</span>, xint, df_no_hint, ndorder, dorder,r=results, rhint=df_no_hint)</span><br><span class="line"><span class="keyword">call</span> checkdferror(<span class="keyword">status</span>)</span><br><span class="line"><span class="comment">!结束任务</span></span><br><span class="line"><span class="keyword">status</span> = dfdeletetask(task)</span><br><span class="line">yint = results(<span class="number">1</span>:<span class="built_in">nint</span>)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">present</span>(dy))<span class="keyword">then</span></span><br><span class="line">    dy = results(<span class="built_in">nint</span>+<span class="number">1</span>:<span class="built_in">nint</span>+<span class="built_in">nint</span>)</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">present</span>(ddy))<span class="keyword">then</span></span><br><span class="line">    ddy = results(<span class="built_in">nint</span>*<span class="number">2</span>+<span class="number">1</span>:<span class="built_in">nint</span>*<span class="number">2</span>+<span class="built_in">nint</span>)   </span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">end</span> <span class="keyword">module</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">program</span></span> MyDataFitting</span><br><span class="line"><span class="keyword">use</span> ifport</span><br><span class="line"><span class="keyword">use</span> subroutines</span><br><span class="line"><span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">parameter</span> :: pi = <span class="built_in">asin</span>(<span class="number">1.</span>) * <span class="number">2</span></span><br><span class="line"><span class="keyword">integer</span>,<span class="keyword">parameter</span> :: ndata = <span class="number">11</span>, <span class="built_in">nint</span> = <span class="number">21</span></span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">dimension</span>(ndata) :: xdata,ydata</span><br><span class="line"><span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">dimension</span>(<span class="built_in">nint</span>) :: xint,yint,dy,ddy</span><br><span class="line"><span class="keyword">integer</span> :: i</span><br><span class="line"></span><br><span class="line"><span class="comment">!先赋初值</span></span><br><span class="line"><span class="keyword">do</span> i = <span class="number">1</span>,ndata</span><br><span class="line">    xdata(i) = (i-<span class="number">1</span>) * <span class="number">0.1</span> * pi</span><br><span class="line">    ydata(i) = <span class="built_in">sin</span>(xdata(i))</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line"><span class="keyword">do</span> i = <span class="number">1</span>,<span class="built_in">nint</span></span><br><span class="line">    xint(i) = rand(<span class="number">0</span>) * pi</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> CubicSpline(ndata,xdata,ydata,<span class="built_in">nint</span>,xint,yint,ddy=ddy)</span><br><span class="line"></span><br><span class="line"><span class="built_in">write</span>(*,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">do</span> i = <span class="number">1</span>,<span class="built_in">nint</span></span><br><span class="line">    <span class="built_in">write</span>(*,<span class="number">11</span>) xint(i),yint(i),<span class="built_in">sin</span>(xint(i)),dy(i),<span class="built_in">cos</span>(xint(i)),ddy(i),-<span class="built_in">sin</span>(xint(i))</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">format</span>(<span class="number">5</span>x,<span class="string">'xint'</span>,<span class="number">5</span>x,<span class="string">'yint'</span>,<span class="number">5</span>x,<span class="string">'yref'</span>,<span class="number">8</span>x,<span class="string">'dy'</span>,<span class="number">5</span>x,<span class="string">'dyref'</span>,<span class="number">7</span>x,<span class="string">'ddy'</span>,<span class="number">4</span>x,<span class="string">'ddyref'</span>)</span><br><span class="line"><span class="number">11</span> <span class="keyword">format</span>(<span class="number">1</span>0f10<span class="number">.4</span>)   </span><br><span class="line"><span class="keyword">pause</span></span><br><span class="line">   </span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">program</span></span></span><br></pre></td></tr></table></figure>
<p>其中errcheck.inc代码</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!*******************************************************************************</span></span><br><span class="line"><span class="comment">!  Copyright(C) 2010-2014 Intel Corporation. All Rights Reserved.</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!  The source code, information  and  material ("Material") contained herein is</span></span><br><span class="line"><span class="comment">!  owned  by Intel Corporation or its suppliers or licensors, and title to such</span></span><br><span class="line"><span class="comment">!  Material remains  with Intel Corporation  or its suppliers or licensors. The</span></span><br><span class="line"><span class="comment">!  Material  contains proprietary information  of  Intel or  its  suppliers and</span></span><br><span class="line"><span class="comment">!  licensors. The  Material is protected by worldwide copyright laws and treaty</span></span><br><span class="line"><span class="comment">!  provisions. No  part  of  the  Material  may  be  used,  copied, reproduced,</span></span><br><span class="line"><span class="comment">!  modified, published, uploaded, posted, transmitted, distributed or disclosed</span></span><br><span class="line"><span class="comment">!  in any way  without Intel's  prior  express written  permission. No  license</span></span><br><span class="line"><span class="comment">!  under  any patent, copyright  or  other intellectual property rights  in the</span></span><br><span class="line"><span class="comment">!  Material  is  granted  to  or  conferred  upon  you,  either  expressly,  by</span></span><br><span class="line"><span class="comment">!  implication, inducement,  estoppel or  otherwise.  Any  license  under  such</span></span><br><span class="line"><span class="comment">!  intellectual  property  rights must  be express  and  approved  by  Intel in</span></span><br><span class="line"><span class="comment">!  writing.</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!  *Third Party trademarks are the property of their respective owners.</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!  Unless otherwise  agreed  by Intel  in writing, you may not remove  or alter</span></span><br><span class="line"><span class="comment">!  this  notice or  any other notice embedded  in Materials by Intel or Intel's</span></span><br><span class="line"><span class="comment">!  suppliers or licensors in any way.</span></span><br><span class="line"><span class="comment">!</span></span><br><span class="line"><span class="comment">!*******************************************************************************</span></span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">SUBROUTINE</span></span> CheckDfError( num )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">USE</span> MKL_DF_TYPE</span><br><span class="line">        <span class="keyword">INTEGER</span>(<span class="keyword">KIND</span>=<span class="number">4</span>) :: num</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_NULL_TASK_DESCRIPTOR ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: null task descriptor (code "</span>, num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_MEM_FAILURE ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: memory allocation failure in DF functionality  &amp;</span></span><br><span class="line"><span class="string">     &amp;             (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_NX ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: the number of breakpoints is invalid (code "</span>,  &amp;</span><br><span class="line">     &amp;             num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_X ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of breakpoints is invalid (code "</span>,       &amp;</span><br><span class="line">     &amp;             num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_X_HINT ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid flag describing structure of partition &amp;</span></span><br><span class="line"><span class="string">     &amp;             (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_NY ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid dimension of vector-valued function y  &amp;</span></span><br><span class="line"><span class="string">     &amp;             (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_Y ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of function values is invalid (code "</span>,   &amp;</span><br><span class="line">     &amp;             num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_Y_HINT ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid flag describing structure of function  &amp;</span></span><br><span class="line"><span class="string">     &amp;             y (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_SPLINE_ORDER ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid spline order (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_SPLINE_TYPE ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid spline type (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_IC_TYPE ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid type of internal conditions used       &amp;</span></span><br><span class="line"><span class="string">     &amp;             in the spline construction (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_IC ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of internal conditions for spline        &amp;</span></span><br><span class="line"><span class="string">     &amp;             construction is not defined (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_BC_TYPE ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid type of boundary conditions used       &amp;</span></span><br><span class="line"><span class="string">     &amp;             in the spline construction (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_BC ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of boundary conditions for spline        &amp;</span></span><br><span class="line"><span class="string">     &amp;             construction is not defined (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_PP_COEFF ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of piece-wise polynomial spline          &amp;</span></span><br><span class="line"><span class="string">     &amp;             coefficients is not defined (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_PP_COEFF_HINT ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid flag describing structure of the       &amp;</span></span><br><span class="line"><span class="string">     &amp;             piece-wise polynomial spline coefficients (code "</span>,    &amp;</span><br><span class="line">     &amp;             num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_PERIODIC_VAL ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: function values at the end points of the       &amp;</span></span><br><span class="line"><span class="string">     &amp;             interpolation interval are not equal as required      &amp;</span></span><br><span class="line"><span class="string">     &amp;             in periodic boundary conditions (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_DATA_ATTR ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid attribute of the pointer to be set or  &amp;</span></span><br><span class="line"><span class="string">     &amp;             modified in Data Fitting task descriptor with         &amp;</span></span><br><span class="line"><span class="string">     &amp;             EditIdxPtr editor (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_DATA_IDX ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: index of pointer to be set or modified in Data &amp;</span></span><br><span class="line"><span class="string">     &amp;             Fitting task descriptor with EditIdxPtr editor is     &amp;</span></span><br><span class="line"><span class="string">     &amp;             out of range (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_NSITE ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid number of interpolation sites (code "</span>, &amp;</span><br><span class="line">     &amp;             num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_SITE ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of interpolation sites is not defined    &amp;</span></span><br><span class="line"><span class="string">     &amp;             (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_SITE_HINT ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid flag describing structure of           &amp;</span></span><br><span class="line"><span class="string">     &amp;             interpolation sites (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_NDORDER ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid size of array that defines order       &amp;</span></span><br><span class="line"><span class="string">     &amp;             of the derivatives to be computed at the              &amp;</span></span><br><span class="line"><span class="string">     &amp;             interpolation sites (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_DORDER ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array defining derivative orders to be         &amp;</span></span><br><span class="line"><span class="string">     &amp;             computed at interpolation sites is not defined        &amp;</span></span><br><span class="line"><span class="string">     &amp;             (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_DATA_HINT ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid flag providing a-priori information    &amp;</span></span><br><span class="line"><span class="string">     &amp;             about partition and/or interpolation sites (code "</span>,   &amp;</span><br><span class="line">     &amp;             num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_INTERP ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of spline based interpolation results    &amp;</span></span><br><span class="line"><span class="string">     &amp;             is not defined (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_INTERP_HINT ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid flag defining structure of spline      &amp;</span></span><br><span class="line"><span class="string">     &amp;             based interpolation results (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_CELL_IDX ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of indices of partition cells containing &amp;</span></span><br><span class="line"><span class="string">     &amp;             interpolation sites is not defined (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_NLIM ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid size of arrays containing integration  &amp;</span></span><br><span class="line"><span class="string">     &amp;             limits (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_LLIM ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of left integration limits               &amp;</span></span><br><span class="line"><span class="string">     &amp;             is not defined (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_RLIM ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of right integration limits              &amp;</span></span><br><span class="line"><span class="string">     &amp;             is not defined (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_INTEGR ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: array of spline based integration results      &amp;</span></span><br><span class="line"><span class="string">     &amp;             is not defined (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_INTEGR_HINT ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: invalid flag defining structure of spline      &amp;</span></span><br><span class="line"><span class="string">     &amp;             based inetgration results (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_BAD_LOOKUP_INTERP_SITE ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: bad site provided for interpolation with       &amp;</span></span><br><span class="line"><span class="string">     &amp;             look-up interpolator (code "</span>,num,<span class="string">")."</span></span><br><span class="line">        <span class="keyword">stop</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ( num == DF_ERROR_NULL_PTR ) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">33</span>, <span class="string">"Error: bad pointer provided in DF function (code "</span>,   &amp;</span><br><span class="line">     &amp;             num,<span class="string">")."</span></span><br><span class="line">      <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"><span class="number">33</span>    <span class="keyword">format</span>(A,I5,A)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">END</span> <span class="function"><span class="keyword">SUBROUTINE</span></span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>fortran</tag>
        <tag>mkl函数库</tag>
      </tags>
  </entry>
  <entry>
    <title>为博客设置一个自定义域名</title>
    <url>/2018/12/12/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%BD%AE%E4%B8%80%E4%B8%AA%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/</url>
    <content><![CDATA[<p><a href="https://www.jianshu.com/p/4763fa689d19" target="_blank" rel="noopener">转自</a></p>
<p>现在越来越多的人悬着使用githubpage搭建自己的个人博客，但是github提供的默认的域名是这种形式：username.github.io，是个二级域名，这对于很多人来说可能感觉不是很酷。那么我们今天就来做一件比较酷的事情，为站点自定义一个域名。<a id="more"></a></p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ol>
<li>准备工作</li>
<li>域名申请</li>
<li>为站点添加CNAME</li>
<li>在DNSPOD配置域名解析<br>4.修改DNS</li>
<li>验证结果</li>
</ol>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li>一个完整的github page博客项目。</li>
<li>名词解释：<br>DNS：网域名称系统。你可以把它想象成一张域名和IP地址映射的数据表。<br>DNS解析：就是通过我们输入的网址（域名）查找到对应的主机（IP地址）<br>CNAME重定向：username.github.io和username.tk是两个域名，添加CNAME文件选择首选域，使其指向同一主机。<br><a href="http://www.ruanyifeng.com/blog/2016/06/dns.html" target="_blank" rel="noopener">DNS原理&gt;</a></li>
</ul>
<h1 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h1><p>有很多网站都有域名购买服务，我使用的是<a href="https://my.freenom.com/domains.php" target="_blank" rel="noopener">Freenom</a>。常见的域名注册网站还有万网、腾讯云、GoDaady（狗爹）。<br>我选择Freenom的最主要原因就是：免费+顶级域名。对，你没有听错就是免费的顶级域名，一开始就认为注册域名肯定要花费不少moneyd的人是不是感觉赚到了😉。进入该网站注册成功之后，选择Register a New Domain进行域名申请检验。它可以提供免费的顶级域名有：tk，ml，ga，cf，gq</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/1059465-fbce92549a18f65a.png" alt=""></p>
<p>选择你喜欢的域名，进入选购界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/1059465-7e7cb240f4d62f4c.webp" alt=""></p>
<p>在Period里面可以选择使用时间，最多是一年的免费使用，顶级域名耶，已经很大的优惠了。当然如果你是土豪这都无所谓了。</p>
<h1 id="为站点添加CNAME文件"><a href="#为站点添加CNAME文件" class="headerlink" title="为站点添加CNAME文件"></a>为站点添加CNAME文件</h1><p>在Hexo的本地站点里，进入source文件，新建文件CNAME，注意没有后缀，打开文件填入刚申请的域名<br><code>zhangferry.tk</code></p>
<p>保存。然后发布站点，这时CNAME文件就被发布到了github上对应的站点仓库中</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/1059465-c8c19312012904eb.webp" alt=""></p>
<p>CNAME文件的作用：<br>CNAME是一个别名记录，它允许你将多个名字映射到同一台计算机。比如刚才添加的<code>CNAME</code>文件，会被github自动识别，当我们输入<code>zhangferry.github.io</code>和输入<code>zhangferry.tk</code>时，它将指向同一个ip地址，展示同样的内容。</p>
<h1 id="在DNSPOD中配置域名解析"><a href="#在DNSPOD中配置域名解析" class="headerlink" title="在DNSPOD中配置域名解析"></a>在DNSPOD中配置域名解析</h1><p>注册DNSPOS账号，进入管理控制台<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/1059465-fb90966d0b49e5db.webp" alt=""></p>
<p>点击添加域名，输入我们刚刚申请的域名。确定之后就是进行添加记录<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/1059465-6ad9908219780e11.webp" alt=""></p>
<p>添加记录的每一项，系统都会提示代表意思，这里主要解释记录类型</p>
<ul>
<li>A记录：地址记录，用来指定域名的IP地址</li>
<li>CNAME记录：如果需要将域名指向另一个域名，再由另一个域名提供IP地址，就需要添加CNAME记录</li>
<li>NS记录：域名服务器记录，如果需要把子域名交给其他DNS服务商解析，就需要添加NS记录</li>
</ul>
<p>上面的NS记录是系统默认添加的。<br>A记录就是指向对应IP地址，这里的<code>192.30.252.153</code>和<code>192.30.252.154</code>是github的服务器IP地址。<br>CNAME记录这里可填可不填，因为A记录已经将<code>zhangferry.tk</code>和<code>zhangferry.github.io</code>的域名统一为一个IP地址了。有一种情况就是为了提高访问速度，要区分国内国外不同用户使用不同的网站进行重定向需要添加对应的CNAME记录。</p>
<h1 id="修改域名DNS"><a href="#修改域名DNS" class="headerlink" title="修改域名DNS"></a>修改域名DNS</h1><p>再回到刚才的域名申请网站，点Services-&gt;My Domains-&gt;Manage Domain-&gt;Management Tools-&gt;Nameservers<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/1059465-d709c85c43e6b271.webp" alt=""></p>
<p>将<code>f1g1ns1.dnspod.net</code>和<code>f1g1ns2.dnspod.net</code>填入到Nameserver1和Nameserver中，点击Change Nameservers保存操作。注意到刚填的域名服务就是对应NS记录的记录值。完成之后稍等片刻，DNSPod会有如下提示，否则就按照提示进行检验哪一步出了问题。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/1059465-0cbbb7a554af3145.webp" alt=""></p>
<h1 id="验证结果"><a href="#验证结果" class="headerlink" title="验证结果"></a>验证结果</h1><p>之后需要等待全球递归DNS服务器刷新（最多72小时）<br>在命令行执行：<code>$ dig zhangferry.tk</code>，出现以下结果说明配置成功，主要IP地址的对应。<br><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/1059465-de44f6a9d62989c6.webp" alt=""></p>
<p>参考<br><a href="http://www.isetsuna.com/hexo/domain-dns/" target="_blank" rel="noopener">Hexo博客系列：域名和DNS</a><br><a href="http://itcoding.tk/2016/06/26/set-up-custom-domain-for-github-pages/" target="_blank" rel="noopener">为你的Github Pages博客绑定一个免费顶级域名吧</a></p>
<p>作者：勇闯天涯茉莉花茶<br>链接：<a href="https://www.jianshu.com/p/4763fa689d19" target="_blank" rel="noopener">https://www.jianshu.com/p/4763fa689d19</a><br>來源：简书<br>简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title>Ctypes调用FORTRAN DLL实现python调用fortran函数</title>
    <url>/2018/12/12/Ctypes%E8%B0%83%E7%94%A8FORTRAN-DLL%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<p>在使用Python做大量科学计算时，可能会调用执行效率更高或者早期编好的Fortran函数，此时需要将两种语言混编。采用Ctypes模块可以高效地在两种语言之间传递数据。<a id="more"></a></p>
<h3 id="生成动态链接库"><a href="#生成动态链接库" class="headerlink" title="生成动态链接库"></a>生成动态链接库</h3><p>Fortran文件内的函数格式改为</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> xxx</span><br><span class="line">    <span class="keyword">use</span> <span class="keyword">iso_c_binding</span>   <span class="comment">!注意引用该模组</span></span><br><span class="line">    <span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line"><span class="keyword">contains</span></span><br><span class="line">    <span class="function"><span class="keyword">subroutine</span></span> func(p1,p2,...pn) <span class="keyword">BIND</span>(C,<span class="keyword">name</span>=<span class="string">'func'</span>) <span class="comment">!绑定名称</span></span><br><span class="line">    <span class="comment">!DEC$ ATTRIBUTES DLLEXPORT :: my_exam  !ifort编译器读取，具体查ifort手册</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">module</span></span><br></pre></td></tr></table></figure>
<p>打开Intel Visual Studio命令行模式，输入以下命令生成xxx.dll</p>
<blockquote>
<p>cd /d path (待编译.f90文件路径)</p>
<p>ifort /dll file.f90 (.f90文件名，比如xxx.f90)</p>
</blockquote>
<h3 id="在py文件中按Ctypes指针对象传递参数"><a href="#在py文件中按Ctypes指针对象传递参数" class="headerlink" title="在py文件中按Ctypes指针对象传递参数"></a>在py文件中按Ctypes指针对象传递参数</h3><p>比如xxx.dll种有一函数exam(m,n,val)，其中m,n为整数，val为数组（实数），则python文件调用函数exam如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> ctypes <span class="keyword">as</span> ct</span><br><span class="line"><span class="comment"># 比如有一个np.array类型的数组</span></span><br><span class="line">flib = ct.CDLL(<span class="string">'xxx.dll'</span>) <span class="comment"># 导入dll文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numpy_pointer</span><span class="params">(array)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> array.ctypes.data_as(ct.POINTER(ct.c_double))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exam</span><span class="params">(m,n,val)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> flib.exam(ct.byref(ct.c_int(m)),ct.byref(ct.c_int(n)),numpy_pointer(val))</span><br><span class="line">val = np.asfortranarray(val) <span class="comment">#按Fortran列主序方式储存数组</span></span><br><span class="line">result = exam(m,n,val)</span><br></pre></td></tr></table></figure>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="FORTRAN函数-示例my-exam-f90"><a href="#FORTRAN函数-示例my-exam-f90" class="headerlink" title="FORTRAN函数 示例my_exam.f90"></a>FORTRAN函数 示例my_exam.f90</h4><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> example</span><br><span class="line">    <span class="keyword">use</span> <span class="keyword">iso_c_binding</span></span><br><span class="line">    <span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line"><span class="keyword">contains</span></span><br><span class="line">    <span class="function"><span class="keyword">subroutine</span></span> my_exam(m,n,val) <span class="keyword">BIND</span>(C,<span class="keyword">name</span>=<span class="string">'my_exam'</span>)</span><br><span class="line">    <span class="comment">!DEC$ ATTRIBUTES DLLEXPORT :: my_exam </span></span><br><span class="line">    <span class="keyword">integer</span>,<span class="keyword">intent</span>(<span class="keyword">in</span>) :: m,n</span><br><span class="line">    <span class="keyword">real</span>(<span class="number">8</span>),<span class="keyword">dimension</span>(m,n),<span class="keyword">intent</span>(inout) :: val</span><br><span class="line">    <span class="keyword">integer</span> :: i,j</span><br><span class="line">    open(<span class="number">1</span>,<span class="keyword">file</span> = <span class="string">'fortran_output.dat'</span>)</span><br><span class="line">    <span class="built_in">write</span>(<span class="number">1</span>,<span class="string">'(a)'</span>) <span class="string">'input arrary'</span></span><br><span class="line">    <span class="built_in">write</span>(<span class="number">1</span>,<span class="number">100</span>) ((val(i,j),j=<span class="number">1</span>,n),i = <span class="number">1</span>,m)</span><br><span class="line">    <span class="keyword">do</span> i = <span class="number">1</span>,m</span><br><span class="line">        <span class="keyword">do</span> j = <span class="number">1</span>,n</span><br><span class="line">            val(i,j) = val(i,j) * (i+j)</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">write</span>(<span class="number">1</span>,<span class="string">'(a)'</span>) <span class="string">'output arrary'</span></span><br><span class="line">    <span class="built_in">write</span>(<span class="number">1</span>,<span class="number">100</span>) ((val(i,j),j=<span class="number">1</span>,n),i = <span class="number">1</span>,m)</span><br><span class="line">    close(<span class="number">1</span>)</span><br><span class="line"><span class="number">100</span> <span class="keyword">format</span>(&lt;n&gt;F10<span class="number">.3</span>)    </span><br><span class="line">    <span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">module</span></span><br></pre></td></tr></table></figure>
<h4 id="ifort生成DLL"><a href="#ifort生成DLL" class="headerlink" title="ifort生成DLL"></a>ifort生成DLL</h4><p>打开命令行形式的intel 64 visual studio 2012 mode<br><code>&gt;ifort /dll my_exam.f90</code></p>
<h4 id="my-exam-py"><a href="#my-exam-py" class="headerlink" title="my_exam.py"></a>my_exam.py</h4><p>通过ctypes模块调用，注意ndarray数组按照FORTRAN列主序方式储存<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ctypes <span class="keyword">as</span> ct</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入dll</span></span><br><span class="line">flib = ct.CDLL(<span class="string">'my_exam.dll'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建矩阵</span></span><br><span class="line">m = <span class="number">10</span></span><br><span class="line">n = <span class="number">5</span></span><br><span class="line">rng = np.random.RandomState()</span><br><span class="line">val = rng.random_sample(size=(m, n)) * <span class="number">10</span></span><br><span class="line">f = open(<span class="string">'expample_output.dat'</span>,<span class="string">'w'</span>)</span><br><span class="line">f.write(<span class="string">'input array\n'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> val:</span><br><span class="line">    <span class="keyword">for</span> ele <span class="keyword">in</span> line:</span><br><span class="line">        f.write(<span class="string">"&#123;0:10.3f&#125;"</span>.format(ele))</span><br><span class="line">    f.write( <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式1：</span></span><br><span class="line"><span class="comment"># m_p = ct.pointer(ct.c_int(m))</span></span><br><span class="line"><span class="comment"># n_p = ct.pointer(ct.c_int(n))</span></span><br><span class="line"><span class="comment"># val = np.asfortranarray(val).T  #若不转置将面临fortran和C数组在内存中储存顺序不同的问题</span></span><br><span class="line"><span class="comment"># result = flib.my_exam(m_p, n_p, np.ctypeslib.as_ctypes(val))</span></span><br><span class="line"><span class="comment"># val = val.T</span></span><br><span class="line"><span class="comment"># print(val)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式2：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numpy_pointer</span><span class="params">(array)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> array.ctypes.data_as(ct.POINTER(ct.c_double))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_exam</span><span class="params">(m, n, val)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> flib.my_exam(ct.byref(ct.c_int(m)), ct.byref(ct.c_int(n)), numpy_pointer(val))</span><br><span class="line">val = np.asfortranarray(val)   <span class="comment">#按照Fortran方式储存(fortran列主序，C行主序)</span></span><br><span class="line">result = my_exam(m, n, val)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f.write(<span class="string">'output array\n'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> val:</span><br><span class="line">    <span class="keyword">for</span> ele <span class="keyword">in</span> line:</span><br><span class="line">        f.write(<span class="string">"&#123;0:10.3f&#125;"</span>.format(ele))</span><br><span class="line">    f.write( <span class="string">'\n'</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></p>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>若example_output.dat与fortran_output.dat数组不同，且前者input array行主序正好与后者的列主序相同，则说明数组按C语言格式传递至子程序中。</p>
<blockquote>
<p>example_output.dat<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input array</span><br><span class="line">     8.341     9.982     7.849     8.082     0.940</span><br><span class="line">     2.061     0.185     9.257     5.831     5.491</span><br><span class="line">     1.552     4.727     5.735     7.451     5.760</span><br><span class="line">     3.789     6.828     8.692     2.715     5.318</span><br><span class="line">     3.828     4.005     0.733     6.159     8.166</span><br><span class="line">     0.123     7.252     9.402     0.256     2.003</span><br><span class="line">     1.227     9.711     9.069     7.987     3.315</span><br><span class="line">     5.775     0.614     9.754     4.249     4.201</span><br><span class="line">     5.845     0.219     0.986     2.124     9.224</span><br><span class="line">     9.579     2.791     1.573     4.914     8.677</span><br><span class="line">output array</span><br><span class="line">    16.682    29.947    31.394    40.408     5.639</span><br><span class="line">     6.182     0.740    46.284    34.988    38.434</span><br><span class="line">     6.209    23.635    34.408    52.155    46.080</span><br><span class="line">    18.946    40.970    60.842    21.724    47.864</span><br><span class="line">    22.969    28.036     5.865    55.427    81.663</span><br><span class="line">     0.858    58.014    84.620     2.555    22.028</span><br><span class="line">     9.815    87.398    90.688    87.858    39.778</span><br><span class="line">    51.975     6.142   107.290    50.993    54.614</span><br><span class="line">    58.450     2.409    11.833    27.614   129.131</span><br><span class="line">   105.364    33.494    20.448    68.790   130.148</span><br></pre></td></tr></table></figure><br>fortran_output.dat<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input arrary</span><br><span class="line">     8.341     9.982     7.849     8.082     0.940</span><br><span class="line">     2.061     0.185     9.257     5.831     5.491</span><br><span class="line">     1.552     4.727     5.735     7.451     5.760</span><br><span class="line">     3.789     6.828     8.692     2.715     5.318</span><br><span class="line">     3.828     4.005     0.733     6.159     8.166</span><br><span class="line">     0.123     7.252     9.402     0.256     2.003</span><br><span class="line">     1.227     9.711     9.069     7.987     3.315</span><br><span class="line">     5.775     0.614     9.754     4.249     4.201</span><br><span class="line">     5.845     0.219     0.986     2.124     9.224</span><br><span class="line">     9.579     2.791     1.573     4.914     8.677</span><br><span class="line">output arrary</span><br><span class="line">    16.682    29.947    31.394    40.408     5.639</span><br><span class="line">     6.182     0.740    46.284    34.988    38.434</span><br><span class="line">     6.209    23.635    34.408    52.155    46.080</span><br><span class="line">    18.946    40.970    60.842    21.724    47.864</span><br><span class="line">    22.969    28.036     5.865    55.427    81.663</span><br><span class="line">     0.858    58.014    84.620     2.555    22.028</span><br><span class="line">     9.815    87.398    90.688    87.858    39.778</span><br><span class="line">    51.975     6.142   107.290    50.993    54.614</span><br><span class="line">    58.450     2.409    11.833    27.614   129.131</span><br><span class="line">   105.364    33.494    20.448    68.790   130.148</span><br></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>fortran</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown的书写格式</title>
    <url>/2018/12/11/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/</url>
    <content><![CDATA[<p> MarkDown实现代码块，流程图，表格，复选框以及公式等基本格式简介。<a id="more"></a></p>
<h1 id="欢迎使用马克飞象"><a href="#欢迎使用马克飞象" class="headerlink" title="欢迎使用马克飞象"></a>欢迎使用马克飞象</h1><p><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：</p>
<ul>
<li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li>
<li><strong>得心应手</strong> ：简洁高效的编辑器，提供<a href="http://maxiang.info/client_zh" target="_blank" rel="noopener">桌面客户端</a>以及<a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop" target="_blank" rel="noopener">离线Chrome App</a>，支持移动端 Web；</li>
<li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。</li>
</ul>
<hr>
<h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><blockquote>
<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">维基百科</a></p>
</blockquote>
<p>正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href="http://www.example.com" target="_blank" rel="noopener">链接</a>或一个脚注<sup><a href="#fn_demo" id="reffn_demo">demo</a></sup>。下面列举了几个高级功能，更多语法请按<code>Ctrl + /</code>查看帮助。 </p>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">'''A docstring'''</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt'''</span></span><br></pre></td></tr></table></figure>
<h3 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h3><p>可以创建行内公式，例如 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。或者块级公式：</p>
<script type="math/tex; mode=display">x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a}</script><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>相关代码：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| zebra stripes | are neat      |    $1 |</span><br></pre></td></tr></table></figure></p>
<p>显示效果：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Are</th>
<th style="text-align:right">Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td style="text-align:center">right-aligned</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
</div>
<p>相关代码：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dog | bird | cat</span><br><span class="line">----|------|----</span><br><span class="line">foo | foo  | foo</span><br><span class="line">bar | bar  | bar</span><br><span class="line">baz | baz  | baz</span><br></pre></td></tr></table></figure><br>显示效果：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>dog</th>
<th>bird</th>
<th>cat</th>
</tr>
</thead>
<tbody>
<tr>
<td>foo</td>
<td>foo</td>
<td>foo</td>
</tr>
<tr>
<td>bar</td>
<td>bar</td>
<td>bar</td>
</tr>
<tr>
<td>baz</td>
<td>baz</td>
<td>baz</td>
</tr>
</tbody>
</table>
</div>
<h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: Start</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line">op&#x3D;&gt;operation: My Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure>
<p>以及时序图:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>提示：</strong>想了解更多，请查看<strong>流程图</strong><a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">语法</a>以及<strong>时序图</strong><a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">语法</a>。</p>
</blockquote>
<h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><p>使用 <code>- [ ]</code> 和 <code>- [x]</code> 语法可以创建复选框，实现 todo-list 等功能。例如：</p>
<ul>
<li>[x] 已完成事项</li>
<li>[ ] 待办事项1</li>
<li>[ ] 待办事项2</li>
</ul>
<blockquote>
<p><strong>注意：</strong>目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在<strong>马克飞象</strong>中修改 Markdown 原文才可生效。下个版本将会全面支持。</p>
</blockquote>
<h2 id="印象笔记相关"><a href="#印象笔记相关" class="headerlink" title="印象笔记相关"></a>印象笔记相关</h2><h3 id="笔记本和标签"><a href="#笔记本和标签" class="headerlink" title="笔记本和标签"></a>笔记本和标签</h3><p><strong>马克飞象</strong>增加了<code>@(笔记本)[标签A|标签B]</code>语法, 以选择笔记本和添加标签。 <strong>绑定账号后</strong>， 输入<code>(</code>自动会出现笔记本列表，请从中选择。</p>
<h3 id="笔记标题"><a href="#笔记标题" class="headerlink" title="笔记标题"></a>笔记标题</h3><p><strong>马克飞象</strong>会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 <code>欢迎使用马克飞象</code>。</p>
<h3 id="快捷编辑"><a href="#快捷编辑" class="headerlink" title="快捷编辑"></a>快捷编辑</h3><p>保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到<strong>马克飞象</strong>中打开并编辑该笔记。</p>
<blockquote>
<p><strong>注意：</strong>目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。</p>
</blockquote>
<h3 id="数据同步"><a href="#数据同步" class="headerlink" title="数据同步"></a>数据同步</h3><p><strong>马克飞象</strong>通过<strong>将Markdown原文以隐藏内容保存在笔记中</strong>的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。</p>
<blockquote>
<p><strong>隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。</strong></p>
</blockquote>
<h3 id="离线存储"><a href="#离线存储" class="headerlink" title="离线存储"></a>离线存储</h3><p><strong>马克飞象</strong>使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过<code>文档管理</code>打开。</p>
<blockquote>
<p><strong>注意：</strong>虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，<strong>请务必经常及时同步到印象笔记</strong>。</p>
</blockquote>
<h2 id="编辑器相关"><a href="#编辑器相关" class="headerlink" title="编辑器相关"></a>编辑器相关</h2><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>右侧系统菜单（快捷键<code>Ctrl + M</code>）的<code>设置</code>中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。</p>
<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>帮助    <code>Ctrl + /</code><br>同步文档    <code>Ctrl + S</code><br>创建文档    <code>Ctrl + Alt + N</code><br>最大化编辑器    <code>Ctrl + Enter</code><br>预览文档 <code>Ctrl + Alt + Enter</code><br>文档管理    <code>Ctrl + O</code><br>系统菜单    <code>Ctrl + M</code> </p>
<p>加粗    <code>Ctrl + B</code><br>插入图片    <code>Ctrl + G</code><br>插入链接    <code>Ctrl + L</code><br>提升标题    <code>Ctrl + H</code></p>
<h2 id="关于收费"><a href="#关于收费" class="headerlink" title="关于收费"></a>关于收费</h2><p><strong>马克飞象</strong>为新用户提供 10 天的试用期，试用期过后需要<a href="maxiang.info/vip.html">续费</a>才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。</p>
<h2 id="反馈与建议"><a href="#反馈与建议" class="headerlink" title="反馈与建议"></a>反馈与建议</h2><ul>
<li>微博：<a href="http://weibo.com/u/2788354117" target="_blank" rel="noopener">@马克飞象</a>，<a href="http://weibo.com/ggock" target="_blank" rel="noopener" title="开发者个人账号">@GGock</a></li>
<li>邮箱：<a href="&#x6d;&#x61;&#105;&#108;&#116;&#111;&#58;&#x68;&#117;&#x73;&#x74;&#x67;&#x6f;&#99;&#107;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;">&#x68;&#117;&#x73;&#x74;&#x67;&#x6f;&#99;&#107;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;</a></li>
</ul>
<hr>
<p>感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。</p>
<blockquote id="fn_demo">
<sup>demo</sup>. 这是一个示例脚注。请查阅 <a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes" target="_blank" rel="noopener">MultiMarkdown 文档</a> 关于脚注的说明。 <strong>限制：</strong> 印象笔记的笔记内容使用 <a href="https://dev.yinxiang.com/doc/articles/enml.php" target="_blank" rel="noopener">ENML</a> 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致<code>脚注</code>和<code>TOC</code>无法正常点击。<a href="#reffn_demo" title="Jump back to footnote [demo] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>无公网IP搞定群晖：ZEROTIER ONE实现内网穿透</title>
    <url>/2018/08/07/%E6%97%A0%E5%85%AC%E7%BD%91IP%E6%90%9E%E5%AE%9A%E7%BE%A4%E6%99%96/</url>
    <content><![CDATA[<p>ZEROTIER ONE服务搞定内网穿透访问<a id="more"></a></p>
<p>利用ZEROTIER ONE点对点技术搞定内网穿透访问群晖。<!--more--></p>
<p>本文转自<a href="https://post.smzdm.com/p/741270/" target="_blank" rel="noopener">https://post.smzdm.com/p/741270/</a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近刚开始折腾<a href="https://pinpai.smzdm.com/2315/" target="_blank" rel="noopener">群晖</a>，从5.2到6.0再到5.2再到6.1，期间过程曲折复杂，血泪交融，参考了无数文章，重启了无数次机器，拷贝了无数文件，以及损失了无数数据。再次提醒大家，数据一定要做好备份，一定要备份。不能有侥幸心理。还好基本都有备份，只是分布在各个公共网盘上，找起来特别麻烦，这也是想要搭建一个私有云的最初动因。</p>
<p>搜索学习过程中发现网上关于群晖的文章很多很多，但叙述详尽对学习者非常有用的文章大部分都在张大妈这里，所以把自己第一篇原创也发在张大妈。</p>
<h2 id="搭建群晖"><a href="#搭建群晖" class="headerlink" title="搭建群晖"></a>搭建群晖</h2><p>怎么搭建基本的群晖系统，已经有很多文章，就不再详细叙述。</p>
<p>简单说一下我自己的最终方案，是在一台sony笔记本上搭建了6.1.4系统，然后升级到了6.1.7。i5迅驰cpu，512G硬盘，8G内存，光盘位换成了ssd硬盘，这样一共512G+512G=1T空间。原本想用一台十年前的<a href="https://www.smzdm.com/fenlei/taishiji/" target="_blank" rel="noopener">台式机</a>来搭，但是安装6.x的系统一直出错，安装5.2然后尝试升级到6也失败了（数据也丢了），参考了很多文章之后结论是主板不支持，于是最终放弃了。</p>
<p>搭好的系统如下，内网IP 192.168.x.x</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153z4p51wj20go03ddgu.jpg" alt=""></p>
<p>在内网把一些基本功能玩了一遍之后，自然就有了在外网访问这台群晖的需求。一样也是查阅了无数文章，研究了无数个方案，最终试验成功用ZeroTier实现了内网穿透，实现在外网访问家里的这台群晖系统。</p>
<h2 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h2><h3 id="为什么是Zerotier-One"><a href="#为什么是Zerotier-One" class="headerlink" title="为什么是Zerotier One"></a><strong>为什么是Zerotier One</strong></h3><p>要想外网/公网上访问家里的群晖，大致方案有两个：一个是动态域名+公网IP+端口映射。相关文章也很多，限于本文主题就不涉及了。另一个就是内网穿透了，网上常见的方案有很多，比如frp，ngrok，n2n等等，说实话都是没听过的名字（虽然算是相关专业从业人员，但也是很久没有折腾各种黑科技了）。</p>
<p>由于之前有使用hamachi的经验，所以第一个念头就是使用hamachi，搜了一圈发现这个软件已经淡出市场了，而且好像还在墙外，于是就放弃了，不禁还有些唏嘘。搜索新近的方案，如上述那些一看到要搭建各种<a href="https://www.smzdm.com/fenlei/fuwuqi/" target="_blank" rel="noopener">服务器</a>就本能的孩怕，没有去仔细研究了。</p>
<p>内心还是倾向于找类似hamachi的方案。也就是点对点vpn，只用安装客户端，就可以秒互联。因为我的主要需求是自己在外面拿个手机连自己家里的群晖，也不用对大众提供服务，所以这种点对点的方式最适合我。更重要的，我也并不希望家里的机器暴露在公网上，而基于vpn的方案恰好能提供这方面的安全性。这么一来就选中了ZeroTier。</p>
<h3 id="ZeroTier方案内网穿透原理"><a href="#ZeroTier方案内网穿透原理" class="headerlink" title="ZeroTier方案内网穿透原理"></a><strong>ZeroTier方案内网穿透原理</strong></h3><p>ZeroTier One的原理跟hamachi基本一样，就是虚拟出一块网卡，连上一个虚拟网络，安装了ZeroTier One客户端的设备可以连入这个网络，经过授权连接成功之后彼此都在同一网段，可以像在局域网一样互相访问，例如访问共享<a href="https://www.smzdm.com/fenlei/wenjianjia/" target="_blank" rel="noopener">文件夹</a>，web server，ftp server，联机游戏（例如打星际），当然也就包括访问群晖。所以如果你的群晖和你的手机连上了这个网络，不论两台设备具体在哪里，都像同一局域网内，从而实现内网穿透，达到从外网访问内网群晖的目的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g153zk53h6j20go05iwf9.jpg" alt=""></p>
<p><center>用画图画了个简陋的原理图</center><br>主机1可以是群晖主机，主机2可以是手机或平板。只要主机1和主机2都能连到互联网，安装上ZeroTier One的客户端后，就会在本机虚拟出一块网卡，并获得对应IP，图例中是172.28.x.x网段。经过网络所有人授权后（后面会详细讲解），这两个主机就可以通过172.28.x.x网段互相访问了，由于就像在局域网一样，所以基本没有任何限制，任何基于TCP/IP的网络服务都可以访问到，自然也就可以访问到群晖了。</p>
<p><em>注：图中省掉了公网IP，因为公网IP多少不重要，只要主机能上公网，能连上ZeroTier，就能获得172网段IP了，也就可以互联互通了。</em></p>
<h3 id="ZeroTier-One的优势"><a href="#ZeroTier-One的优势" class="headerlink" title="ZeroTier One的优势"></a><strong>ZeroTier One的优势</strong></h3><p>相比其他流行方案，ZeroTier One有这么几个优势：</p>
<ul>
<li>免费版支持客户端多。连入同一个网络的客户端不超过100个就都免费</li>
<li>速度快，p2p模式。客户端联通之后流量基本不经过服务端/superNode而是点对点传输，传输速度取决于你设备所在宽带上行带宽以及手机端4g上网的速度</li>
<li>管理配置简单。不要被全英文的界面吓到，明白原理之后安装配置极其简单</li>
</ul>
<p>最重要的是支持多种平台。支持win、mac、安卓、苹果，以及多种发型版Linux，比如群晖系统（这也是选择ZeroTier One的重要原因），如下图，可以下载spk文件直接在群晖中部署（<strong>这里有一个大坑，后面会说到</strong>）</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g15417fwaoj20go0brdjj.jpg" alt=""></p>
<p>ZeroTier 直接提供的群晖的安装版</p>
<h2 id="实际操作过程"><a href="#实际操作过程" class="headerlink" title="实际操作过程"></a>实际操作过程</h2><h3 id="1-申请网络"><a href="#1-申请网络" class="headerlink" title="1. 申请网络"></a><strong>1. 申请网络</strong></h3><p>前文提到安装好ZeroTier One后会虚拟出一块网卡，得到一个虚拟网络网段IP，那么如何让两台或者多台客户端连入同一虚拟网络呢，这就需要先申请一个虚拟网络了。事实上申请这个网络先于安装ZeroTier One的客户端，这是和hamachi不同的地方。</p>
<p>你需要在ZeroTier One网站注册一个账号，注册了账号即可获得这个虚拟网络，然后在网站的网页上即可管理访问权限，许可那些客户端可以访问你的虚拟网络。</p>
<p>由于ZeroTier 网站做的实在不太友好，尤其对英文不太好的同学来说简直就是灾难，所以这个部分会讲解的比较详细。不求甚解的话照做即可，不用去管网站上大量的英文说明信息。</p>
<p>首先访问<a href="https://www.zerotier.com/" target="_blank" rel="noopener">ZeroTier网站</a> ，如果你是百度搜ZeroTier，首先会访问到这里。是不是找不到创建账号的地方？然后往下拉就会越看越犯怵。不用看了，直接点击右上login，或者访问<a href="https://my.zerotier.com/login" target="_blank" rel="noopener">这里</a> </p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1541p98itj20go09p0uq.jpg" alt=""></p>
<p>创建账号</p>
<p>此时就会出现登录/注册页面，点击Create An Account（为了写这篇文章我创建了一个新的账号），到如下注册页面，填入邮箱，密码。点击创建账户(Create An Account按钮）。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154221ht2j20go09ktac.jpg" alt=""></p>
<p>之后会进入下图所示页面。什么都不用改，重点的两个信息我圈出来了：一个是你的内部ID(Internal ID，此例中是 f7578543-394a-489a-a7be-ef08d1850b75，基本用不到；另一个就是下面订阅选项，默认免费(Free)即可。免费的最多支持100个客户端，应该够用了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1542rb3gcj20go0gvn1e.jpg" alt=""></p>
<p><center>创建好账号</center><br>接下来直接点击最上面菜单中的Network，然后点击Create，即可创建前述之<strong>虚拟网络</strong>——也就是一串id号</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1543pswt5j20go0gvtb2.jpg" alt=""></p>
<p>创建虚拟网络</p>
<p>所谓ZeroTier网络/虚拟网络，就是后面你的群晖以及手机等设备要连入的虚拟网络。连到同一个网络的客户端互相可以直接访问。这一串数字id就是这个网络的本体，上面那个furious_rosenbaum是随机生成的网络名，用来描述网络，当你有多个网络的时候方便记忆和识别。</p>
<p><em>注：上图中右侧蓝色的数字即表示当前连入这个网络的客户端数量。新建网络没有客户端连接，所以是零。</em></p>
<p>点击My Networks，进入如下页面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1544ae2xkj20go0gv0uv.jpg" alt=""></p>
<p>理论上这里也是不用修改任何地方，几处重点信息也圈出来了：</p>
<ul>
<li>网络id就是这个网络的唯一标识，后面客户端要加入网络时就是填入这个id号；</li>
<li>访问控制(Access Control)默认私有，也就是需要授权才能访问（后面客户端安装配置的部分会讲）；</li>
<li>IP自动分配，也就是只要连入这个网络的客户端，自动获得此网段IP。</li>
</ul>
<p>此页面也是管理和监控页面，也就是后面添加或删除客户端，控制那些客户端能加入此网络都可以在此处完成。任何可以联网的设备只要有用户名和密码即可登录ZeroTier One，然后进入此页面对网络进行管理，比如手机，平板，从任何位置都可以访问管理。</p>
<p><em>注：所谓“客户端”即安装了ZeroTier One客户端软件的设备。本文到目前为止还没有涉及到客户端安装，也就是说，创建自己的帐号/创建虚拟网络不依赖于具体客户端设备或软件安装，以及之后的权限管理也都不涉及特定客户端，任何一个可以联网的系统都可以操作。这个在你实际使用之后会发现非常有用且方便</em></p>
<p>将页面拉到下面，圈出的部分便是监控和管理的主要操作区域。当前没有客户端连接的时候如下图</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1544sod4gj20go0gvwhy.jpg" alt=""></p>
<p><center>网络管理和监控</center><br>详细解释如下，因为刚刚创建网络还没有客户端加入，所以显示“No devices have joined  this network”，当有客户端加入之后便会在此处看到状态，离线，在线，离线时间等等；后面Manually Add Member就是加入其他成员，也就是一开始注册账号时，你得到的那个内部ID可以用来加入其他人创建的网络，或者邀请其他人加入你的网络。其他的部分都可以忽略掉，不用看，没用，越看越晕。</p>
<p><em>注：ZeroTier的世界主要有两个概念，一个是用户一个是网络，都是一串数字表示。一个用户可以加入多个网络，多个用户可以加入一个网络。在本文应用实例中，是只有一个人一个网络，所有的设备都是我用自己账号登录ZeroTier后加入自己的网络而连接在一起的。</em></p>
<h3 id="2-安装Windows客户端"><a href="#2-安装Windows客户端" class="headerlink" title="2.安装Windows客户端"></a><strong>2.安装Windows客户端</strong></h3><p>为了演示方便我先在PC电脑上下载ZeroTier的windows客户端安装，然后加入上面创建的网络。</p>
<p>回到ZeroTier网站顶端，点击最上面菜单第一项Download，进入下载页面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1545mksgvj20go0bbn17.jpg" alt=""></p>
<p>下载页面</p>
<p>找到windows客户端下载，点击ZeroTier One.msi下载安装文件到本地。大约12M</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g15462zo0jj20go04mjt2.jpg" alt=""></p>
<p>下载windows客户端</p>
<p>一路按默认设定安装即可（我只好又装了一遍）</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1546h904hj20dr0art99.jpg" alt=""></p>
<p>一路next即可</p>
<p>安装软件的过程可以看做往系统插了一张新网卡，并把网卡连了一根网线，此网线通往ZeroTier的专有网络，逻辑上独立于你当前局域网之外。如果弹出如下窗口，点击是。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1546tthfbj209n0dewes.jpg" alt=""></p>
<p>安装结束后可能会出现的提示，表示新建立了一个以太网口</p>
<p>然后查看系统设备会看到新出现的虚拟网卡ZeroTier One Virtual Port</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1547cc90uj20go0c7wh6.jpg" alt=""></p>
<p>安装后ZeroTier网卡出现在设备管理器中</p>
<p>安装好后，从菜单运行，不会出主程序窗口，而是在任务栏出现ZeroTier One的小图标，右键点击会出现弹出菜单，在此处点击Join Network…加入刚刚申请的网络</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1547ud2rdj20go0bxwoe.jpg" alt=""></p>
<p>加入网络</p>
<p><em>注：因为我这台Windows主机已经安装过ZeroTier One，所以已已经有节点信息，和曾经加入的网络(id号），为了安全起见就涂抹掉了（我尝试过卸载重装还是会有这些信息，暂时不管了），但不影响你加入新的网络。在此例中就是新申请的网络 1d7193*<strong>*</strong>63d387</em></p>
<p>点击 Join Network…会弹出一个小窗，填入新申请这个网络id号，再点击Join即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g15485chrgj20go06bq47.jpg" alt=""></p>
<p>加入网络</p>
<p>重点来了，此时回到<a href="https://my.zerotier.com/network#" target="_blank" rel="noopener">页面</a>  刷新一下（或者直接从客户端系统栏图标上右键点出菜单，点击<strong>“ZeroTier Central”</strong>进入此页面），将页面拉下来，此时就会看之前No Devices have joined this network的地方出现这个客户端，显示online</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1548iqr5xj20go0cbwgz.jpg" alt=""></p>
<p>客户端已经可见</p>
<p>但是别急，此时客户端并未连上这个虚拟网络，需要进一步授权。在此管理页面勾选前面的复选框（auth?列），此时这个客户端就终于连上这个网络了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1548tz2ymj20go0bi76q.jpg" alt=""></p>
<p>可以看到，勾选之后，左侧虚线变成了绿色实线，表示客户端已经连上这个网络(1d7193<strong>**</strong>63d387）。另外客户端在此虚拟网络中的IP也已经得到，为<strong>10.147.18.99</strong>。中间short name和description的部分，我也填入了相应短名称和描述，这样方便在多个客户端连入后，明确知道各个客户端分别是什么。这个很有用，整个ZeroTier世界里面全是数字，就靠这个描述和名称来标识各个客户端了。</p>
<p>在网页端授权之后，用ipconfig查看一下，这个IP就是网页上那个IP。</p>
<p><em>方法：win+r，输入cmd，出现命令行终端，打“ipconfig”回车即可看到当前系统的网络配置情况。</em></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154954xnij20go0aa76s.jpg" alt=""></p>
<p>查看本机IP,多了一个以太网2的连接</p>
<p>详细说明在Windows的安装过程是为了大家理解ZeroTier One客户端的工作原理，网页管理配置的方法。这样在群晖上安装时理解起来就简单了。</p>
<h3 id="3-在群晖上安装ZeroTier-One客户端"><a href="#3-在群晖上安装ZeroTier-One客户端" class="headerlink" title="3. 在群晖上安装ZeroTier One客户端"></a>3. 在群晖上安装ZeroTier One客户端</h3><p>前述内容虽然看起来复杂， 但是如果理解了再回头看就会觉得非常简单。</p>
<p>整个过程真正的难点是在群晖安装ZeroTier One 客户端。前面提到过，这里有一个大坑——<strong>找不到安装文件！！</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1549jc8cgj20go0brdjj.jpg" alt=""></p>
<p>ZeroTier One for 群晖的安装包</p>
<p>如果你点对应的按钮下载，会出现<strong>404错误</strong>。试了ZeroTier群晖下面所有的下载链接，全都是404</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1549qe9hxj20go03gq3n.jpg" alt=""></p>
<p>官网下载不到安装文件，接着用文件名全网搜也没有搜到别的下载源，这下就傻眼了。让我一度以为是不是ZeroTier也跟群晖闹翻了之类。把所有应用都下架了。。</p>
<p>万般无奈之下只好硬着头皮研究怎么直接在群晖上用源码编译，翻遍了git和zerotier的各种文档，反复尝试才知道，如果要编译，不能直接在群晖系统上操作，只能搭建专门的开发环境，需要自己装一个linux系统了。。</p>
<p>在这里卡了两天，付出时间精力最多，却没有什么可写的，因为</p>
<ol>
<li><p>尝试编译没有成功 </p>
</li>
<li><p>没有用不需要——误打误撞找到了这么个<a href="https://download.zerotier.com/RELEASES/" target="_blank" rel="noopener">页面</a> <img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g1549ymetuj20go084ta1.jpg" alt=""></p>
<p>然后奇迹出现了</p>
</li>
</ol>
<p>是不是很眼熟，当下的心情就是——那画面太美不敢看啊。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154aia1loj20go0cbn1e.jpg" alt=""></p>
<p>热泪盈眶啊</p>
<p>所有带syn字段,spk结尾的都是ZeroTier One 给群晖的安装包，有种老鼠掉进米缸的感觉了。</p>
<p>但是如何确定哪个版本还要费一点周折。方法一，可以在这个<a href="https://www.synology.com/en-us/knowledgebase/DSM/tutorial/General/What_kind_of_CPU_does_my_NAS_have" target="_blank" rel="noopener">平台支持列表</a>查询自己cpu类型，决定下载哪个版本。但在这个列表，我却找不到我笔记本i5 cpu对应的版本，所以用方法二：网上下一个putty.exe，然后ssh连到自己群晖的终端。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154as54dgj20go0g40wz.jpg" alt=""></p>
<p>启动putty</p>
<p>在hostname处输入群晖的IP，点击open。弹出窗口输入群晖用户名密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154b2sbj2j20go026mxj.jpg" alt=""></p>
<p>用户密码同群晖用户密码</p>
<p>登录后打命令uname -ar，就会出现cpu版本信息，大概长这样：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154bbmrn3j20go04xgn1.jpg" alt=""></p>
<p>查询cpu/系统版本号</p>
<p>这就很明显了，我这个安装在笔记本上的群晖6.1.7，是64位系统，bromolow的版本，下载<a href="https://download.zerotier.com/RELEASES/1.2.8/dist/zerotier-1.2.8r0-syn-bromolow-6.1.spk" target="_blank" rel="noopener">zerotier-1.2.8r0-syn-bromolow-6.1.spk</a>就可以了，这回终于没有404了，美滋滋啊。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154bnge37j20go04mjt2.jpg" alt=""></p>
<p>再发一遍就是图中这个东西，看到了吧。</p>
<p>在群晖端安装就相对简单了。登录DSM，打开套件中心，选择手动安装，找到刚刚下载的spk文件，点击下一步</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154c1wv35j20go0cbq5d.jpg" alt=""></p>
<p>手动安装</p>
<p>然后会出现ZeroTier One的版本信息</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154cfgwh0j20go0bi0v0.jpg" alt=""></p>
<p>因为我系统里早已安装了ZeroTier One的套件，所以这几步只是演示，可能和第一次安装界面稍有不同。安装过程大约几分钟。安装完成后可以在主菜单找到，点击运行。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154cor5izj20go0cbgo1.jpg" alt=""></p>
<p>运行后主界面</p>
<p>运行后主界面基本没有内容， 唯一的操作就是在右下角[Network ID]填入网络id号，然后点击join。</p>
<p>加入后，刷新<a href="https://my.zerotier.com/network/" target="_blank" rel="noopener">ZeroTier</a> 点击网络id进入管理页面</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154cy2m9bj20go0bidij.jpg" alt=""></p>
<p>客户端已上线</p>
<p>和第一个windows客户端一样，可以看群晖的ZeroTier One客户端已经在线online，但未授权，左侧为虚线。点击复选框勾选授权，此时群晖连入虚拟网络</p>
<p><em>提示: “在线”(“online”)的意思就是客户端那一侧ZeroTier One软件已经启动正常运行，在ZeroTier网络上可以看到这个客户端；”授权”是指客户端能不能连入当前这个网络，默认是”未授权”(“Not Authorized”)状态，需要网络所有者(即创建相应网络的注册账号，此账号登录ZeroTier后才能访问此页面)授权——勾选左边的复选框</em></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154d75hndj20go0cajua.jpg" alt=""></p>
<p>群晖客户端上线入网</p>
<p>同Windows客户端一样，给群晖客户端填入短名称DSM home表示是家中的群晖主机，在描述中输入Synoloty DSM host，这个可以随便写，只要自己看了知道是那台机器就行。</p>
<p>授权之后群晖就应该已经介入此虚拟网，在PC端打开cmd，命令行ping一下看通了没有。如ZeroTier管理页面所示群晖的ZeroTier网IP是10.147.18.172</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154dl87luj20go045ta1.jpg" alt=""></p>
<p>ping值很低，可见链路没有经过服务端，两台机器是直接交换数据的（基于ZeroTier那个虚拟网卡）</p>
<p>在此虚拟网测试下群晖，访问10.147.18.172:5000</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154dunnpoj20go0bjwji.jpg" alt=""></p>
<p>登录后一切正常</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154e3dlubj20go0bidl7.jpg" alt=""></p>
<p>正如前面反复提到，连上ZeroTier One的虚拟网络（加入同一个网络id)后，经过拥有者授权，所有客户端就像在一个局域网里，所有的端口都是开放可以互相访问的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154ee54p9j20go0bi43x.jpg" alt=""></p>
<p>https可以访问</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154epimgqj20go0cbn42.jpg" alt=""></p>
<p>Photo Station可访问</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154gy43f1j20go0bj7bg.jpg" alt=""></p>
<p>Video Station可访问</p>
<h2 id="外网连接测试"><a href="#外网连接测试" class="headerlink" title="外网连接测试"></a>外网连接测试</h2><p>上面的测试虽然走的ZeroTier网络，但是Windows主机和群晖主机实际都在同一内网。所以还需要测试真正外网连接。模拟在外面用手机连接家里的群晖，看ZeroTier One的内网穿透是否真正实现。</p>
<h3 id="手机端安装ZeroTier-One客户端"><a href="#手机端安装ZeroTier-One客户端" class="headerlink" title="手机端安装ZeroTier One客户端"></a>手机端安装ZeroTier One客户端</h3><p>推荐用苹果，安卓系统正常安装流程需要访问google play。为了测试两个系统都安装，现在用安卓系统演示。</p>
<p>在手机上安装ZeroTier One安卓客户端，装好之后大概这个样子</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154h8f8uaj20go0tndlk.jpg" alt=""></p>
<p>我是科学上网用google play安装的</p>
<p>用google play装，启动之前先把手机wifi关掉，使用数据上网</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154hk1f0mj20go0tnwj4.jpg" alt=""></p>
<p>启动ZeroTier One应用，点击主界面上方的加号，出现如下界面。输入网络id号，点击Add Network</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154huya6mj20go0tn412.jpg" alt=""></p>
<p>运行ZeroTier One App</p>
<p>回到主界面会看到新添加的网络。上面那个网络是我之前创建的，也是我实际在用的，暂时可以忽略掉。</p>
<p>下面是今天新申请的用来做演示的网络，现在加入的是这个网络。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154i8emmhj20go0tngoc.jpg" alt=""></p>
<p>点击开关打开网络</p>
<p>点击网络id号右下的小开关，会弹出创建VPN连接请求，确认即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154im2h8kj20go0tnn1c.jpg" alt=""></p>
<p>手机端的ZeroTier One 安装配置就完成了，接着在网页管理端授权这个客户端使之最终连入虚拟网络。</p>
<h3 id="管理页面配置让手机连入虚拟网络"><a href="#管理页面配置让手机连入虚拟网络" class="headerlink" title="管理页面配置让手机连入虚拟网络"></a>管理页面配置让手机连入虚拟网络</h3><p>打开<a href="https://my.zerotier.com/network/1d7193940463d387" target="_blank" rel="noopener">https://my.zerotier.com/network/1d71<strong>*</strong>387</a>  刷新，会看到新的手机客户端已经上线，但未被授权。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154ixkofpj20go0bbdiv.jpg" alt=""></p>
<p>手机客户端已成功运行</p>
<p>如法炮制，给手机客户端授权，并输入短名称和描述。勾选授权之后，刷新网页如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154j6g9zxj20go0cbgpd.jpg" alt=""></p>
<p>将手机客户端授权连入ZeroTier网络</p>
<p><em>提示: 随着客户端增多，就能发现短名称和描述的作用。在这个页面通过名称和描述就能很清楚分辨各个客户端是什么。不然对着一串数字很容易搞不清楚谁是谁了。</em></p>
<p>此时手机、群晖、Windows电脑就像连入同一个<a href="https://www.smzdm.com/fenlei/luyouqi/" target="_blank" rel="noopener">路由器</a>wifi下，各自的IP都都在网段10.147.18.*。</p>
<h3 id="测试手机从外网连接家里的群晖"><a href="#测试手机从外网连接家里的群晖" class="headerlink" title="测试手机从外网连接家里的群晖"></a>测试手机从外网连接家里的群晖</h3><p>此时人和手机物理上仍然是在家里，但因为手机已经断开家里的宽带，使用数据上网，所以场景等同于手机现在是从外网对家里的群晖进行连接。可以看到手机端已经连上了VPN，打开群晖官家，添加现有设备，即家里的群晖。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154jf8tkwj20go0tn40c.jpg" alt=""></p>
<p> 群晖管家测试连接</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154jsmtfkj20go0tnabr.jpg" alt=""></p>
<p>小提示要输入端口号</p>
<p>连接群晖</p>
<p>输入正确地址端口用户密码，点登录后很快就连上了</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154kfzed4j20go0tn41m.jpg" alt=""></p>
<p>登录(穿透)成功</p>
<p>切换到桌面模式可以看到更详细状态。DSM mobile中点击齿轮图标，选择桌面模式</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154l5fm1qj20go0tnta2.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154lqahn7j20go0tn7gr.jpg" alt=""></p>
<p>可以看到各个套件</p>
<p>至此已经证明穿透成功，从外网通过ZeroTier的虚拟网络连上了家里的群晖。</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>第一次发文，没想到写了这么多，写了这么久。一张图一张图的改上传，还老传错，最后花了近八个小时才算基本完成。如果用过softether VPN或者hamachi玩过联网游戏（年龄暴露），那么应该很快可以上手ZeroTier One，基本原理完全一样，ZeroTier的改进是管理虚拟网络是独立于客户端的，可以完全通过网页完成。安装好之后，所有客户端都加入同一个网络id，则如同连入同一个路由器，处于同一个局域网。那么互相访问就跟在局域网一样，在外连接群晖就跟在家连接一样了，只需要通过ZeroTier网络里的IP连接即可。至于其他几种方案，frp，ngrok等，只是看了下文章，没有实际使用所以也不能评判好坏。如果只是从文章的描述来看，个人更倾向于ZeroTier，最大的两个优点，一是不用搭建服务器，二是有一定安全防护机制，一定要虚拟网络拥有者授权，新的客户端才能连入网络。</p>
<p>整个过程看起来很复杂， 理解之后应该很简单。真正的大坑是ZeroTier 官网的spk文件下载链接不对，导致没有安装文件安装。幸好误打误撞找到了文件，spk手动安装还是很顺利的。</p>
<p>补充：</p>
<p>群晖端在DSM里面起ZeroTier One可能起不来，或者加入网络加入不了，点击没反应。可能是跟我切换了网络有关。解决办法是通过putty连接到终端，然后再执行命令行命令离开原有网络加入新网络即可。加入成功后网页管理端就能看到新的客户端。授权时候群晖就连入你创建的ZeroTier的网络了</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/71717971ly1g154m0dbw4j20go0ajtch.jpg" alt=""></p>
<p>通过命令行启动ZeroTier One 群晖客户端</p>
<p><strong>总算写完了，谢谢大家。第一次写文难免会有疏漏，欢迎大家指正。有任何问题也可以在评论提出，会尽力回答。</strong></p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>群晖</tag>
      </tags>
  </entry>
  <entry>
    <title>内网穿透利器Frp一键安装脚本及设置教程</title>
    <url>/2018/07/02/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%88%A9%E5%99%A8Frp%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%E5%8F%8A%E8%AE%BE%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>本文介绍内网穿透方案FRP，解决通过VPS服务器访问没有公网的内网服务。<a id="more"></a></p>
<blockquote>
<p>  本处高能：因Frp作者更换新的模块，导致Frp v0.18.0与之前的版本不兼容，如果升级请服务器端同步升级。</p>
</blockquote>
<h2 id="升级命令："><a href="#升级命令：" class="headerlink" title="升级命令："></a>升级命令：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;clangcn&#x2F;onekey-install-shell&#x2F;master&#x2F;frps&#x2F;install-frps.sh -O .&#x2F;install-frps.sh</span><br><span class="line">bash install-frps.sh update</span><br></pre></td></tr></table></figure>
<p>首先感谢@sadoneli S大的帮助完成了frp插件web页面的制作。</p>
<p>WARNING：请仔细阅读完本教程1楼和2楼后再动手安装！</p>
<p>frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。</p>
<p>*因为frp是go语言写的，所以在路由器上使用的时候，</p>
<p>请使用虚拟内存，请使用虚拟内存，请使用虚拟内存。</p>
<p>脚本是业余爱好，英文属于文盲，写的不好，欢迎您批评指正。</p>
<p>安装平台：CentOS、Debian、Ubuntu。</p>
<p>已测试过的平台：</p>
<blockquote>
<p>CentOS 6 32/64bit<br>CentOS 7 32/64bit<br>Debian 6 32/64bit<br>Debian 7 32/64bit<br>Debian 8 32/64bit<br>Ubuntu 14 32/64bit</p>
</blockquote>
<h2 id="一、安装命令"><a href="#一、安装命令" class="headerlink" title="一、安装命令"></a>一、安装命令</h2><p>这个命令是在你自己的服务器上运行的！是在你自己的服务器上运行的！是在你自己的服务器上运行的！不是在路由器里运行的！不是在路由器里运行的！不是在路由器里运行的！</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;clangcn&#x2F;onekey-install-shell&#x2F;master&#x2F;frps&#x2F;install-frps.sh -O .&#x2F;install-frps.sh</span><br><span class="line">chmod 700 .&#x2F;install-frps.sh</span><br><span class="line">.&#x2F;install-frps.sh install</span><br></pre></td></tr></table></figure>
<h2 id="二、安装步骤"><a href="#二、安装步骤" class="headerlink" title="二、安装步骤"></a>二、安装步骤</h2><blockquote>
<p>Loading network version for frps, please wait…<br>frps Latest release file frp_0.8.1_linux_amd64.tar.gz    #此步骤会自动获取frp最新版本，自动操作，无需理会<br>Loading You Server IP, please wait…<br>You Server IP:12.12.12.12                                           #自动获取你服务器的IP地址<br>Please input your server setting:</p>
<p>Please input frps bind_port <a href="Default Server Port: 5443">1-65535</a>:      #输入frp提供服务的端口，用于服务器端和客户端通信<br>Please input frps dashboard_port <a href="Default dashboard_port: 6443">1-65535</a>: #输入frp的控制台服务端口，用于查看frp工作状态<br>Please input frps vhost_http_port <a href="Default vhost_http_port: 80">1-65535</a>:  #输入frp进行http穿透的http服务端口<br>Please input frps vhost_https_port <a href="Default vhost_https_port: 443">1-65535</a>: #输入frp进行https穿透的https服务端口<br>Please input privilege_token (Default: WEWLRgwRjIJVPx2kuqzkGnvuftPLQniq): #输入frp服务器和客户端通信的密码，默认是随机生成的<br>Please input frps max_pool_count <a href="Default max_pool_count: 50">1-200</a>:     #设置每个代理可以创建的连接池上限，默认50</p>
<p>##### Please select log_level #####<br>1: info<br>2: warn<br>3: error<br>4: debug<br>#####################################################<br>Enter your choice (1, 2, 3, 4 or exit. default [1]):        #设置日志等级，4个选项，默认是info</p>
<p>Please input frps log_max_days [1-30]<br>(Default log_max_days: 3 day):            #设置日志保留天数，范围是1到30天，默认保留3天。</p>
<p>##### Please select log_file #####<br>1: enable<br>2: disable<br>#####################################################<br>Enter your choice (1, 2 or exit. default [1]):      #设置是否开启日志记录，默认开启，开启后日志等级及保留天数生效，否则等级和保留天数无效</p>
</blockquote>
<p>设置完成后检查你的输入，如果没有问题按任意键继续安装</p>
<blockquote>
<p>============== Check your input ==============<br>You Server IP   : 12.12.12.12<br>Bind port       : 5443<br>Dashboard port  : 6443<br>vhost http port : 80<br>vhost https port: 443<br>Privilege token : WEWLRgwRjIJVPx2kuqzkGnvuftPLQniq<br>Max Pool count  : 50<br>Log level       : info<br>Log max days    : 3<br>Log file        : enable</p>
</blockquote>
<p>安装结束后显示：</p>
<blockquote>
<h1 id="Congratulations-frps-install-completed"><a href="#Congratulations-frps-install-completed" class="headerlink" title="Congratulations, frps install completed!"></a>Congratulations, frps install completed!</h1><p>You Server IP   : 12.12.12.12<br>Bind port       : 5443<br>Dashboard port  : 6443<br>vhost http port : 80<br>vhost https port: 443<br>Privilege token : WEWLRgwRjIJVPx2kuqzkGnvuftPLQniq<br>Max Pool count  : 50<br>Log level       : info<br>Log max days    : 3<br>Log file        : enable           #  将上面信息添加到你的路由器frp穿透插件中吧<br>frps Dashboard: <a href="http://12.12.12.12:6443/" target="_blank" rel="noopener">http://12.12.12.12:6443/</a>   #  这个是frp控制台访问地址</p>
</blockquote>
<h2 id="三、更新命令"><a href="#三、更新命令" class="headerlink" title="三、更新命令"></a>三、更新命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;install-frps.sh update</span><br></pre></td></tr></table></figure>
<h2 id="四、卸载命令"><a href="#四、卸载命令" class="headerlink" title="四、卸载命令"></a>四、卸载命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;install-frps.sh uninstall</span><br></pre></td></tr></table></figure>
<h2 id="五、服务器端管理命令"><a href="#五、服务器端管理命令" class="headerlink" title="五、服务器端管理命令"></a>五、服务器端管理命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;frps start</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;frps stop</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;frps restart</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;frps status</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;frps config</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;frps version</span><br></pre></td></tr></table></figure>
<h2 id="六、路由器端配置："><a href="#六、路由器端配置：" class="headerlink" title="六、路由器端配置："></a>六、路由器端配置：</h2><p><img src="http://image.koolshare.cn/attachment/forum/201610/04/092323ty33ye3qjg4qj0na.png" alt="img"></p>
<h2 id="七、更多帮助请移步官方帮助文件"><a href="#七、更多帮助请移步官方帮助文件" class="headerlink" title="七、更多帮助请移步官方帮助文件"></a>七、更多帮助请移步官方帮助文件</h2><p><a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/fatedier/frp/blob/master/README_zh.md</a></p>
<p>================================分割线================================</p>
<p>有一些牛逼的坛友家里的路由器具备公网IP地址，想用路由器来运行frp的服务器，根据需求，简单的弄了个frp服务器版，请一定开启虚拟内存，能不能挺住我不知道，自己测试吧。两种安装方式：</p>
<p>请注意，这个是ARM版本的frps，这个是ARM版本的frps，这个是ARM版本的frps</p>
<p>一、路由器固件7.0以上版本</p>
<p>通过软件中心-离线安装 进行安装插件</p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>Python环境变量PYTHONPATH设置导入第三方模块</title>
    <url>/2018/03/06/Python%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8FPYTHONPATH%E8%AE%BE%E7%BD%AE%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<p>使用python编程时常会用到第三方模块，默认的sys.path并不包含模块路径，本文介绍如何手动添加。<a id="more"></a></p>
<h1 id="1-暂时设置模块的搜索路径——修改sys-path"><a href="#1-暂时设置模块的搜索路径——修改sys-path" class="headerlink" title="1.暂时设置模块的搜索路径——修改sys.path"></a>1.暂时设置模块的搜索路径——修改sys.path</h1><p>我们在导入模块的时候，python会在指定的路径下搜索相对应的.py文件，搜索路径存放在sys模块的sys.path变量中，如下图</p>
<p><img src="https://s2.ax1x.com/2019/01/17/kpm4x0.png" alt="img"></p>
<p>这个path变量是一个列表，因此我们可以通过append函数在其后添加搜索路径，如果我们要导入的第三方模块的路径是’D:\Users’,那在python解释器中添加sys.path.append(‘D:\\Users’),注意为什么我这里是’\\’,因为我这里的sys.path变量里的格式是’\\’,根据自己sys.path变量里的格式来，设置好以后可以查看一下，如下图：</p>
<p><img src="https://s2.ax1x.com/2019/01/17/kpmfGn.png" alt="img"></p>
<p>添加好路径以后就可以导入你要导入的模块了，但是这种方法只是暂时的，下次你再进入交互模式的时候又得重新设置。是不是很麻烦？</p>
<h1 id="2-永久设置模块的搜索路径——设置PYTHONPATH环境变量"><a href="#2-永久设置模块的搜索路径——设置PYTHONPATH环境变量" class="headerlink" title="2.永久设置模块的搜索路径——设置PYTHONPATH环境变量"></a>2.永久设置模块的搜索路径——设置PYTHONPATH环境变量</h1><p>  网上的大佬们写的设置PYTHONPATH环境变量，我一直没读懂到底是怎么设置的，直到刚刚偶然的机会，看到一个外国友人的回答，原来是这样啊！是我自己想复杂了，其实就是添加一个名为PYTHONPATH的系统环境变量。</p>
<p>  右击【我的电脑】-【属性】-【高级系统设置】-【环境变量】-【新建】，变量名写PYTHONPATH，变量值就是你要导入模块的路径了，以后还要导入其他模块，就继续在后面添加路径，至此，已经设置好了。</p>
<p><img src="https://s2.ax1x.com/2019/01/17/kpmh2q.png" alt="img"></p>
<p><img src="https://s2.ax1x.com/2019/01/17/kpmWPs.png" alt="img"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>VMWare虚拟机安装黑群晖</title>
    <url>/2018/02/23/VMWare%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E9%BB%91%E7%BE%A4%E6%99%96/</url>
    <content><![CDATA[<p>我用黑群晖也有好几个月了，从5.x 到 6.0 再到 6.1.2（现在是这个）一直正常使用。</p>
<p>最新版本是6.1.3，除了解决一些漏洞，并没有什么功能性内容，所以依然保持6.1.2没有升级。</p>
<p>估计现在大部分人使用的群晖引导应该都是在网站 <a href="http://xpenology.com/forum/" target="_blank" rel="noopener">http://xpenology.com/forum/ </a>（需要出国）下载的 DS3617xs 6.1 Jun’s Mod V1.02b.img（目前最新版本，支持6.1.3）<a id="more"></a></p>
<h1 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h1><p>下载：</p>
<h2 id="a-DS3617xs-6-1-Jun’s-Mod-V1-02b-img"><a href="#a-DS3617xs-6-1-Jun’s-Mod-V1-02b-img" class="headerlink" title="a) DS3617xs 6.1 Jun’s Mod V1.02b.img"></a>a) DS3617xs 6.1 Jun’s Mod V1.02b.img</h2><p>地址：<a href="https://xpenology.com/forum/topic/6253-dsm-6xx-loader/" target="_blank" rel="noopener">https://xpenology.com/forum/topic/6253­dsm­6xx­loader/</a></p>
<p>直达(需要出国)：<a href="https://mega.nz/#F!XRhniTSJ!VH8B1I8Db3y8YkCnT4j2VA" target="_blank" rel="noopener">https://mega.nz/#F!XRhniTSJ!VH8B1I8Db3y8YkCnT4j2VA</a> </p>
<h2 id="b-DSM-DS3617xs-15152-pat"><a href="#b-DSM-DS3617xs-15152-pat" class="headerlink" title="b) DSM_DS3617xs_15152.pat"></a>b) DSM_DS3617xs_15152.pat</h2><p>地址：群晖官网 <a href="https://www.synology.cn/zh-cn/support/download/DS3617xs#utilities" target="_blank" rel="noopener">https://www.synology.cn/zh­cn/support/download/DS3617xs#utilities</a></p>
<p>直<a href="https://cndl.synology.cn/download/DSM/release/6.1.3/15152/DSM_DS3617xs_15152.pat" target="_blank" rel="noopener">达：https://cndl.synology.cn/download/DSM/release/6.1.3/15152/DSM_DS3617xs_1</a> <a href="https://cndl.synology.cn/download/DSM/release/6.1.3/15152/DSM_DS3617xs_15152.pat" target="_blank" rel="noopener">5152.pat</a></p>
<h2 id="c-Roadkil’s-DiskImage"><a href="#c-Roadkil’s-DiskImage" class="headerlink" title="c) Roadkil’s DiskImage"></a>c) Roadkil’s DiskImage</h2><p>地址：<a href="http://www.bkill.com/download/33717.html" target="_blank" rel="noopener">http://www.bkill.com/download/33717.html</a></p>
<h1 id="2、制作引导启动盘"><a href="#2、制作引导启动盘" class="headerlink" title="2、制作引导启动盘"></a>2、制作引导启动盘</h1><p>制作虚拟硬盘VHD，然后写入img到VHD完成引导盘的制作。</p>
<h2 id="a-创建虚拟磁盘"><a href="#a-创建虚拟磁盘" class="headerlink" title="a)   创建虚拟磁盘"></a>a)   创建虚拟磁盘</h2><p>打开cmd命令窗口，按如下命令步骤操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">diskpart</span><br><span class="line">create vdisk file&#x3D;F:\synoboot.vhd maximum&#x3D;256 type&#x3D;expandable</span><br><span class="line">attach vdisk</span><br><span class="line">create partition primary</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<p>这几个命令就可以了，不要自作聪明给这个盘进行格式化，如下图所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155310_79766.jpg" alt=""></p>
<p>此时你可以打开磁盘管理，确认看到创建的这个虚拟磁盘，如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155310_68060.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155310_45581.jpg" alt=""></p>
<p>这个时候，你在“我的电脑”里面是看不到这个盘的，再重申一下，不需要给这个盘格式化，也不需要分配盘符（因为完全不需要）。</p>
<h2 id="b-写入img文件到虚拟磁盘，完成黑群晖启动引导的制作"><a href="#b-写入img文件到虚拟磁盘，完成黑群晖启动引导的制作" class="headerlink" title="b)   写入img文件到虚拟磁盘，完成黑群晖启动引导的制作"></a>b)   写入img文件到虚拟磁盘，完成黑群晖启动引导的制作</h2><p>使用工具 Roadkil’s DiskImage 将文件 DS3617xs 6.1 Jun’s Mod V1.02b.img 写入到刚刚创建的虚拟磁盘中。</p>
<p>步骤如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155310_67701.jpg" alt=""></p>
<p>映像档选择我们的 img 文件即可，点击开始按钮完成写入。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155310_75713.jpg" alt=""></p>
<p>PS：如果你是要在实体机中安装黑群晖，可以用同样的方法将img文件写入到U盘（注意驱动器选择对应的U盘）中即可使用。然后将U盘插入到主机上，开机启动设置U盘启动，就可以正常安装黑群晖。</p>
<h2 id="c-分离虚拟磁盘"><a href="#c-分离虚拟磁盘" class="headerlink" title="c)   分离虚拟磁盘"></a>c)   分离虚拟磁盘</h2><p>在磁盘管理界面里，鼠标右键点击刚刚创建的虚拟磁盘，然后执行 “分离VHD”，将该虚拟磁盘分离掉。</p>
<p>此时你可以到硬盘中将该文件 “synoboot.vhd” 随意拷贝传播给朋友、备份，当然也可以直接删除掉。</p>
<p>如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155310_54886.jpg" alt=""></p>
<p>至此，我们的黑群晖引导盘制作完成。</p>
<h1 id="3、创建VMWare虚拟机"><a href="#3、创建VMWare虚拟机" class="headerlink" title="3、创建VMWare虚拟机"></a>3、创建VMWare虚拟机</h1><p>请使用 vmware 12.5.2 以后的版本（我使用的是12.5.7），因为之前的版本不支持虚拟磁盘。</p>
<p>步骤我已经每一步都截图记录下来，看下面的图片按步骤操作：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155310_70870.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_79257.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_96053.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_52740.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_30213.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_31381.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_57043.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_86231.jpg" alt=""></p>
<p>点击完成，创建完成，下图为创建的虚拟机信息</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_94420.jpg" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_72850.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_67619.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155311_20507.jpg" alt=""></p>
<p>完成后，如下图可以看到2个磁盘文件了：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_82046.jpg" alt=""></p>
<p>网络驱动器请自行根据自己实际情况设置，下图是我的设置，虚拟机的IP地址和主机在同一个网段，走的主网卡桥接的：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_70979.jpg" alt=""></p>
<p>注意：虚拟磁盘要在创建虚拟机的时候先指定，完成后再附加硬盘。如果你是在已创建好的虚拟机上添加的虚拟磁盘，那么要在虚拟机启动时的BIOS里面修改设置，变更这2个硬盘的启动顺序。或者你可以修改硬盘的SATA编号。（虚拟机启动时BIOS默认按SATA编号从小到大排列），编辑SATA序号的方法如下图所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_59889.jpg" alt=""></p>
<p>至此，虚拟机创建完成，万事俱备，下面就可以安装黑群晖。</p>
<h1 id="4、启动虚拟机安装黑群晖"><a href="#4、启动虚拟机安装黑群晖" class="headerlink" title="4、启动虚拟机安装黑群晖"></a>4、启动虚拟机安装黑群晖</h1><p> 如下图，开启此虚拟机：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_93355.jpg" alt=""></p>
<p>然后是短暂的等待后，你就可以看到下面截图的屏幕，中间你不需要做任何操作：</p>
<p> 如果你看到这个提示，直接选 “否” 忽略即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_17731.jpg" alt=""><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_47476.jpg" alt=""></p>
<p>这个时候，你可以在打开浏览器，输入 <a href="http://find.synology.com/" target="_blank" rel="noopener">http://find.synology.com </a>，如果你的虚拟机网段和主机是同一个网段，使用这个网址是可以直接获取到我们将要安装的群晖的。你也可以使用群晖官方提供的 “群晖助手” 来安装群晖（这个工具很简单，这里不做赘述）</p>
<p> <a href="https://www.synology.cn/zh-cn/support/download/DS3617xs#utilities" target="_blank" rel="noopener">群晖助手官方下载地址：https://www.synology.cn/zh-cn/support/download/DS3617xs#utilities</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_71739.jpg" alt=""></p>
<p>下面是使用访问 <a href="http://find.synology.com/" target="_blank" rel="noopener">http://find.synology.com </a>的方式安装群晖的步骤截图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_79528.jpg" alt=""></p>
<p>虚拟机的IP地址，网卡信息都显示出来了，点击 “联机” 继续，然后继续下一步到下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_59216.jpg" alt=""></p>
<p>选择 “手动安装” ，浏览我们下载好的系统文件 DSM_DS3617xs_15152.pat，然后执行 “立即安装”</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_65894.jpg" alt=""></p>
<p>确定后继续，然后就是等待，你可以泡上一杯咖啡慢慢等待。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_75669.jpg" alt=""></p>
<p>后续步骤按提示操作即可，其中有一步让你输入群晖账户的，这个地方点击下面的“跳过此步骤” 即可，其他没有什么特别要说明的，最后群晖就安装完成了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wuxiaoxiong1990/pic/img/20181116155312_15662.jpg" alt=""></p>
<p>看到很多人都在要别人做好的虚拟机文件，其实你更应该思考别人的这个文件是如何做的。这样以后便不用求人。</p>
<p>出了新版的群晖后，能否升级？心里还是空空的。保险一点就是在虚拟机上安装一下最新版的群晖系统（如果直接安装最新版你还不放心，你可以安装你现在实体机上的版本，然后进入系统后进行升级到新版）。如果正常，则可以对实体机进行升级。</p>
]]></content>
      <categories>
        <category>NAS</category>
      </categories>
      <tags>
        <tag>群晖</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在Vultr中添加SWAP交换分区</title>
    <url>/2017/12/13/%E5%A6%82%E4%BD%95%E5%9C%A8Vultr%E4%B8%AD%E6%B7%BB%E5%8A%A0SWAP%E4%BA%A4%E6%8D%A2%E5%88%86%E5%8C%BA/</url>
    <content><![CDATA[<p>Vultr 和DigitalOcean 的VPS 主机在开新方案后，预设置是不会有swap 交换分区，不像Linode 在管理后台Rebuild 时，就可以设置swap 分区大小。</p>
<a id="more"></a>
<p>swap 要设置多大，可以依以你的VPS RAM 来判断。</p>
<p>比如：1GB RAM 那你的swap 交换分区就可以设置1024MB，Vultr 768RM 方案，swap 可以设置512MB，一般最大可以设置到8GM。</p>
<p>不过我也碰过老外工程师设置过独服swap 交换分区32GB，可能认为我的HD 不用钱吧 !</p>
<p>如何手动添加swap 呢? ( CentOS / Ubuntu )</p>
<h4 id="检查Swap-空间"><a href="#检查Swap-空间" class="headerlink" title="检查Swap 空间"></a>检查Swap 空间</h4><p>在设置swap 文件之前，有必要先检查一下系统里有没有既存的swap 文件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">swapon -s</span><br></pre></td></tr></table></figure>
<p>如果返回的信息概要是空的，则表示swap 文件不存在。</p>
<h4 id="检查文件系统"><a href="#检查文件系统" class="headerlink" title="检查文件系统"></a>检查文件系统</h4><p>在设置swap 文件之前，同样有必要检查一下文件系统，看看是否有足够的硬碟空间来设置swap。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">df -hal</span><br></pre></td></tr></table></figure>
<p>检查返回的信息，还剩余足够的硬碟空间即可。</p>
<h4 id="创建swap"><a href="#创建swap" class="headerlink" title="创建swap"></a>创建swap</h4><p>下面使用dd 命令来创建swap 文件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;swapfile bs&#x3D;1024 count&#x3D;524288</span><br></pre></td></tr></table></figure>
<p>回覆讯息<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">524288+0 records in</span><br><span class="line">524288+0 records out</span><br><span class="line">536870912 bytes (537 MB, 512 MiB) copied, 2.2845 s, 235 MB&#x2F;s</span><br></pre></td></tr></table></figure></p>
<h4 id="格式化并启动swap"><a href="#格式化并启动swap" class="headerlink" title="格式化并启动swap"></a>格式化并启动swap</h4><p>上面已经创建好swap 文件，还需要格式化后才能使用。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkswap &#x2F;swapfile</span><br></pre></td></tr></table></figure><br>回覆讯息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Setting up swapspace version 1, size &#x3D; 512 MiB (536866816 bytes)</span><br><span class="line">no label, UUID&#x3D;b247ba10-f7cf-47b7-aa65-f69b2cfcc8fd</span><br></pre></td></tr></table></figure>
<h4 id="启动swap"><a href="#启动swap" class="headerlink" title="启动swap"></a>启动swap</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">swapon &#x2F;swapfile</span><br></pre></td></tr></table></figure>
<p>回覆讯息<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">swapon: &#x2F;swapfile: insecure permissions 0644, 0600 suggested.</span><br></pre></td></tr></table></figure><br>以上步骤做完，再一次运行命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">swapon -s</span><br></pre></td></tr></table></figure><br>回覆讯息<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Filename                Type        Size    Used    Priority</span><br><span class="line">&#x2F;swapfile               file        524284    0     -1</span><br></pre></td></tr></table></figure><br>如果要VPS主机重启的时候自动挂载swap ，那么还需要修改fstab配置。<br>用vim打开/ etc / fstab文件，在其最后添加如下一行：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;swapfile          swap            swap    defaults        0 0</span><br></pre></td></tr></table></figure></p>
<h4 id="最后，赋予swap-文件适当的权限："><a href="#最后，赋予swap-文件适当的权限：" class="headerlink" title="最后，赋予swap 文件适当的权限："></a>最后，赋予swap 文件适当的权限：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chown root:root &#x2F;swapfile</span><br><span class="line">chmod 0600 &#x2F;swapfile</span><br></pre></td></tr></table></figure>
<p>同时，我们还可以修改Linux swap空间的swappiness ，降低对硬碟的缓存。<br>Linux会使用硬碟的一部分做为swap分区，用来进行进程调度。</p>
<p>进程是正在运行的程序，把当前不用的进程调成「等待( standby )」，甚至「睡眠( sleep )」。</p>
<p>一旦要用，再调成「活动( active )」，睡眠的进程就会在swap 分区，把内存空出来让给「活动」的进程。</p>
<p>如果记忆体够大，应当告诉Linux 不必太多的使用swap 分区，可以通过修改swappiness 的参数来设置。</p>
<p>swappiness = 0 的时候表示最大限度使用物理内存，然后才是swap 空间。</p>
<p>swappiness = 100 的时候表示积极的使用swap 分区，并且把内存上的数据及时的搬运到swap 空间里面。</p>
<p>在CentOS 中，swappiness 的默认值是60。</p>
<p>通过以下命令可以看到：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness</span><br></pre></td></tr></table></figure><br>返回值60</p>
<p>我们可以调整swappiness 的值到一个合适的参数，从而达到最优化使用swap 的目的。</p>
<p>这里我们将其设为10。使用sysctl 命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysctl vm.swappiness&#x3D;10</span><br></pre></td></tr></table></figure><br>但是这只是临时性的修改，在你重启系统后会恢复默认的60，要永久设置，还需要在vim 中修改sysctl.conf：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;sysctl.conf</span><br></pre></td></tr></table></figure><br>在这个文档的最后加上这样一行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Search for the vm.swappiness setting.  Uncomment and change it as necessary.</span><br><span class="line">vm.swappiness&#x3D;10</span><br></pre></td></tr></table></figure>
<p>输入:qw，保存退出vim 。</p>
<p>这样一来，swap 分区重启后都会生效了。</p>
<p>补充swap file 计算方法：</p>
<p>建立512MB 的swap，一次读写1024bytes</p>
<p>bs=1024 count=524288 # 1024 * 512M = 524288 block size</p>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>交换分区</tag>
      </tags>
  </entry>
  <entry>
    <title>Nextcloud离线下载搭建方法</title>
    <url>/2017/09/26/Nextcloud%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>转自<a href="https://wzfou.com/" target="_blank" rel="noopener">挖站否</a></p>
<p>Nextcloud是一个非常优秀的私有云存储服务，利用官网提供的Snap安装Nextcloud方法，几乎可以几分钟内就可以搭建好Nextcloud云存储平台。Nextcloud提供了丰富的应用接口，不仅仅可以将Nextcloud当成是网盘使用，还可以在线查看文档、图片和播放视频音乐等。</p>
<a id="more"></a>
<p>因为<a href="https://wzfou.com/tag/nextcloud/" target="_blank" rel="noopener">Nextcloud</a>的强大功能，不少的朋友可能想到能不能利用Nextcloud来搭建一个离线下载平台。其实，作为Nextcloud的前身，OwnCloud就已经提供了离线下载的插件，只不过安装与配置起来比较复杂一些。到目前为止，Nextcloud暂未提供可供使用的离线下载工具。</p>
<p>不过，我们完全可以利用Aria2配合NextCloud实现离线下载存储与在线观看播放的效果。Aria2是一个非常优秀的支持多种协议的轻量级命令行下载工具，优点是：多线程连线充分利用带宽；运行时不会占用过多资源，通常在 4MB~9MB；全功能 BitTorrent 客户端； 支持 RPC 界面远程控制。</p>
<p><a href="https://wzfou.com/tag/ariang/" target="_blank" rel="noopener">AriaNg</a>就是一个是运行在服务端的Aria2前端管理工具，它可以不用Aria2命令就可以在网页上添加下载任务。当然，本篇文章还为大家介绍一种在本地安装<a href="https://wzfou.com/tag/aria2-webui/" target="_blank" rel="noopener">Aria2 WebUI</a>实现本地操控Aria2离线下载的方法。总之，配合好离线下载，Nextcloud又可以变身为办公与娱乐平台了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_00.jpg" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_00.jpg" alt="Nextcloud离线下载搭建方法-整合Aria2和AriaNg\Aria2 WebUI实现离线下载"></a></p>
<p>更多的实用建站工具与程序，你可以看看：</p>
<ol>
<li><a href="https://wzfou.com/hashover/" target="_blank" rel="noopener">HashOver免费开源PHP评论系统安装使用-自建评论系统替代第三方</a></li>
<li><a href="https://wzfou.com/lsyncd/" target="_blank" rel="noopener">Lsyncd搭建同步镜像-用Lsyncd实现本地和远程服务器之间实时同步</a></li>
<li><a href="https://wzfou.com/cn2-vps-list/" target="_blank" rel="noopener">接入CN2线路VPS主机商和机房汇总-鉴别真假CN2线路主机参考手册</a></li>
</ol>
<p><strong>PS：2017年10月14日更新，</strong>有兴趣树莓派Raspberry Pi与Nextcloud整合的朋友可以看看：<a href="https://wzfou.com/raspberry-nextcloud/" target="_blank" rel="noopener">树莓派Raspberry Pi安装NextCloud教程-自建家庭私有云局域网共享</a>。</p>
<h2 id="一、Nextcloud安装使用"><a href="#一、Nextcloud安装使用" class="headerlink" title="一、Nextcloud安装使用"></a>一、Nextcloud安装使用</h2><p>Nextcloud安装与使用我在下面两篇文章中已经详细地进过了，喜欢折腾的朋友，可以自己搭建LNMP和LAMP手动安装Nextcloud，对于只想马上上手Nextcloud的朋友，建议使用一键安装方法。</p>
<ol>
<li><a href="https://wzfou.com/nextcloud/" target="_blank" rel="noopener">Nextcloud个人云存储绝佳选择：一键自动安装方法和云盘使用体验</a></li>
<li><a href="https://wzfou.com/nextcloud-install/" target="_blank" rel="noopener">手动安装NextCloud教程-免费开源的私有云存储网盘可播放图片音乐</a></li>
</ol>
<h2 id="二、在VPS上安装Aria2"><a href="#二、在VPS上安装Aria2" class="headerlink" title="二、在VPS上安装Aria2"></a>二、在VPS上安装Aria2</h2><p>执行命令安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ToyoDAdoubi&#x2F;doubi&#x2F;master&#x2F;aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</span><br><span class="line">#备用地址：https:&#x2F;&#x2F;www.ucblog.net&#x2F;wzfou&#x2F;aria2.sh</span><br></pre></td></tr></table></figure>
<p>运行脚本后，你可以安装、升级Aria2。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_01.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_01.gif" alt="Nextcloud离线安装脚本"></a></p>
<p><strong>修改Aria2下载存储路径</strong>。打开：vi /root/.aria2/aria2.conf，找到：dir=XXX，修改为Nextcloud的存储路径。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_03.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_03.gif" alt="Nextcloud离线修改存储路径"></a></p>
<p>为了保证安全性，请将此路径以外挂存储的方式，在Nextcloud的管理面板中进行挂载。当然不想以挂载的方式，那么请在上面将路径设置为Nextcloud默认的存储路径。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_02.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_02.gif" alt="Nextcloud离线调整路径"></a></p>
<p><strong>修改RPC令牌(rpc-secret)。</strong>RPC令牌就相当于 <a href="https://wzfou.com/tag/aria2/" target="_blank" rel="noopener">Aria2</a>(后端/服务端)远程API连接的授权密码，如果你想让任何人都使用的话，你可以将RPC令牌留空，否则请设置为你自己的密码。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_04.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_04.gif" alt="Nextcloud离线设置令牌"></a></p>
<h2 id="三、AriaNg下载与使用"><a href="#三、AriaNg下载与使用" class="headerlink" title="三、AriaNg下载与使用"></a>三、AriaNg下载与使用</h2><p>AriaNg项目：</p>
<ol>
<li>项目：<a href="https://github.com/mayswind/AriaNg" target="_blank" rel="noopener">https://github.com/mayswind/AriaNg</a></li>
<li>下载：<a href="https://github.com/mayswind/AriaNg/releases/latest" target="_blank" rel="noopener">https://github.com/mayswind/AriaNg/releases/latest</a></li>
</ol>
<p>AriaNg是一个前端(HTML+JS静态)控制面板，不需要和 Aria2(后端/服务端)放在一个服务器或者设备中，你可以直接下载到你的本地电脑上解压打开index.html，或者放在服务器访问，服务器只要有Nginx或者Apache就可以了。</p>
<p>点击打开AriaNg 设置 填入RPC别名、地址、协议、请求方法和密钥。RPC地址填写IP或者域名，端口默认的是6800，密钥的话就是你刚刚在配置文件中修改过的。（点击放大）</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_05.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_05.gif" alt="Nextcloud离线设置密钥"></a></p>
<p>设置完成后，点击Aria2 状态你可以看到Aria2已经连接成功了。没有连接成功的话，检查一下VPS的防火墙有没有开放两个端口，一个是RPC监听端口<code>6800(默认)</code>，一个是BT监听端口<code>51413(默认)</code>。当然修改了配置文件后记得重启VPS。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_05_1.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_05_1.gif" alt="Nextcloud离线连接成功"></a></p>
<p>打开AriaNg面板，你就可以添加http\BT\磁力链接开始下载了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_07.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_07.gif" alt="Nextcloud离线添加下载任务"></a></p>
<p>由于我们用的是VPS主机下载资源，所以速度基本上可以飞起来了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_08.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_08.gif" alt="Nextcloud离线速度非常快"></a></p>
<h2 id="四、Aria2-WebUI安装使用"><a href="#四、Aria2-WebUI安装使用" class="headerlink" title="四、Aria2 WebUI安装使用"></a>四、Aria2 WebUI安装使用</h2><p>Aria2 WebUI</p>
<ol>
<li>项目：<a href="https://github.com/ziahamza/webui-aria2" target="_blank" rel="noopener">https://github.com/ziahamza/webui-aria2</a></li>
</ol>
<p>你可以将<a href="https://wzfou.com/tag/aria2-webui/" target="_blank" rel="noopener">Aria2 WebUI</a>放在本地或者是放在服务器上，使用方法和上面的AriaNg差不多。运行Aria2 WebUI，然后在设置中选择连接设置。主机就填写你的VPS主机IP地址，端口默认是6800，访问密码就是你修改Aria2配置文件的RPC令牌。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_10.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_10.gif" alt="Nextcloud离线本地设置"></a></p>
<p>设置成功后，你就可以在Aria2 WebUI中看到Aria2下载任务了，同时你也可以添加链接、种子、磁力链接开始下载了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_11.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_11.gif" alt="Nextcloud离线开始下载了"></a></p>
<h2 id="五、Nextcloud离线下载使用"><a href="#五、Nextcloud离线下载使用" class="headerlink" title="五、Nextcloud离线下载使用"></a>五、Nextcloud离线下载使用</h2><p>按照上面的方法我们已经实现了离线下载，打开Nextcloud网盘，你就可以看到Aria2 下载的文件了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_18.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_18.gif" alt="Nextcloud离线看到下载的文件"></a></p>
<p>Nextcloud自带了同步客户端，你可以利用客户端将文件下载到本地，当然Nextcloud可以直接在线播放音乐、视频等，流量足够的话直接自己在线观看即可。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_19.jpg" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_19.jpg" alt="Nextcloud离线在线观看"></a></p>
<h2 id="六、本地-Aria2-百度网盘"><a href="#六、本地-Aria2-百度网盘" class="headerlink" title="六、本地+Aria2+百度网盘"></a>六、本地+Aria2+百度网盘</h2><p><strong>如果你没有VPS主机，也没有Linux，也没有关系，</strong>这里提供一个本地运行Aria2的方法，支持Mac和Windows，同时还提供Chrome插件，帮助你直接获取百度网盘的文件下载地址，跳过百度网盘客户端，直接使用Aria2高速下载网盘文件。</p>
<ol>
<li>下载：<a href="https://www.ucblog.net/wzfou/Aria2.zip" target="_blank" rel="noopener">https://www.ucblog.net/wzfou/Aria2.zip</a></li>
</ol>
<p>下载安装包，解压后有三个文件夹，其中Plugin是Chrome插件，我用过之后获取百度网盘不一定有效，可以用本文介绍的安装油猴子的方法来解决。<strong>Mac OS安装Aria2GUI.dmg，位于网盘的Aria2 for Mac文件夹中。</strong></p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_08_1.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_08_1.gif" alt="Nextcloud离线三个文件"></a></p>
<p><strong>Windows用户的话，</strong>进入Aria2 for Windows，将aria2.rar这个文件解压在D:\aria2这个文件夹里，即D:\aria2\。然后在D盘根目录建立一个Downloads的文件夹，这个文件夹就是你下载的文件存放的地方。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_09.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_09.gif" alt="Nextcloud离线解压文件"></a></p>
<p>进入D:\aria2\里面，双击HideRun.vbs这个文件，然后进入任务管理器可以看到aria2c.exe这个进程正在运行。找到 aria2控制界面.rar，将这个文件在任意位置解压缩，然后双击index.html这个文件，你的默认浏览器就会打开。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_19.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_19.gif" alt="Nextcloud离线在本地运行"></a></p>
<p>接下来你就会进入到Aria2 WebUI控制面板，添加下载地址，跟上面的操作是一样的。不过，为了可以下载百度网盘中的文件，你需要在Chrome上安装tampermonkey应用，然后到greasyfork.org下载安装脚本，只要跟百度有关的你都可以安装。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_13.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_13.gif" alt="Nextcloud离线安装插件"></a></p>
<p>现在用浏览器打开百度网盘，然后在下载页面就会出导出下载链接的按钮了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_14.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_14.gif" alt="Nextcloud离线导出下载地址"></a></p>
<p>复制出下载链接地址，然后放在Aria2 WebUI和AriaNg中开始调用Aria2下载了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_15.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_15.gif" alt="Nextcloud离线下载百度网盘"></a></p>
<p>如果速度太慢的话，你可以修改下载连接数。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_16.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_16.gif" alt="Nextcloud离线修改连接数"></a></p>
<p>你也可以修改下载的Agent，这样可以逃避百度的封锁或者躲开一些不让爬虫下载的页面。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_17.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/Aria2-nextcloud_17.gif" alt="Nextcloud离线修改浏览器标识"></a></p>
<h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2><p>从上文应该能看出来，我们将<a href="https://wzfou.com/tag/nextcloud-aria2/" target="_blank" rel="noopener">Nextcloud与Aria2</a>整合，只是将各自的优势整合在一块了。Aria2负载下载文件，Nextcloud可以管理查看文件。而Aria2的控制面板又可以完全脱离Web服务器，直接在本地运行也可以。</p>
<p>你甚至可以将它放在Nextcloud同步中，这样在任意地点都可以打开Aria2和AriaNg\Aria2 WebUI来查看和添加下载任务了。当然，在使用Aria2和AriaNg\Aria2 WebUI实现离线下载前，注意国外的VPS主机对版本文件比较严格。</p>
<p>文章出自：<a href="https://wzfou.com/" target="_blank" rel="noopener">挖站否</a> <a href="https://wzfou.com/nextcloud-aria2/" target="_blank" rel="noopener">https://wzfou.com/nextcloud-aria2/</a>，部分内容参考自：<a href="https://medium.com/@Justin___Smith/aria2%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B-mac%E5%92%8Cwindows-b31d0f64bd4e" target="_blank" rel="noopener">Justin Smith</a> 、<a href="https://doub.io/wlzy-30/" target="_blank" rel="noopener">doub.io</a>  版权所有。本站文章除注明出处外，皆为作者原创文章，可自由引用，但请注明来源。</p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>离线下载</tag>
        <tag>私有云盘</tag>
      </tags>
  </entry>
  <entry>
    <title>Nextcloud个人云存储绝佳选择</title>
    <url>/2017/09/20/Nextcloud%E4%B8%AA%E4%BA%BA%E4%BA%91%E5%AD%98%E5%82%A8%E7%BB%9D%E4%BD%B3%E9%80%89%E6%8B%A9/</url>
    <content><![CDATA[<p>文章出自：<a href="https://wzfou.com/" target="_blank" rel="noopener">挖站否</a> <a href="https://wzfou.com/nextcloud/" target="_blank" rel="noopener">https://wzfou.com/nextcloud/</a></p>
<p>搭建个人云存储一般会想到ownCloud，堪称是自建云存储服务的经典。而<a href="https://wzfou.com/tag/nextcloud/" target="_blank" rel="noopener">Nextcloud</a>是ownCloud原开发团队打造的号称是“下一代”存储。初一看觉得“口气”不小，刚推出来就重新“定义”了Cloud，真正试用过后就由衷地赞同这个Nextcloud：它是个人云存储服务的绝佳选择。</p>
<a id="more"></a>
<p>与ownCloud相比，Nextcloud的功能丝毫没有减弱，甚至由于可以安装云存储服务应用，自制性更强，也更符合用户的需求。Nextcloud官网的帮助文档写得相当地详细，几乎任何关于Nextcloud的问题都可以找到答案，这说明Nextcloud开发团队确实比ownCloud更加优秀。</p>
<p>一开始以为Nextcloud只是一个网盘<a href="https://wzfou.com/tag/siyou-yuncunchu/" target="_blank" rel="noopener">云存储</a>，后来看到Nextcloud内置了Office文档、图片相册、日历联系人、两步验证、文件管理、RSS阅读等丰富的应用，我发现Nextcloud已经仅仅可以用作个人或者团队存储与共享，还可以打造成为一个个人办公平台，几乎相当于一个个人的Dropbox了。</p>
<p>Nextcloud运行环境与平常我们常用的程序差不多，LAMP是官方首选，不过LNMP也照样可以运行，只不过需要自己写URL重写规则。当然，官方还提供了SNAP一键安装包，一分钟内就可以在VPS上部署好Nextcloud，非常地方便。本篇文章就来分享SNAP安装Nextcloud的方法。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_00.jpg" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_00.jpg" alt="Nextcloud个人云存储绝佳选择:一键安装自带免费客户端内置文档\相册\日历丰富应用"></a></p>
<p>更多的关于邮件分发、CDN加速和<a href="https://wzfou.com/tag/vps-tongbu/" target="_blank" rel="noopener">VPS同步</a>等工具，你还可以看看：</p>
<ol>
<li><a href="https://wzfou.com/mailchimp/" target="_blank" rel="noopener">利用MailChimp建立RSS邮件订阅平台-每月免费12000封邮件可加2000用户</a></li>
<li><a href="https://wzfou.com/fikker/" target="_blank" rel="noopener">用Fikker自建CDN-支持Https,页面缓存,实时监控,流量统计,防CC攻击</a></li>
<li><a href="https://wzfou.com/lsyncd/" target="_blank" rel="noopener">Lsyncd搭建同步镜像-用Lsyncd实现本地和远程服务器之间实时同步</a></li>
</ol>
<p><strong>PS：2017年9月27日更新，</strong>想要利用Nextcloud实现离线下载可以看这里：<a href="https://wzfou.com/nextcloud-aria2/" target="_blank" rel="noopener">Nextcloud离线下载搭建方法-整合Aria2和AriaNg、Aria2 WebUI实现离线下载</a>。</p>
<h2 id="一、Nextcloud一键安装"><a href="#一、Nextcloud一键安装" class="headerlink" title="一、Nextcloud一键安装"></a>一、Nextcloud一键安装</h2><p>Nextcloud官网：</p>
<ol>
<li><a href="https://nextcloud.com/" target="_blank" rel="noopener">https://nextcloud.com/</a></li>
<li>nextcloud snap：<a href="https://github.com/nextcloud/nextcloud-snap" target="_blank" rel="noopener">https://github.com/nextcloud/nextcloud-snap</a></li>
</ol>
<p><a href="https://wzfou.com/tag/nextcloud-snap/" target="_blank" rel="noopener">nextcloud snap</a>目前包含以下组件（会自动更新升级，请及时关注）：</p>
<blockquote>
<p>Nextcloud 11.0.3</p>
<p>Apache 2.4</p>
<p>PHP 7</p>
<p>MySQL 5.7</p>
<p>Redis 3.2</p>
<p>mDNS for network discovery</p>
</blockquote>
<p><strong>安装前修改好hostname。</strong>在终端窗口中输入命令：hostname或uname –n，均可以查看到当前主机的主机名，修改参考如下（Ubuntu修改可参考我之前的一篇文章：<a href="https://wzfou.com/ispconfig-3-1/#ISPConfig_31" target="_blank" rel="noopener">ISPConfig 3.1 安装方法</a>）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;hosts</span><br><span class="line">150.95.150.57 pan.wzfou.net pan  </span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;hostname</span><br><span class="line">pan.wzfou.net</span><br><span class="line">hostname -F &#x2F;etc&#x2F;hostname #重启</span><br><span class="line">hostname #再次查看</span><br></pre></td></tr></table></figure>
<p><strong>一键安装方法：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install snapd</span><br><span class="line">sudo snap install nextcloud</span><br></pre></td></tr></table></figure>
<p>如下图表示安装成功了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_01.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_01.gif" alt="Nextcloud一键安装成功"></a></p>
<p>接着，打开你的域名或者IP地址，然后会让你设置好管理员账号与密码，确定，完成安装。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_02.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_02.gif" alt="Nextcloud打开域名"></a></p>
<p>可能有的人不想使用Snap安装方法，可以看看手动在VPS上部署LNMP/LAMP安装Nextcloud方法：<a href="https://wzfou.com/nextcloud-install/" target="_blank" rel="noopener">手动安装NextCloud教程</a>。</p>
<p><strong>选择Snap还是VPS手动？</strong>不用纠结，以下官方的回答：</p>
<blockquote>
<p><strong>snap优点</strong>：The snap is nice for getting up and running quickly with minimal space, and will work great if you’re happy not messing with it. Since it’s a snap you also get the benefit of automatic updates and the ability to rollback without worrying about needing to take a snapshot, etc.</p>
<p>#翻译：snap安装快捷，傻瓜式一键安装，几分钟内搞定。同时，snap支持自动升级、回滚等，你无需使用复杂的命令工具。</p>
<p><strong>snap缺点：</strong>However, the snap is very opinionated. Don’t want to use Apache? Sorry, the snap uses it. Don’t want to use MySQL? Sorry, MariaDB does not run on ARM. Something other than PHP 7.0.15? We picked the version we feel gives the best results. In other words, it’s not very tinker-friendly. We don’t do this to be mean, <strong>we do this so that we can reliably update it without your needing to worry about it</strong>.</p>
<p>#翻译：snap不能自定义，只能使用snap既定的MysqL、apache、PHP等。不过，这样的好处就是经过官方测试过的运行稳定且有利于后期自动升级。</p>
<p><strong>VPS手动安装优缺点：</strong>The VM is much more flexible. It’s a full version of Ubuntu server edition, allowing you to tweak whatever you need and it comes with many apps which are not that easy to configure for inexperienced administrators. This of course makes it larger. You’ll also need to make sure you maintain it and keep the OS up-to-date. Since it’s virtualized you can assign disk, CPU, memory, and network quotas to it (you’d need to install the snap in an lxc container or a VM to get the same abilities).</p>
<p>#翻译：VPS手动则比较灵活，你可以自已配置磁盘、CPU、内存和网络，但是同时你需要懂得如何维护好VPS操作系统。</p>
</blockquote>
<h2 id="二、Nextcloud管理使用"><a href="#二、Nextcloud管理使用" class="headerlink" title="二、Nextcloud管理使用"></a>二、Nextcloud管理使用</h2><p>以下就是Nextcloud的管理中心面板，是不是与我们用过的Dropbox有点类似-简洁。左边就是分享的链接、收藏、WebDav地址，中间就是我们上传的图片、文档、程序等了，点击可以查看详情。右边有管理、个人、用户等。（点击放大）</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_04.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_04.gif" alt="Nextcloud用户中心"></a></p>
<p>Nextcloud上传的视频支持在线播放。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_05.jpg" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_05.jpg" alt="Nextcloud视频播放"></a></p>
<p>Nextcloud上传的图片可以像幻灯片一样浏览。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_06.jpg" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_06.jpg" alt="Nextcloud浏览图片"></a></p>
<p>Nextcloud支持给分享的文档、图片等设置有效期、密码保护等，有点类似于百度网盘了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_07.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_07.gif" alt="Nextcloud分享文档"></a></p>
<p>别人打开你的共享链接后就可以预览到图片或者视频了，也可以直接点击下载了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_08.jpg" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_08.jpg" alt="Nextcloud下载文件"></a></p>
<p>在Nextcloud的个人中心页面，可以修改个人信息、应用密码、同步客户端等。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_09.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_09.gif" alt="Nextcloud个人中心"></a></p>
<p>Nextcloud在服务器管理页面，则可以查看CPU、内存等使用情况、切换Nextcloud主题、是否对存储在Nextcloud的文件进行加密、激活插件等。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_09_1.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_09_1.gif" alt="Nextcloud服务器设置"></a></p>
<h2 id="三、Nextcloud同步客户端"><a href="#三、Nextcloud同步客户端" class="headerlink" title="三、Nextcloud同步客户端"></a>三、Nextcloud同步客户端</h2><p>Nextcloud提供了免费的同步客户端供大家下载使用，支持PC和手机。下载地址：<a href="https://nextcloud.com/install/#install-clients" target="_blank" rel="noopener">https://nextcloud.com/install/#install-clients</a></p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_03.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_03.gif" alt="Nextcloud客户端"></a></p>
<p>在电脑上运行Nextcloud同步客户端，先填入你的Nextcloud地址。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_10.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_10.gif" alt="Nextcloud运行客户端"></a></p>
<p>然后就是输入Nextcloud的用户名以及客户端专用密码，这个专用密码需要到Nextcloud的个人中心页面生成。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_11.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_11.gif" alt="Nextcloud填入专用密码"></a></p>
<p>Nextcloud允许你选择同步某一个文件夹，还是同步整个Nextcloud账户。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_12.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_12.gif" alt="Nextcloud同步文件夹设置"></a></p>
<p>连接好了后，你就可以在本地看到Nextcloud同步过来的文件了，你在本地的操作都会影响到Nextcloud云端的文件存储，自动实现同步。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_13.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_13.gif" alt="Nextcloud本地同步"></a></p>
<p>以下是Nextcloud的手机同步客户端，功能差不多。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_14.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_14.gif" alt="Nextcloud手机端"></a></p>
<p>Nextcloud手机客户端支持自动上传文件，还有设置下载路径等等。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_15.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_15.gif" alt="Nextcloud备份手机文件"></a></p>
<h2 id="四、Nextcloud添加应用"><a href="#四、Nextcloud添加应用" class="headerlink" title="四、Nextcloud添加应用"></a>四、Nextcloud添加应用</h2><p>Nextcloud官方提供了非常多的应用：<a href="https://apps.nextcloud.com/，Office文档、图片相册、日历联系人、两步验证、文件管理、RSS阅读等丰富的应用。这些应用你可以手动下载安装，也可以直接在Nextcloud后台一键激活。" target="_blank" rel="noopener">https://apps.nextcloud.com/，Office文档、图片相册、日历联系人、两步验证、文件管理、RSS阅读等丰富的应用。这些应用你可以手动下载安装，也可以直接在Nextcloud后台一键激活。</a></p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_22.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_22.gif" alt="Nextcloud添加应用"></a></p>
<p><strong>Office文档插件</strong>：<a href="https://apps.nextcloud.com/apps/documents" target="_blank" rel="noopener">Documents</a>。有Collabora Online、Markdown Editor、Calendar、Onlyoffice、Documents等，其中Documents安装比较简单，直接启用即可。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_23.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_23.gif" alt="Nextcloud查看Office文档"></a></p>
<p>如果不支持打开Doc（X），你需要在你的Ubuntu安装以下包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install libreoffice-writer</span><br><span class="line">apt-get install libreoffice-common</span><br><span class="line">apt-get install unoconv</span><br></pre></td></tr></table></figure>
<p>Documents插件安装好了后就可以在线查看和编辑Office文档了。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_24.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_24.gif" alt="Nextcloud在线编辑文档"></a></p>
<p><strong>安全类插件</strong>：<a href="https://apps.nextcloud.com/apps/twofactor_totp" target="_blank" rel="noopener">Two Factor TOTP Provider</a>。这个插件可以让你的Nextcloud账号支持开启登录两步验证。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_25.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_25.gif" alt="Nextcloud两步验证"></a></p>
<p><strong>RSS阅读器插件</strong>：<a href="https://apps.nextcloud.com/apps/news" target="_blank" rel="noopener">News</a>。这个插件真的让我感觉眼前一亮，有了它我们可以将Nextcloud变身为一个RSS在线阅读器了。这个比之前我们<a href="https://wzfou.com/huginn-rss/" target="_blank" rel="noopener">利用Huginn抓取任意网站RSS</a>的方法可以简单了。（点击放大）</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_26.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_26.gif" alt="Nextcloud阅读器"></a></p>
<h2 id="五、Nextcloud高级设置"><a href="#五、Nextcloud高级设置" class="headerlink" title="五、Nextcloud高级设置"></a>五、Nextcloud高级设置</h2><p>Nextcloud支持使用PHP发送邮件，但是自带的邮局发出去的邮件基本上是被各大邮箱判定为垃圾邮件，所以我们需要利用好Nextcloud提供的SMTP发信功能。</p>
<h3 id="4-1-Nextcloud用SMTP发信"><a href="#4-1-Nextcloud用SMTP发信" class="headerlink" title="4.1  Nextcloud用SMTP发信"></a>4.1  Nextcloud用SMTP发信</h3><p>在Nextcloud的管理页面，找到“其他设置”，然后选择发信方式为SMTP，填写你的SMTP信息，这里我用的是腾讯企业邮箱的，你也可以使用Gmail、163等免费SMTP发信功能。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_20.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_20.gif" alt="Nextcloud设置发信"></a></p>
<p>填写完成后，点击测试看看是不是可以成功发出邮件。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_21.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_21.gif" alt="Nextcloud成功发出邮件"></a></p>
<h3 id="4-2-Nextcloud安装SSL证书"><a href="#4-2-Nextcloud安装SSL证书" class="headerlink" title="4.2  Nextcloud安装SSL证书"></a>4.2  Nextcloud安装SSL证书</h3><p>如果你使用Snap安装的Nextcloud，那么添加SSL加密访问将是一件非常简单的事情。先确保你的域名已经成功解析到你的VPS主机上，然后执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nextcloud.enable-https lets-encrypt #安装Let&#39;s Encrypt SSL</span><br><span class="line">#如果你想使用自己的证书，请执行：</span><br><span class="line">sudo nextcloud.enable-https self-signed</span><br></pre></td></tr></table></figure>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_16.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_16.gif" alt="Nextcloud添加SSL证书"></a></p>
<p>如果你是使用自已的证书，请在执行命令后找到SSL证书的路径，将自己的证书上传替换生成的自签名证书文件即可。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_17.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_17.gif" alt="Nextcloud自己的证书"></a></p>
<h3 id="4-3-Nextcloud备份与恢复"><a href="#4-3-Nextcloud备份与恢复" class="headerlink" title="4.3  Nextcloud备份与恢复"></a>4.3  Nextcloud备份与恢复</h3><p><strong>备份MysqL数据库</strong>。使用Snap安装的Nextcloud，数据库文件在以下路径中，你直接将Nextcloud这个数据库全部备份即可。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_18.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_18.gif" alt="Nextcloud备份数据库"></a></p>
<p><strong>备份文件。</strong>Nextcloud上传的文件存储在以下路径中，将里面的Data文件全部备份即可。</p>
<p><a href="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_19.gif" target="_blank" rel="noopener"><img src="https://wzfou.cdn.bcebos.com/wp-content/uploads/2017/08/nextcloud_19.gif" alt="Nextcloud备份存储文件"></a></p>
<p><strong>Nextcloud恢复。</strong>重装安装了Nextcloud后，将上面的数据库文件与文件数据全部导入到新的服务器，保持原来的路径即可。对于大量的文件迁移，推荐使用远程搬家方法：<a href="https://wzfou.com/rsync-scp-tar/" target="_blank" rel="noopener">三个命令工具Rsync,SCP,Tar-快速解决Linux VPS远程网站搬家数据同步烦恼</a>。</p>
<h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p>Nextcloud采用Snap的安装方法简单方便，适合不想折腾的朋友，并且官方打包的<a href="https://wzfou.com/tag/nextcloud-install/" target="_blank" rel="noopener">Nextcloud Snap自动部署</a>好了LAMP，如果你想迁移服务器，只需要将新的服务器按照同样的方法安装Nextcloud，然后导入之前的数据库与存储文件即可。</p>
<p>Nextcloud如果用来存储一些私人的照片或者文件的话，最让人担心的恐怕是安全问题了。目前来看，Nextcloud本身的安全措施已经做得非常到位，例如账号两步验证、程序与存储文件分开、数据加密等。可能唯一需要我们自己做的就是保证服务器不要出现漏洞。</p>
<p>文章出自：<a href="https://wzfou.com/" target="_blank" rel="noopener">挖站否</a> <a href="https://wzfou.com/nextcloud/" target="_blank" rel="noopener">https://wzfou.com/nextcloud/</a>，版权所有。本站文章除注明出处外，皆为作者原创文章，可自由引用，但请注明来源。</p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>私有云盘</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian 9/10快速开启Google BBR的方法，实现高效单边加速</title>
    <url>/2017/09/16/Debian-910%E5%BF%AB%E9%80%9F%E5%BC%80%E5%90%AFGoogle-BBR%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%95%88%E5%8D%95%E8%BE%B9%E5%8A%A0%E9%80%9F/</url>
    <content><![CDATA[<p>转自<a href="https://www.moerats.com/archives/297/" target="_blank" rel="noopener">Debian 9/10快速开启Google BBR的方法，实现高效单边加速</a></p>
<p><strong>说明：</strong><code>Google BBR</code>刚出来的时候，一键包都还没出来，都是手动把内核换到<code>4.9</code>以上，从而开启<code>BBR</code>加速，方法可参考：<a href="https://www.moerats.com/archives/10/" target="_blank" rel="noopener">使用Google BBR拥塞算法加速TCP教程</a>，由于 <code>Debian 9</code>默认的就是<code>4.9</code>的内核而且编译了<code>TCP BBR</code>的内容，所以可以直接通过参数开启。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">提示：目前最新版Debian 10内核为4.19，也可以直接用该方法开启BBR。</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、修改系统变量</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo "net.core.default_qdisc=fq" &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo "net.ipv4.tcp_congestion_control=bbr" &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure>
<p><strong>2、保存生效</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sysctl <span class="literal">-p</span></span><br></pre></td></tr></table></figure>
<p><strong>3、查看内核是否已开启BBR</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>
<p>显示以下即已开启：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sysctl net.ipv4.tcp_available_congestion_control</span></span><br><span class="line">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br></pre></td></tr></table></figure>
<p><strong>4、查看BBR是否启动</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>
<p>显示以下即启动成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> lsmod | grep bbr</span></span><br><span class="line">tcp_bbr                20480  14</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>科学上网的终极姿势——在Vultr上搭建shadowsocks</title>
    <url>/2017/01/03/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E7%9A%84%E7%BB%88%E6%9E%81%E5%A7%BF%E5%8A%BF/</url>
    <content><![CDATA[<p><a href="https://medium.com/@zoomyale/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E7%9A%84%E7%BB%88%E6%9E%81%E5%A7%BF%E5%8A%BF-%E5%9C%A8-vultr-vps-%E4%B8%8A%E6%90%AD%E5%BB%BA-shadowsocks-fd57c807d97e" target="_blank" rel="noopener">转自</a></p>
<p>作为一个离开 Google 生活就无法自理的人类，我曾经发帖、提问、翻遍各种网站，四处寻找靠谱的科学上网利器。结果，确实也找到过一些能满足当下需求的产品，但是不久后各种杯具就发生了。</p>
<a id="more"></a>
<p><img src="https://cdn-images-1.medium.com/max/800/1*IjrXDWDcezLxR15VXmk7OA.jpeg" alt=""></p>
<p>(ノ ﾟДﾟ)ノ ＝＝ ┻━┻ 这是人民日益增长的物质文化需求同落后的社会生产之间的矛盾啊！</p>
<p>这些服务要么价格不低，要么稳定性太差，还可能随时被查封，实在让人很为难。这时候我想，反正都是通过海外服务器来提供建服务的，为什么不干脆自己租台呢？结果是，整个人都跟着网速起飞了😄下图是搭建完成后观看 YouTube 4K 视频的截图。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*WExqe8hx640pXbIg.png" alt=""></p>
<p>所以，如果你和我一样不满足上述那些服务，又不怕麻烦的话，这里有一份详细而对小白友好的折腾指南。事先说明，如果你希望不花钱就能用上优质的服务──醒醒，别做梦了，免费和优质从来不可能划上等号。不过想要共享或建立多账户来出售的话，能赚钱也说不定🙃</p>
<blockquote>
<p>Medium 的排版还是不适合此类文章，为了获得更好的阅读体验，可以转至<a href="https://zoomyale.com/2016/vultr_and_ss/" target="_blank" rel="noopener">我的 Blog</a>。</p>
</blockquote>
<h1 id="一、一些背景和原理"><a href="#一、一些背景和原理" class="headerlink" title="一、一些背景和原理"></a>一、一些背景和原理</h1><p>因为整个折腾过程对没有技术背景的人来说，还是略显复杂的，所以有必要先粗浅地介绍一下所涉及的概念和原理。如果不感兴趣可以跳过，直接看操作步骤。</p>
<h2 id="1-1什么是-Shadowsocks"><a href="#1-1什么是-Shadowsocks" class="headerlink" title="1.1什么是 Shadowsocks"></a>1.1什么是 Shadowsocks</h2><p><img src="https://cdn-images-1.medium.com/max/800/1*_wK93D5hztuH6THHhjS7qQ.png" alt=""></p>
<p>Shadowsocks(ss) 是由 <a href="https://github.com/Clowwindy" target="_blank" rel="noopener">Clowwindy</a> 开发的一款软件，其作用本来是加密传输资料。当然，也正因为它加密传输资料的特性，使得 GFW 没法将由它传输的资料和其他普通资料区分开来（上图），也就不能干扰我们访问那些「不存在」的网站了。</p>
<h2 id="1-2什么是-VPS-和-Vultr"><a href="#1-2什么是-VPS-和-Vultr" class="headerlink" title="1.2什么是 VPS 和 Vultr"></a>1.2什么是 VPS 和 Vultr</h2><p>VPS(Virtual private server) 译作虚拟专用伺服器。你可以把它简单地理解为一台在远端的强劲电脑。当你租用了它以后，可以给它安装操作系统、软件，并通过一些工具连接和远程操控它。</p>
<p><a href="https://www.vultr.com/" target="_blank" rel="noopener">Vultr</a> 是一家 VPS 服务器提供商，有美国、亚洲、欧洲等多地的 VPS。它家的服务器以性价比高闻名，按时间计费，最低的资费为每月 $2.5。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*O_T5y-uxgz7eL2GZqD1TMA.png" alt=""></p>
<p>比 Vultr 价格更低的服务商也有许多，最知名的莫过于<a href="https://bandwagonhost.com/" target="_blank" rel="noopener">「搬瓦工」</a>，和 V 家差不多的配置只要 $19.9 每年。不过后者过于出名，据说超售严重，实测夜间速度足以让人痛哭流涕。</p>
<h2 id="1-3什么是-Linux-和-SSH"><a href="#1-3什么是-Linux-和-SSH" class="headerlink" title="1.3什么是 Linux 和 SSH"></a>1.3什么是 Linux 和 SSH</h2><p>Linux 是免费开源的操作系统，大概被世界上过半服务器所采用。有大量优秀的开源软件可以安装，上述 Shadowsocks 就是其一。你可以通过命令行来直接给 Linux 操作系统「下命令」，比如 $ cd ~/Desktop 就是进入你根目录下的 Desktop 文件夹。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*EK-0Gm6bVQwyONY3DSuWaA.png" alt=""></p>
<p>而 SSH 是一种网络协议，作为每一台 Linux 电脑的标准配置，用于计算机之间的加密登录。当你为租用的 VPS 安装 Linux 系统后，只要借助一些工具，就可以用 SSH 在你自己的 Mac/PC 电脑上远程登录该 VPS 了。</p>
<h1 id="二、购买和连接-VPS"><a href="#二、购买和连接-VPS" class="headerlink" title="二、购买和连接 VPS"></a>二、购买和连接 VPS</h1><h2 id="2-1注册-Vultr"><a href="#2-1注册-Vultr" class="headerlink" title="2.1注册 Vultr"></a>2.1注册 Vultr</h2><p>首先，访问 <a href="https://www.vultr.com/" target="_blank" rel="noopener">Vultr.com</a> 注册帐号，网站目前还没有被墙，访问速度不错。Vultr 官网似乎常年有活动，目前是注册新用户后绑定 VISA 信用卡就送 $50，有效期2个月（活动暂已过期）。</p>
<h2 id="2-2部署-VPS"><a href="#2-2部署-VPS" class="headerlink" title="2.2部署 VPS"></a>2.2部署 VPS</h2><p>注册完成后，在左边选择“Servers”标签，点击右边的加号部署新的服务器。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*NquIITQp9RsziuMg.png" alt=""></p>
<p>选择一个你想要的节点。推荐东京和洛杉矶，速度快，不过因为使用的人比较多，稳定性可能会受影响。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*Y1MLD7FHF8OTZKms.jpg" alt=""></p>
<p>为 VPS 选择安装系统。这里可以随自己喜欢，选择 Windows 以外的任意 Linux 系统。下面的教程以 CentOS 6x64 为例。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*d2t9HsyEO7n9xqrT2Ju_hQ.jpeg" alt=""></p>
<p>根据需求选择套餐。只供个人科学上网用的话，$5 绰绰有余（vultr 已新推出 $2.5 套餐）。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*fF3-jUTm8p2aeU9i.jpg" alt=""></p>
<p>剩下都可以使用默认值。最后一项你可以自定义服务器的名字和标签，以方便区分。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*0TekWaZKeA8ju6Ez.jpg" alt=""></p>
<p>另外，上图第 6 步中，SSH Keys 的作用是，可以让你登录 VPS 时不用每次手动输密码。若只将其用作 Shadowsocks 服务器，仅需要在配置时登录一次，可以完全忽略它。如果要同时作他用，可参考 此文 生成并添加 SSH Key。</p>
<p>等待系统安装完成。当显示“Running”时，就表示部署已完成。之后你可以随时停用、重启或销毁它。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*YH5Vd20ztLY3o2Po.jpg" alt=""></p>
<h2 id="2-3连接-VPS"><a href="#2-3连接-VPS" class="headerlink" title="2.3连接 VPS"></a>2.3连接 VPS</h2><p>如果你使用的是 PC，连接 VPS 需要借助一些工具，比如 Putty。你可以参考这篇百度经验完成安装，安装完成后步骤与下文 Mac 一致。</p>
<p>Mac 只要打开「终端」应用即可开始使用 SSH 连接 VPS。你的「终端」界面可能和下图略有差别，但是差不远──都有一个闪烁的光标，前面会有一个 $ 符号。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*1NQq9dx-3-2QC7DxdtsXSw.jpeg" alt=""></p>
<p>首先，在 Vultr 上你刚部署的服务器右边点“Manage”，找到服务器的 IP 地址（标黄部分）和密码。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*ooy32ogozOs2Mb8_MkD7CA.jpeg" alt=""></p>
<p>在「终端」或 Putty 等应用中，输入下面的命令并回车。注意把<host>替换成你服务器的 IP 地址。</p>
<p><code>ssh root@&lt;host&gt;</code></p>
<p>接下来屏幕上会出现一连串提示，意为无法确认 host 主机的真实性，只知道它的公钥指纹，问你还想继续连接吗？直接输入 yes 并回车。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*R4k28_caMyJhrulR.jpg" alt=""></p>
<p>然后输入密码，也就是把服务器状态页中密码那块复制一下，再 ⌘ + v 贴过来。这里不管是输入还是粘贴，屏幕上都不会显示字符，所以贴完后也是看不到字符的，回车就行。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*VK1s3NgNSJKpbvUD.jpg" alt=""></p>
<p>当出现上图那串 [root@vultr ~]# 时，说明已成功登录。</p>
<h1 id="三、部署-Shadowsocks"><a href="#三、部署-Shadowsocks" class="headerlink" title="三、部署 Shadowsocks"></a>三、部署 Shadowsocks</h1><p>Shadowsocks 需要同时具备客户端和服务器端，所以它的部署也需要分两步。</p>
<h2 id="3-1部署-Shadowsocks-服务器端"><a href="#3-1部署-Shadowsocks-服务器端" class="headerlink" title="3.1部署 Shadowsocks 服务器端"></a>3.1部署 Shadowsocks 服务器端</h2><p>这里使用 <a href="https://teddysun.com/342.html" target="_blank" rel="noopener">teddysun</a> 的一键安装脚本。</p>
<p>以下是3条命令，每次输入一行、回车，等待屏幕上的操作完成后再输入下一条。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;teddysun&#x2F;shadowsocks_install&#x2F;master&#x2F;shadowsocks.sh</span><br><span class="line">chmod +x shadowsocks.sh</span><br><span class="line">.&#x2F;shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br></pre></td></tr></table></figure><br>最后一步输完，你应该会看到下图中内容──是要你为 Shadowsocks 服务设置一个个人密码。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*8I1JBwuyQea7XhSax3Dldw.jpeg" alt=""></p>
<p>输好回车后会让你选择一个端口，输入 1–65535 间的数字都行。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*Ac6BV0wUEkzcZ1vP.jpg" alt=""></p>
<p>之后可以选择加密方式，这个就看个人喜好了，默认是 aes-256-gcm。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*V-sde2xtBqQAky9cb-BMVA.png" alt=""></p>
<p>遵照上图指示，按任意键开始部署 Shadowsocks。这时你什么都不用做，只需要静静地等它运行完就好。结束后就会看到你所部署的 Shadowsocks 的配置信息。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*RXQfMf41tAqL6-rm.jpg" alt=""></p>
<p>记住其中黄框中的内容，也就是服务器 IP、服务器端口、你设的密码和加密方式。</p>
<h2 id="3-2-TCP-Fast-Open"><a href="#3-2-TCP-Fast-Open" class="headerlink" title="3.2 TCP Fast Open"></a>3.2 TCP Fast Open</h2><p>实际上只要具备上述四个信息，你就可以在自己的任意设备上进行登录使用了。但是为了更好的连接速度，你还需要多做几步。</p>
<p>首先是打开 TCP Fast Open，输入以下命令，意为用 nano 这个编辑器打开一个文件。</p>
<p><code>nano /etc/rc.local</code></p>
<p>你的「终端」会刷新一下，出现下图。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*0DE2DkeVDABxRNuY.jpg" alt=""><br>别慌张，它就是个文本编辑器。用方向键把光标移到最末端，粘贴下面这一行内容，然后按 Ctrl + X 退出。</p>
<p><code>echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</code></p>
<p>输入“Y”并回车确认退出。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*a1Lc35XtYyg87AOjIY_iZw.jpeg" alt=""><br>然后依法炮制，输入：<br><code>nano /etc/sysctl.conf</code></p>
<p>在文末加上下面的内容，保存退出。</p>
<p><code>net.ipv4.tcp_fastopen = 3</code><br>再打开一个 Shadowsocks 配置文件。</p>
<p><code>nano /etc/shadowsocks.json</code><br>把其中 “fast_open” 一项的 false 替换成 true。</p>
<p><code>&quot;fast_open&quot;:true</code><br>如果你希望添加多用户的话，可以将 “password” 字段如下图修改。其中，“22345”:“password1”意为该用户使用 22345 端口、以“password1”为密码连接登录 Shadowsocks。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*v5FSXrVJ95Rw6DQhatE1UA.jpeg" alt=""><br>如果添加了多用户，需要更改防火墙规则，开放刚刚新增的端口。centOS 6 系统开放办法如下。保存退出后，输入以下命令，注意一次输入一行，并把 <newport> 替换为刚添加的端口：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -m state — state NEW -m tcp -p tcp — dport &lt;newport&gt; -j ACCEPT</span><br><span class="line">iptables -I INPUT -m state — state NEW -m udp -p udp — dport &lt;newport&gt; -j ACCEPT</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;iptables save</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;iptables restart</span><br></pre></td></tr></table></figure><br>保存退出。最后，输入以下命令重启 Shadowsocks。</p>
<p><code>/etc/init.d/shadowsocks restart</code></p>
<h2 id="3-3安装-Shadowsocks-客户端"><a href="#3-3安装-Shadowsocks-客户端" class="headerlink" title="3.3安装 Shadowsocks 客户端"></a>3.3安装 Shadowsocks 客户端</h2><p>相比服务器端的安装，客户端的安装就简单了许多。首先，根据操作系统下载相应的客户端。</p>
<ul>
<li><a href="https://sourceforge.net/projects/shadowsocksgui" target="_blank" rel="noopener">Mac 版客户端下载</a></li>
<li><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">Win 版客户端下载</a></li>
</ul>
<p>打开客户端，在「服务器设定」里新增服务器。然后依次填入服务器 IP、服务器端口、你设的密码和加密方式。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/0*f9ziGtA0QHXvxxcG.png" alt=""><br>然后启用代理，就可以实现科学上网了。</p>
<h1 id="四、开启-BBR"><a href="#四、开启-BBR" class="headerlink" title="四、开启 BBR"></a>四、开启 BBR</h1><p>完成上述步骤后，使用过程中可能会发现连接速度有时不太令人满意。这就是加速工具们发挥功能的时候了。常用的加速工具有「锐速」、TCP BBR、kcptun，等等。原理虽各不相同，但都是通过一些技术手段，来实现连接和传输速度的提升。</p>
<h2 id="4-1什么是-BBR"><a href="#4-1什么是-BBR" class="headerlink" title="4.1什么是 BBR"></a>4.1什么是 BBR</h2><p><a href="https://zh.wikipedia.org/wiki/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6" target="_blank" rel="noopener">TCP BBR</a> 是 Google 于 2016 年发布的，一种避免网络拥塞的算法。目的是要尽量跑满带宽, 并且尽可能避免排队的情况。</p>
<p>实际使用下来，BBR 的速度提升效果并不比「锐速」（据说已倒闭）、kcptun（多倍发包耗流量）等差。而且 BBR 已植入 Linux 4.9+ 版本的内核中，服务器开启后就能有显著的效果提升。</p>
<h2 id="4-2安装-BBR"><a href="#4-2安装-BBR" class="headerlink" title="4.2安装 BBR"></a>4.2安装 BBR</h2><p>和 2.3 中的步骤一样，首先需要用 SSH 登录 VPS。</p>
<p><code>ssh root@&lt;host&gt;</code><br>这里依然使用 @teddysun 的一键安装脚本，输入以下命令。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https:&#x2F;&#x2F;github.com&#x2F;teddysun&#x2F;across&#x2F;raw&#x2F;master&#x2F;bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; .&#x2F;bbr.sh</span><br></pre></td></tr></table></figure><br>按任意键开始安装，安装需要一段时间，等待一会即可。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*0QigYZPNeXS-ndhuCa3Fbg.png" alt=""><br>安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。</p>
<p>重新使用 SSH 登录 VPS，这时 BBR 应该已经开启了。你可以使用以下两行命令验证一下。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname -r</span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><br>如果输出的内核版本为 4.9 以上版本，且返回值有 tcp_bbr 模块的话，说明 bbr 已启动。</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*u2tuIIObaH7TbgYgrW_RVA.png" alt=""><br>至此，整个搭建过程就大功告成了！接下来，尽情地享受自由的网络吧😄</p>
<h1 id="五、一些也许对你有用的教程"><a href="#五、一些也许对你有用的教程" class="headerlink" title="五、一些也许对你有用的教程"></a>五、一些也许对你有用的教程</h1><h2 id="5-1关于浏览器"><a href="#5-1关于浏览器" class="headerlink" title="5.1关于浏览器"></a>5.1关于浏览器</h2><p>依然记得自己使用「红杏」的畅快体验──哪个网站不能访问了，按下图标添加到规则列表中，就可以「科学」地访问了。这种无缝的体验，靠 Shadowsocks 加另一款 Chrome 扩展 SwitchyOmega 也能实现，这里是<a href="https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList" target="_blank" rel="noopener">使用教程</a>。</p>
<h2 id="5-2关于桌面应用"><a href="#5-2关于桌面应用" class="headerlink" title="5.2关于桌面应用"></a>5.2关于桌面应用</h2><p>部署 Shadowsocks 完成后，浏览器就能实现科学上网了，但是像 Dropbox 等部分桌面应用的流量，还不能由 Shadowsocks 来代理。要实现桌面应用的代理，需要再借助其他应用，比如 <a href="https://www.proxifier.com/" target="_blank" rel="noopener">Proxifier</a>、<a href="https://nssurge.com/" target="_blank" rel="noopener">Surge for Mac</a>。</p>
<h2 id="5-3关于手机"><a href="#5-3关于手机" class="headerlink" title="5.3关于手机"></a>5.3关于手机</h2><p>安卓手机只需要下载安装 <a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="noopener">Shadowsocks 安卓版</a>，并与桌面版一样，填入服务器 IP、端口、密码和加密方式，就可以设置全局或分应用代理。但是要实现「真正意义上」的 PAC 规则的话（也就是自定义哪些域名走代理、哪些不走），可以试试目前还在内测中的「Android 版 Surge」 — — <a href="https://manual.getsurfboard.com/" target="_blank" rel="noopener">Surfboard</a>。</p>
<p>iOS 可以通过类 <a href="https://itunes.apple.com/us/app/surge-3-web-developer-tool/id1329879957?ls=1&amp;mt=8" target="_blank" rel="noopener">Surge</a> 的 App 实现 PAC 规则下的自动翻墙。</p>
<ul>
<li><a href="https://medium.com/@scomper/surge-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-a1533c10e80b#.gub28k9hh" target="_blank" rel="noopener">详尽版 Surge教程</a></li>
<li><a href="http://www.jianshu.com/p/de1eb844915d" target="_blank" rel="noopener">简化版 Surge教程</a><br>Surge 目前定价 328 元，另有 Mac 版（另外收费）。作为一款兼具「科学上网」功能的网络开发调试利器，它完全值这个价。觉得太贵的话，可以使用相对便宜的 <a href="https://itunes.apple.com/us/app/wingy-smart-proxy-for-http/id1148026741?mt=8" target="_blank" rel="noopener">Wingy</a> 或者 <a href="https://itunes.apple.com/us/app/potatso-2/id1162704202?mt=8" target="_blank" rel="noopener">Potatso</a>，不过二者都没有前者来得稳定好用。</li>
</ul>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html" target="_blank" rel="noopener">SSH 原理与运用（一）：远程登录</a></p>
<p><a href="http://mpc2008cn.github.io/2015/10/22/vps/" target="_blank" rel="noopener">Vultr 的 vps 搭建 shadowsocks 科学上网</a></p>
<p><a href="http://vc2tea.com/whats-shadowsocks/" target="_blank" rel="noopener">写给非专业人士看的 Shadowsocks 简介</a></p>
<p><a href="https://teddysun.com/342.html" target="_blank" rel="noopener">Shadowsocks Python 版一键安装脚本</a></p>
<p><a href="https://github.com/teddysun/shadowsocks_install" target="_blank" rel="noopener">teddysun’s GitHub: shadowsocks_install</a></p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>一键安装最新内核并开启 BBR 脚本</title>
    <url>/2016/12/24/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E5%86%85%E6%A0%B8%E5%B9%B6%E5%BC%80%E5%90%AF-BBR-%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>转载自<a href="https://teddysun.com/" target="_blank" rel="noopener">秋水逸冰</a> »  <a href="https://teddysun.com/489.html" target="_blank" rel="noopener">一键安装最新内核并开启 BBR 脚本</a></p>
<p><a href="https://teddysun.com/489.html" target="_blank" rel="noopener"><br><img src="https://teddysun.com/wp-content/uploads/2016/bbr.jpg" alt="一键安装最新内核并开启 BBR 脚本"></a></p>
<a id="more"></a>最近，Google 开源了其 TCP BBR 拥塞控制算法，并提交到了 Linux 内核，从 4.9 开始，Linux 内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。
根据实地测试，在部署了最新版内核并开启了 TCP BBR 的机器上，网速甚至可以提升好几个数量级。
于是我根据目前三大发行版的最新内核，开发了一键安装最新内核并开启 TCP BBR 脚本。

## 本脚本适用环境 

系统支持：CentOS 6+，Debian 7+，Ubuntu 12+
虚拟技术：OpenVZ 以外的，比如 KVM、Xen、VMware 等
内存要求：≥128M
日期　　：2018 年 06 月 09 日



### 关于本脚本 

1、本脚本已在 [**Vultr**](https://qiu.sh/vultr) 上的 VPS 全部测试通过。
2、当脚本检测到 VPS 的虚拟方式为 OpenVZ 时，会提示错误，并自动退出安装。
3、脚本运行完重启发现开不了机的，打开 VPS 后台控制面板的 VNC, 开机卡在 grub 引导, 手动选择内核即可。
4、由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。

### 使用方法 

使用root用户登录，运行以下命令：

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https:&#x2F;&#x2F;github.com&#x2F;teddysun&#x2F;across&#x2F;raw&#x2F;master&#x2F;bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; .&#x2F;bbr.sh</span><br></pre></td></tr></table></figure>
<p>安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。<br>重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure>
<p>查看内核版本，显示为最新版就表示 OK 了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>
<p>返回值一般为：<br>net.ipv4.tcp_available_congestion_control = bbr cubic reno<br>或者为：<br>net.ipv4.tcp_available_congestion_control = reno cubic bbr</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure>
<p>返回值一般为：<br>net.ipv4.tcp_congestion_control = bbr</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysctl net.core.default_qdisc</span><br></pre></td></tr></table></figure>
<p>返回值一般为：<br>net.core.default_qdisc = fq</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>
<p>返回值有 tcp_bbr 模块即说明 bbr 已启动。注意：并不是所有的 VPS 都会有此返回值，若没有也属正常。</p>
<h3 id="CentOS-下最新版内核-headers-安装方法"><a href="#CentOS-下最新版内核-headers-安装方法" class="headerlink" title="CentOS 下最新版内核 headers 安装方法"></a>CentOS 下最新版内核 headers 安装方法</h3><p>本来打算在脚本里直接安装 kernel-ml-headers，但会出现和原版内核 headers 冲突的问题。因此在这里添加一个脚本执行完后，手动安装最新版内核 headers 之教程。<br>执行以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum --enablerepo&#x3D;elrepo-kernel -y install kernel-ml-headers</span><br></pre></td></tr></table></figure>
<p>根据 CentOS 版本的不同，此时一般会出现类似于以下的错误提示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: kernel-ml-headers conflicts with kernel-headers-2.6.32-696.20.1.el6.x86_64</span><br><span class="line">Error: kernel-ml-headers conflicts with kernel-headers-3.10.0-693.17.1.el7.x86_64</span><br></pre></td></tr></table></figure>
<p>因此需要先卸载原版内核 headers ，然后再安装最新版内核 headers。执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum remove kernel-headers</span><br></pre></td></tr></table></figure>
<p>确认无误后，输入 y，回车开始卸载。注意，有时候这么操作还会卸载一些对内核 headers 依赖的安装包，比如 gcc、gcc-c++ 之类的。不过不要紧，我们可以在安装完最新版内核 headers 后再重新安装回来即可。<br>卸载完成后，再次执行上面给出的安装命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum --enablerepo&#x3D;elrepo-kernel -y install kernel-ml-headers</span><br></pre></td></tr></table></figure>
<p>成功安装后，再把那些之前对内核 headers 依赖的安装包，比如 gcc、gcc-c++ 之类的再安装一次即可。</p>
<p>为什么要安装最新版内核 headers 呢？<br>这是因为 shadowsocks-libev 版有个 tcp fast open 功能，如果不安装的话，这个功能是无法开启的。</p>
<h3 id="内核升级方法"><a href="#内核升级方法" class="headerlink" title="内核升级方法"></a>内核升级方法</h3><p><strong>如果是 CentOS 系统，执行如下命令即可升级内核：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install kernel-ml kernel-ml-devel</span><br></pre></td></tr></table></figure>
<p>如果你还手动安装了新版内核 headers ，那么还需要以下命令来升级 headers ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install kernel-ml-headers</span><br></pre></td></tr></table></figure>
<p>CentOS 6 的话，执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;^default&#x3D;.*&#x2F;default&#x3D;0&#x2F;g&#39; &#x2F;boot&#x2F;grub&#x2F;grub.conf</span><br></pre></td></tr></table></figure>
<p>CentOS 7 的话，执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grub2-set-default 0</span><br></pre></td></tr></table></figure>
<p><strong>如果是 Debian/Ubuntu 系统，则需要手动下载最新版内核来安装升级。</strong><br>去<a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/" target="_blank" rel="noopener">这里</a>下载最新版的内核 deb 安装包。<br>如果系统是 64 位，则下载 amd64 的 linux-image 中含有 generic 这个 deb 包；<br>如果系统是 32 位，则下载 i386 的 linux-image 中含有 generic 这个 deb 包；<br>安装的命令如下（以最新版的 64 位 4.12.4 举例而已，请替换为下载好的 deb 包）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dpkg -i linux-image-4.12.4-041204-generic_4.12.4-041204.201707271932_amd64.deb</span><br></pre></td></tr></table></figure>
<p>安装完成后，再执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;sbin&#x2F;update-grub</span><br></pre></td></tr></table></figure>
<p>最后，重启 VPS 即可。</p>
<h3 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h3><p>如果你使用的是 Google Cloud Platform （GCP）更换内核，有时会遇到重启后，整个磁盘变为只读的情况。只需执行以下命令即可恢复：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mount -o remount rw &#x2F;</span><br></pre></td></tr></table></figure>
<h3 id="更新日志："><a href="#更新日志：" class="headerlink" title="更新日志："></a>更新日志：</h3><p>2018 年 06 月 09 日：<br>1、修正：在 CentOS 系统下将 elrepo-kernel 默认启用，以解决在安装新内核后执行 yum update 再次安装旧内核的问题。</p>
<p>2018 年 05 月 12 日：<br>1、修正：在 Ubuntu 或 Debian 系统中某些情况下获取不到某个编译失败的安装包导致退出安装的问题。并且现在可以手动选择安装从 4.14 到最新版本的内核。</p>
<p>2018 年 02 月 24 日：<br>1、新增：手动安装最新版内核 headers 的教程。</p>
<p>2017 年 10 月 28 日：<br>1、更新：自动判断内核版本。如果内核版本已经大于或等于 4.9 且没有开启 BBR，脚本会直接设置好 BBR；<br>2、新增：脚本执行时会在当前目录下创建日志（install_bbr.log），方便查看及排错。</p>
<p>2017 年 02 月 22 日：<br>1、更新：自动获取最新版 4.10 内核。</p>
<p>2017 年 01 月 20 日：<br>1、新增：自动获取并下载安装最新版内核的功能。</p>
<p>2017 年 01 月 13 日：<br>1、更新：内核到 4.9.3。</p>
<p>2017 年 01 月 09 日：<br>1、更新：内核到 4.9.1。</p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p><a href="https://github.com/google/bbr/blob/master/Documentation/bbr-quick-start.md" target="_blank" rel="noopener">https://github.com/google/bbr/blob/master/Documentation/bbr-quick-start.md</a><br><a href="http://elrepo.org/tiki/tiki-index.php" target="_blank" rel="noopener">http://elrepo.org/tiki/tiki-index.php</a><br><a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/" target="_blank" rel="noopener">http://kernel.ubuntu.com/~kernel-ppa/mainline/</a></p>
<p>转载请注明：<a href="https://teddysun.com/" target="_blank" rel="noopener">秋水逸冰</a> » <a href="https://teddysun.com/489.html" target="_blank" rel="noopener">一键安装最新内核并开启 BBR 脚本</a></p>
]]></content>
      <categories>
        <category>VPS</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>Shadowsocks Python版一键安装脚本</title>
    <url>/2014/02/06/Shadowsocks-Python%E7%89%88%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>转载<a href="https://teddysun.com/" target="_blank" rel="noopener"> 秋水逸冰</a> » <a href="https://teddysun.com/342.html" target="_blank" rel="noopener">Shadowsocks Python版一键安装脚本</a></p>
<p><img src="https://teddysun.com/wp-content/uploads/2014/shadowsocks.png" alt=""></p>
<a id="more"></a>
<h1 id="本脚本适用环境："><a href="#本脚本适用环境：" class="headerlink" title="本脚本适用环境："></a><strong>本脚本适用环境：</strong></h1><p>系统支持：CentOS 6，7，Debian，Ubuntu<br>内存要求：≥128M<br>日期：2018 年 02 月 07 日</p>
<h1 id="关于本脚本："><a href="#关于本脚本：" class="headerlink" title="关于本脚本："></a><strong>关于本脚本：</strong></h1><p>一键安装 Python 版 Shadowsocks 的最新版。<br><strong>友情提示：如果你有问题，请先参考这篇<a href="https://teddysun.com/399.html" target="_blank" rel="noopener">《Shadowsocks Troubleshooting》</a>后再问。</strong></p>
<h1 id="默认配置："><a href="#默认配置：" class="headerlink" title="默认配置："></a>默认配置：</h1><p>服务器端口：自己设定（如不设定，默认从 9000-19999 之间随机生成）<br>密码：自己设定（如不设定，默认为 teddysun.com）<br>加密方式：自己设定（如不设定，默认为 aes-256-gcm）<br>备注：脚本默认创建单用户配置文件，如需配置多用户，安装完毕后参照下面的教程示例手动修改配置文件后重启即可。</p>
<h1 id="Shadowsocks-for-Windows-客户端下载："><a href="#Shadowsocks-for-Windows-客户端下载：" class="headerlink" title="Shadowsocks for Windows 客户端下载："></a><strong>Shadowsocks for Windows 客户端下载：</strong></h1><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p>
<h1 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a><strong>使用方法：</strong></h1><p>使用root用户登录，运行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks.sh https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;teddysun&#x2F;shadowsocks_install&#x2F;master&#x2F;shadowsocks.sh</span><br><span class="line">chmod +x shadowsocks.sh</span><br><span class="line">.&#x2F;shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br></pre></td></tr></table></figure>
<p>安装完成后，脚本提示如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Congratulations, Shadowsocks-python server install completed!</span><br><span class="line">Your Server IP        :your_server_ip</span><br><span class="line">Your Server Port      :your_server_port</span><br><span class="line">Your Password         :your_password</span><br><span class="line">Your Encryption Method:your_encryption_method</span><br><span class="line"></span><br><span class="line">Welcome to visit:https:&#x2F;&#x2F;teddysun.com&#x2F;342.html</span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></figure>
<h1 id="卸载方法："><a href="#卸载方法：" class="headerlink" title="卸载方法："></a><strong>卸载方法：</strong></h1><p>使用root用户登录，运行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;shadowsocks.sh uninstall</span><br></pre></td></tr></table></figure>
<p>单用户配置文件示例（2015 年 08 月 28 日修正）：<br>配置文件路径：/etc/shadowsocks.json</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;server_port&quot;:your_server_port,</span><br><span class="line">    &quot;local_address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;password&quot;:&quot;your_password&quot;,</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;your_encryption_method&quot;,</span><br><span class="line">    &quot;fast_open&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>多用户多端口配置文件示例（2015 年 08 月 28 日修正）：<br>配置文件路径：/etc/shadowsocks.json</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;local_address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;port_password&quot;:&#123;</span><br><span class="line">         &quot;8989&quot;:&quot;password0&quot;,</span><br><span class="line">         &quot;9001&quot;:&quot;password1&quot;,</span><br><span class="line">         &quot;9002&quot;:&quot;password2&quot;,</span><br><span class="line">         &quot;9003&quot;:&quot;password3&quot;,</span><br><span class="line">         &quot;9004&quot;:&quot;password4&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;your_encryption_method&quot;,</span><br><span class="line">    &quot;fast_open&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>若要开启IPv6代理，则第一行改为 <code>&quot;server&quot;:&quot;::&quot;,</code></p>
</blockquote>
<p>使用命令（2015 年 08 月 28 日修正）：<br>启动：/etc/init.d/shadowsocks start<br>停止：/etc/init.d/shadowsocks stop<br>重启：/etc/init.d/shadowsocks restart<br>状态：/etc/init.d/shadowsocks status</p>
<p><strong>更多版本 Shadowsocks 服务端一键安装脚本：</strong><br><a href="https://shadowsocks.be/9.html" target="_blank" rel="noopener">ShadowsocksR 版一键安装脚本（CentOS，Debian，Ubuntu）</a><br><a href="https://teddysun.com/357.html" target="_blank" rel="noopener">CentOS 下 Shadowsocks-libev 一键安装脚本</a><br><a href="https://teddysun.com/358.html" target="_blank" rel="noopener">Debian 下 Shadowsocks-libev 一键安装脚本</a><br><a href="https://teddysun.com/392.html" target="_blank" rel="noopener">Shadowsocks-go 一键安装脚本（CentOS，Debian，Ubuntu）</a><br><a href="https://teddysun.com/486.html" target="_blank" rel="noopener">Shadowsocks 一键安装脚本（四合一）</a></p>
<p><strong>参考链接：</strong><br><a href="https://teddysun.com/339.html" target="_blank" rel="noopener">https://teddysun.com/339.html</a></p>
<h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><p>（2018 年 02 月 07 日）<br>1、修改：将默认端口从 8989 改为从 9000-19999 之间随机生成。</p>
<p>（2017 年 07 月 21 日）<br>1、修正：默认加密方式从 aes-256-cfb 改为 aes-256-gcm（<a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">官方原版客户端</a>支持该加密方式）；<br>2、新增：安装时可选 16 种加密方式的其中之一。如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aes-256-gcm</span><br><span class="line">aes-192-gcm</span><br><span class="line">aes-128-gcm</span><br><span class="line">aes-256-ctr</span><br><span class="line">aes-192-ctr</span><br><span class="line">aes-128-ctr</span><br><span class="line">aes-256-cfb</span><br><span class="line">aes-192-cfb</span><br><span class="line">aes-128-cfb</span><br><span class="line">camellia-128-cfb</span><br><span class="line">camellia-192-cfb</span><br><span class="line">camellia-256-cfb</span><br><span class="line">chacha20-ietf-poly1305</span><br><span class="line">chacha20-ietf</span><br><span class="line">chacha20</span><br><span class="line">rc4-md5</span><br></pre></td></tr></table></figure>
<p>（2016 年 08 月 18 日）<br>1、修正：默认安装 Github 上 master 分支最新版本（目前为 2.9.0）。<br>2、修正：由于原作者已经不再更新 pip 下的源代码，故不再使用 pip 安装 Shadowsocks，而是改为下载 Github 的 master 分支来安装。如果在一段时间后，版本升级了，则先卸载，并再次执行本脚本就可以升级为最新版。</p>
<p>（2016 年 05 月 12 日）<br>1、新增在 CentOS 7 下的防火墙规则设置。</p>
<p>（2015 年 08 月 28 日）<br>1、修正控制脚本 /etc/init.d/shadowsocks 在 CentOS 7 无法查看 status 的问题。</p>
<p>（2015 年 08 月 01 日）<br>1、新增自定义服务器端口功能（如不设定，默认端口为 8989）；</p>
<p>（2015 年 03 月 10 日）<br>1、新增在 Debian、Ubuntu 下的一键安装；</p>
<p>（2015 年 01 月 21 日）<br>1、修正配置文件，与官方给出的 Sample 一致；<br>2、修改启动脚本，使用官方给出的后台启动和停止命令。</p>
<p>（2014 年 10 月 10 日）<br>跟作者<a href="https://github.com/clowwindy/shadowsocks/issues/195" target="_blank" rel="noopener">反馈</a>了多用户多端口问题，作者已更新 <a href="https://github.com/clowwindy/shadowsocks/wiki/Configure-Multiple-Users" target="_blank" rel="noopener">Wiki 页面</a>。本教程新增多用户多端口配置文件的 sample 。</p>
<p>（2014 年 09 月 24 日）<br>如何配置多用户？详见：<a href="https://github.com/clowwindy/shadowsocks/wiki/Configure-Multiple-Users" target="_blank" rel="noopener">这里</a><br>备注：Shadowsocks 已经支持多用户，在配置文件中增加不同的端口，对应不同的密码即可。</p>
<p>（2014 年 07 月 12 日）<br>1、修正获取公网 IP 时的一个问题。建议不要使用共享公网 IP 的 VPS 来搭建 Shadowsocks 服务。</p>
<p>（2014 年 05 月 29 日）<br>1、增加 chkconfig 配置，实现 service 命令。<br>2、配置文件名从 /etc/config.json 改为 /etc/shadowsocks.json（与官方的命名一致）。<br>3、配置文件中新增 workers ，值默认为 1（与官方配置同步）。</p>
<p>（2014 年 05 月 27 日）<br>1、修正开机自启动失效的问题。<br>2、优化是否后台启动成功的判断逻辑。</p>
<p>（2014 年 05 月 04 日）<br>1、修正对增加防火墙端口逻辑的判断bug，对于已经放行 8989 端口的情况下，则无需再次增加。<br>2、修正获取服务器 IP 的判断bug，对于多 IP 的 VPS 或服务器，默认只取第一个公网 IP 写到配置文件（/etc/config.json）里。<br>3、加入开机自启动。</p>
<p>转载请注明：<a href="https://teddysun.com/" target="_blank" rel="noopener">秋水逸冰</a> » <a href="https://teddysun.com/342.html" target="_blank" rel="noopener">Shadowsocks Python版一键安装脚本</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
</search>
